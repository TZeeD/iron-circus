Shader "SteelCircus/FX/Skills/AcridPuddleShader" {
	Properties {
		_Color ("Color", Vector) = (1,1,1,1)
		[NoScaleOffset] _MainTex ("Albedo/Alpha", 2D) = "white" {}
		[NoScaleOffset] _AlbedoRampTex ("Color Ramp Albedo", 2D) = "white" {}
		[NoScaleOffset] _ColorRampTex ("Color Ramp Bubbles", 2D) = "white" {}
		[NoScaleOffset] [Gamma] _Specular ("Specular Ramp (RGBA)", 2D) = "black" {}
		_SpecScale ("Spec Scale", Range(0, 1)) = 0.5
		_Glossiness ("Smoothness (* Specular Alpha)", Range(0, 1)) = 0.5
		[NoScaleOffset] _NormalMap ("Normal Map", 2D) = "bump" {}
		[NoScaleOffset] _Emission ("Emission", 2D) = "white" {}
		[Gamma] _EmissionScale ("Emission Scale", Float) = 1
		_AlphaThreshold ("Alpha Threshold", Range(0, 1)) = 0.2
		_BuildUp ("Buildup", Range(0, 1)) = 1
		_NumTilesU ("Num Tiles U", Float) = 1
		_NumTilesV ("Num Tiles V", Float) = 1
		_Randomization ("Randomization", Vector) = (1.35232,1.54565,1.532697,1.229199)
		_BubbleDurationMin ("Bubble Min Duration", Float) = 0.5
		_BubbleDurationMax ("Bubble Max Duration", Float) = 0.5
		_BubbleParams ("Bubble params", Vector) = (1.75,2,0.5,0.5)
		_RandomizationPhase ("Bubble Phase Randomization", Vector) = (1.35232,1.54565,1.532697,1.229199)
		_Mask ("Mask out (percent)", Range(0, 1)) = 1
		_RandomizationMask ("Mask Randomization", Vector) = (1.35232,1.54565,1.532697,1.229199)
		_AnimIntensity ("Anim. Intensity", Range(0, 1)) = 0.2
		_BubbleDrift ("Bubble Drift", Float) = 0
		_AnimScale ("Global Anim. Scale", Range(0, 1)) = 1
	}
	SubShader {
		LOD 200
		Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			LOD 200
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZWrite Off
			GpuProgramID 43789
			Program "vp" {
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[42];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_5[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat0.x = u_xlat2.y * u_xlat2.y;
					    u_xlat0.x = u_xlat2.x * u_xlat2.x + (-u_xlat0.x);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    vs_TEXCOORD4.xyz = unity_SHC.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					layout(std140) uniform UnityLightmaps {
						vec4 unity_LightmapST;
						vec4 unused_3_1;
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					in  vec4 in_TEXCOORD1;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec4 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
					    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_1_0[3];
						vec4 unity_4LightPosX0;
						vec4 unity_4LightPosY0;
						vec4 unity_4LightPosZ0;
						vec4 unity_4LightAtten0;
						vec4 unity_LightColor[8];
						vec4 unused_1_6[34];
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_1_11[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_2_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_2_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					out vec4 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out float vs_TEXCOORD5;
					out vec4 vs_TEXCOORD7;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					float u_xlat15;
					float u_xlat16;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat0.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD5 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat15 = inversesqrt(u_xlat15);
					    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    u_xlat15 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.x = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat2.y = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat2.z = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat16 = inversesqrt(u_xlat16);
					    u_xlat2 = vec4(u_xlat16) * u_xlat2.xyzz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
					    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
					    u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.w = u_xlat0.x;
					    vs_TEXCOORD1.z = u_xlat2.x;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD2.w = u_xlat0.y;
					    vs_TEXCOORD2.z = u_xlat2.y;
					    vs_TEXCOORD3.w = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat2.w;
					    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
					    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
					    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
					    u_xlat4 = u_xlat2.yyyy * u_xlat3;
					    u_xlat3 = u_xlat3 * u_xlat3;
					    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
					    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
					    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
					    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
					    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
					    u_xlat3 = inversesqrt(u_xlat0);
					    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
					    u_xlat1 = u_xlat1 * u_xlat3;
					    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
					    u_xlat0 = u_xlat0 * u_xlat1;
					    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
					    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    u_xlat15 = u_xlat2.y * u_xlat2.y;
					    u_xlat15 = u_xlat2.x * u_xlat2.x + (-u_xlat15);
					    u_xlat1 = u_xlat2.ywzx * u_xlat2;
					    u_xlat2.x = dot(unity_SHBr, u_xlat1);
					    u_xlat2.y = dot(unity_SHBg, u_xlat1);
					    u_xlat2.z = dot(unity_SHBb, u_xlat1);
					    u_xlat1.xyz = unity_SHC.xyz * vec3(u_xlat15) + u_xlat2.xyz;
					    vs_TEXCOORD4.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat32;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlatb48 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb48){
					        u_xlatb48 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat0.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat48 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat49 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat48, u_xlat49);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat48 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat49 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat2.xyz = vec3(u_xlat49) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat49 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat49 = u_xlat49 + u_xlat49;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat49)) + (-u_xlat1.xyz);
					    u_xlat9.xyz = vec3(u_xlat48) * _LightColor0.xyz;
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.x = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat32 = u_xlat16.x + u_xlat16.x;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat32)) + u_xlat1.xyz;
					    u_xlat32 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat16.x = u_xlat16.x;
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.y = (-u_xlat16.x) + 1.0;
					    u_xlat1.zw = u_xlat1.xy * u_xlat1.xy;
					    u_xlat16.xz = u_xlat1.xy * u_xlat1.xw;
					    u_xlat7.xy = u_xlat1.zy * u_xlat16.xz;
					    u_xlat16.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat16.x = u_xlat16.x + 1.0;
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat48 = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat5.xyz * vec3(u_xlat48);
					    u_xlat1.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xzw = vec3(u_xlat32) * u_xlat9.xyz;
					    u_xlat2.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat16.xxx;
					    u_xlat2.xyz = u_xlat7.yyy * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xzw + u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlatb49 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb49){
					        u_xlatb49 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat49 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat50 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat49, u_xlat50);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat49 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat50 = inversesqrt(u_xlat50);
					    u_xlat3.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					    u_xlat50 = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat51 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat51 = u_xlat51 + u_xlat51;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat51)) + (-u_xlat2.xyz);
					    u_xlat9.xyz = vec3(u_xlat49) * _LightColor0.xyz;
					    u_xlatb49 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb49){
					        u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat49 = inversesqrt(u_xlat49);
					        u_xlat10.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat49 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat49 = min(u_xlat11.z, u_xlat49);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat49) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-vec2(u_xlat50)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat49 = u_xlat50 * u_xlat11.x;
					    u_xlat49 = u_xlat49 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat49);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat49);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat32 = u_xlat50 * u_xlat50;
					    u_xlat48 = u_xlat32 * u_xlat32;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat49 = u_xlat32 * u_xlat32 + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat49 + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat49 = u_xlat50 * u_xlat50 + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat49;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.x = u_xlat16.x * u_xlat17.x;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = u_xlat50 * u_xlat32;
					    u_xlat32 = (-u_xlat32) * u_xlat11.y + 1.0;
					    u_xlat48 = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat48 = u_xlat48 + 1.0;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat6.xyz * u_xlat16.xxx;
					    u_xlat2.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = u_xlat9.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat17.x = (-u_xlat33) + 1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat3.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + vec3(u_xlat48);
					    u_xlat17.xyz = u_xlat17.xxx * u_xlat3.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat17.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat52, u_xlat53);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat52 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat53 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat53 = inversesqrt(u_xlat53);
					    u_xlat3.xyz = vec3(u_xlat53) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat53 = u_xlat53 + u_xlat53;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat53)) + (-u_xlat2.xyz);
					    u_xlat10.xyz = vec3(u_xlat52) * _LightColor0.xyz;
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat52 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat52 = u_xlat52 * u_xlat8.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat52);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18) + 1.0;
					    u_xlat52 = u_xlat51 * u_xlat51;
					    u_xlat52 = u_xlat52 * u_xlat52;
					    u_xlat51 = u_xlat51 * u_xlat52;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat52 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat52 * u_xlat52;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat52 = u_xlat52 * u_xlat2.x;
					    u_xlat34 = u_xlat34 * u_xlat52 + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18 * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat2.x = (-u_xlat51) + 1.0;
					    u_xlat19 = abs(u_xlat1.x) * u_xlat2.x + u_xlat51;
					    u_xlat2.x = u_xlat18 * u_xlat2.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat18 * u_xlat19 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat19 = u_xlat35 * u_xlat2.x + (-u_xlat35);
					    u_xlat35 = u_xlat19 * u_xlat35 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat2.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18!=0.0;
					    u_xlat18 = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat10.xyz;
					    u_xlat1.xyz = u_xlat10.xyz * u_xlat1.xxx;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat52) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					vec2 u_xlat39;
					float u_xlat41;
					float u_xlat43;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					float u_xlat61;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat1.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat51 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat51 = _Time.y * _AnimScale + u_xlat51;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat37 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat37 = u_xlat52 + u_xlat37;
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat4.x = u_xlat54 * 0.5 + u_xlat2.z;
					    u_xlat54 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat4.y = u_xlat52 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat37<_Mask;
					    u_xlat4.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat52 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat37 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat37 = u_xlat37 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat37;
					    u_xlat37 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat37 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat37;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.x = u_xlat55 * 0.5 + u_xlat5.x;
					    u_xlat55 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat37 = u_xlat55 * _AnimIntensity + u_xlat37;
					    u_xlat37 = u_xlat52 * _BubbleDrift + u_xlat37;
					    u_xlat37 = sin(u_xlat37);
					    u_xlat6.y = u_xlat37 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat54<_Mask;
					    u_xlat6.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat37 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat37 = u_xlat37 + 0.5;
					    u_xlat37 = u_xlat37 / u_xlat54;
					    u_xlat54 = floor(u_xlat37);
					    u_xlat37 = fract(u_xlat37);
					    u_xlat55 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat54;
					    u_xlat5.x = u_xlat37 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat39.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat54 = u_xlat39.x * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat37 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat5.y = u_xlat54 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat5.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat54 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.x = u_xlat57 * 0.5 + u_xlat7.x;
					    u_xlat57 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat8.y = u_xlat55 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat8.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat55 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat56;
					    u_xlat7.x = u_xlat55 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat41 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat56 = u_xlat41 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.y = u_xlat56 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat7.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat56 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.x = u_xlat59 * 0.5 + u_xlat9.x;
					    u_xlat59 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat57 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat10.y = u_xlat57 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat10.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat57 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat20;
					    u_xlat58 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat58;
					    u_xlat9.x = u_xlat57 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat43 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat58 = u_xlat43 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.y = u_xlat58 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat9.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat58 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat20;
					    u_xlat59 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat61 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat61 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat61 = u_xlat58 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat11.x = u_xlat61 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat59;
					    u_xlat2.x = u_xlat58 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat11.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat19.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat2.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat12.x = u_xlat20 * 0.5 + u_xlat2.z;
					    u_xlat36 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat36 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat2.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat12.y = u_xlat19.x * 0.5 + u_xlat2.w;
					    u_xlat19.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * _BubbleParams.w;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat4.z = u_xlat51 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat51 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat6.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat6.z<u_xlat4.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat37);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat5.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat5.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat54);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat8.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat55);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat7.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat7.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat7.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat56);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat10.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat57);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat9.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat58);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat11.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat2.x);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat12.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat12.z<u_xlat19.z;
					    u_xlat2.xyz = (bool(u_xlatb51)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat51 = u_xlat2.z * _BubbleParams.y;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat52 = (-u_xlat51) * u_xlat51 + 1.0;
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat36 = (-u_xlat51) + 1.0;
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.z;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = min(u_xlat36, 1.0);
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * 3.1415;
					    u_xlat51 = cos(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.600000024 + 0.5;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat52 = u_xlat52 + (-u_xlat36);
					    u_xlat3.z = u_xlat51 * u_xlat52 + u_xlat36;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat51 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xy = vec2(u_xlat51) * u_xlat2.xy;
					    u_xlat51 = u_xlat3.z * u_xlat3.z;
					    u_xlat52 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat2.xy;
					    u_xlatb51 = u_xlat51!=0.0;
					    u_xlat51 = u_xlatb51 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat51) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat51 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat52 = (-u_xlat36) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat36 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat36 = min(abs(u_xlat36), 1.0);
					    u_xlat36 = _BuildUp * 2.0 + (-u_xlat36);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = (-u_xlat36) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat36) + (-vec2(_AlphaThreshold));
					    u_xlat36 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat36);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat36 = log2(u_xlat3.x);
					    u_xlat36 = u_xlat36 * 1.5;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat3.x = (-u_xlat36) + 1.0;
					    u_xlat5.x = u_xlat52 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat39.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat39.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat39.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat52 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb54 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlat52 = (u_xlatb54) ? 0.0 : u_xlat52;
					    u_xlat54 = log2(_AlphaThreshold);
					    u_xlat54 = u_xlat54 * 0.300000012;
					    u_xlat54 = exp2(u_xlat54);
					    u_xlat54 = (-u_xlat54) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat54) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat54 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat54 + u_xlat52;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat52 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat52 = min(u_xlat52, 1.0);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat7.z = sqrt(u_xlat52);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat51) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat36) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat51 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat2.xyz;
					    u_xlatb51 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb51){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat0.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat52, u_xlat53);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat52 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat54 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat54 = u_xlat54 + u_xlat54;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat54)) + (-u_xlat1.xyz);
					    u_xlat9.xyz = vec3(u_xlat52) * _LightColor0.xyz;
					    if(u_xlatb51){
					        u_xlatb51 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb51)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat51 = u_xlat10.y * 0.25;
					        u_xlat52 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat54 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat51 = max(u_xlat51, u_xlat52);
					        u_xlat10.x = min(u_xlat54, u_xlat51);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat2);
					        u_xlat11.y = dot(u_xlat12, u_xlat2);
					        u_xlat11.z = dot(u_xlat10, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat2);
					        u_xlat11.y = dot(unity_SHAg, u_xlat2);
					        u_xlat11.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat10.xyz = u_xlat11.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb51 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb51){
					        u_xlat51 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat51 = inversesqrt(u_xlat51);
					        u_xlat11.xyz = vec3(u_xlat51) * u_xlat8.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat51 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat51 = min(u_xlat12.z, u_xlat51);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat51) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat8.xyz;
					    }
					    u_xlat51 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat51 = u_xlat51 * u_xlat7.z;
					    u_xlat51 = u_xlat51 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat51);
					    u_xlat52 = u_xlat11.w + -1.0;
					    u_xlat52 = unity_SpecCube0_HDR.w * u_xlat52 + 1.0;
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_SpecCube0_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat52);
					    u_xlatb53 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb53){
					        u_xlatb53 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb53){
					            u_xlat53 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat53 = inversesqrt(u_xlat53);
					            u_xlat13.xyz = vec3(u_xlat53) * u_xlat8.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat53 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat53 = min(u_xlat14.z, u_xlat53);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat13.xyz * vec3(u_xlat53) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat51);
					        u_xlat51 = u_xlat0.w + -1.0;
					        u_xlat51 = unity_SpecCube1_HDR.w * u_xlat51 + 1.0;
					        u_xlat51 = log2(u_xlat51);
					        u_xlat51 = u_xlat51 * unity_SpecCube1_HDR.y;
					        u_xlat51 = exp2(u_xlat51);
					        u_xlat51 = u_xlat51 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat51);
					        u_xlat8.xyz = vec3(u_xlat52) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat17.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat52 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat53 = u_xlat52 + u_xlat52;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat53)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat52 = u_xlat52;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat52) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat17.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat12.xyz;
					    u_xlat0.xyz = u_xlat10.xyz * u_xlat17.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb53 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb53)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat53 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat54 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat53, u_xlat54);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat53 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat53 = clamp(u_xlat53, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat3.x = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat3.x = inversesqrt(u_xlat3.x);
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat8.xyz;
					    u_xlat55 = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat57 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat57 = u_xlat57 + u_xlat57;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat57)) + (-u_xlat2.xyz);
					    u_xlat9.xyz = vec3(u_xlat53) * _LightColor0.xyz;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat10.y * 0.25;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat57 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat52 = max(u_xlat52, u_xlat53);
					        u_xlat10.x = min(u_xlat57, u_xlat52);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat3);
					        u_xlat11.y = dot(u_xlat12, u_xlat3);
					        u_xlat11.z = dot(u_xlat10, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat3);
					        u_xlat11.y = dot(unity_SHAg, u_xlat3);
					        u_xlat11.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat10.xyz = u_xlat11.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat8.xyz;
					    }
					    u_xlat12.xy = (-vec2(u_xlat55)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat52 = u_xlat55 * u_xlat12.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xzw = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat8.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat52);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat18 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat55 * u_xlat55;
					    u_xlat51 = u_xlat34 * u_xlat34;
					    u_xlat18 = u_xlat18 * u_xlat18;
					    u_xlat52 = u_xlat34 * u_xlat34 + -1.0;
					    u_xlat18 = u_xlat18 * u_xlat52 + 1.00001001;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat17.x = max(u_xlat17.x, 0.100000001);
					    u_xlat52 = u_xlat55 * u_xlat55 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat52;
					    u_xlat18 = u_xlat18 * u_xlat18;
					    u_xlat17.x = u_xlat17.x * u_xlat18;
					    u_xlat17.x = u_xlat17.x * 4.0;
					    u_xlat17.x = u_xlat51 / u_xlat17.x;
					    u_xlat34 = u_xlat55 * u_xlat34;
					    u_xlat34 = (-u_xlat34) * u_xlat12.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat17.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat9.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat10.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat17.xyz = u_xlat12.xzw * vec3(u_xlat34);
					    u_xlat35 = (-u_xlat35) + 1.0;
					    u_xlat35 = u_xlat35 * u_xlat35;
					    u_xlat35 = u_xlat35 * u_xlat35;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat35) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec4 u_xlat13;
					vec3 u_xlat14;
					vec3 u_xlat15;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					bvec3 u_xlatb17;
					vec3 u_xlat18;
					float u_xlat19;
					bool u_xlatb19;
					float u_xlat20;
					vec3 u_xlat21;
					float u_xlat22;
					float u_xlat36;
					float u_xlat37;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					vec2 u_xlat42;
					float u_xlat44;
					float u_xlat46;
					float u_xlat54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					bool u_xlatb61;
					float u_xlat62;
					bool u_xlatb62;
					float u_xlat63;
					bool u_xlatb63;
					float u_xlat64;
					float u_xlat65;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat54 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat54 = inversesqrt(u_xlat54);
					    u_xlat2.xyz = vec3(u_xlat54) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat55 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat22 = _AnimScale * _Time.y;
					    u_xlat55 = _Time.y * _AnimScale + u_xlat55;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat40 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat40 = u_xlat56 + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat5.x = u_xlat58 * 0.5 + u_xlat3.z;
					    u_xlat58 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat5.y = u_xlat56 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat40<_Mask;
					    u_xlat5.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat56 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat22;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat40;
					    u_xlat40 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat40 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat40;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat7.x = u_xlat59 * 0.5 + u_xlat6.x;
					    u_xlat59 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat59 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat56 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat58<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat22;
					    u_xlat58 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat58;
					    u_xlat58 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat59 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat58;
					    u_xlat6.x = u_xlat40 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat42.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat58 = u_xlat42.x * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat40 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat6.y = u_xlat58 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat6.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat58 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat22;
					    u_xlat59 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat61 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat61 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat61 = u_xlat58 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat9.x = u_xlat61 * 0.5 + u_xlat8.x;
					    u_xlat61 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat59 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat9.y = u_xlat59 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat9.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat59 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat22;
					    u_xlat60 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat60;
					    u_xlat8.x = u_xlat59 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat44 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat60 = u_xlat44 * _AnimIntensity + u_xlat60;
					    u_xlat60 = u_xlat59 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat8.y = u_xlat60 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat8.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat60 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + u_xlat22;
					    u_xlat61 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat61 = u_xlat61 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat60 = u_xlat60 + 0.5;
					    u_xlat60 = u_xlat60 / u_xlat61;
					    u_xlat61 = floor(u_xlat60);
					    u_xlat60 = fract(u_xlat60);
					    u_xlat62 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat62 = u_xlat61 + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + 0.5;
					    u_xlat63 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat63 = u_xlat63 * _AnimIntensity + u_xlat61;
					    u_xlat63 = u_xlat60 * _BubbleDrift + u_xlat63;
					    u_xlat63 = sin(u_xlat63);
					    u_xlat11.x = u_xlat63 * 0.5 + u_xlat10.x;
					    u_xlat63 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat61 = u_xlat63 * _AnimIntensity + u_xlat61;
					    u_xlat61 = u_xlat60 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat11.y = u_xlat61 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb61 = u_xlat62<_Mask;
					    u_xlat11.xy = (bool(u_xlatb61)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat61 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + u_xlat22;
					    u_xlat62 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + 0.5;
					    u_xlat62 = u_xlat62 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat61 = u_xlat61 + 0.5;
					    u_xlat61 = u_xlat61 / u_xlat62;
					    u_xlat62 = floor(u_xlat61);
					    u_xlat61 = fract(u_xlat61);
					    u_xlat63 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat63 = u_xlat62 + u_xlat63;
					    u_xlat63 = sin(u_xlat63);
					    u_xlat63 = u_xlat63 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat62;
					    u_xlat10.x = u_xlat61 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat46 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat62 = u_xlat46 * _AnimIntensity + u_xlat62;
					    u_xlat62 = u_xlat61 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat10.y = u_xlat62 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb62 = u_xlat63<_Mask;
					    u_xlat10.xy = (bool(u_xlatb62)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat62 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + u_xlat22;
					    u_xlat63 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat63 = sin(u_xlat63);
					    u_xlat63 = u_xlat63 * 0.5 + 0.5;
					    u_xlat63 = u_xlat63 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat62 = u_xlat62 + 0.5;
					    u_xlat62 = u_xlat62 / u_xlat63;
					    u_xlat63 = floor(u_xlat62);
					    u_xlat62 = fract(u_xlat62);
					    u_xlat64 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat64 = u_xlat63 + u_xlat64;
					    u_xlat64 = sin(u_xlat64);
					    u_xlat64 = u_xlat64 * 0.5 + 0.5;
					    u_xlat65 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat65 = u_xlat65 * _AnimIntensity + u_xlat63;
					    u_xlat65 = u_xlat62 * _BubbleDrift + u_xlat65;
					    u_xlat65 = sin(u_xlat65);
					    u_xlat12.x = u_xlat65 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat63;
					    u_xlat3.x = u_xlat62 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb63 = u_xlat64<_Mask;
					    u_xlat12.xy = (bool(u_xlatb63)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat22;
					    u_xlat21.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat21.x = sin(u_xlat21.x);
					    u_xlat21.x = u_xlat21.x * 0.5 + 0.5;
					    u_xlat21.x = u_xlat21.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat21.x;
					    u_xlat21.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat21.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat21.x;
					    u_xlat22 = u_xlat3.x * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat13.x = u_xlat22 * 0.5 + u_xlat3.z;
					    u_xlat39 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat21.x = u_xlat39 * _AnimIntensity + u_xlat21.x;
					    u_xlat21.x = u_xlat3.x * _BubbleDrift + u_xlat21.x;
					    u_xlat21.x = sin(u_xlat21.x);
					    u_xlat13.y = u_xlat21.x * 0.5 + u_xlat3.w;
					    u_xlat21.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat21.xy;
					    u_xlat21.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat21.x = dot(u_xlat21.xy, u_xlat21.xy);
					    u_xlat21.x = sqrt(u_xlat21.x);
					    u_xlat55 = log2(u_xlat55);
					    u_xlat55 = u_xlat55 * _BubbleParams.w;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat5.z = u_xlat55 * _BubbleParams.x + u_xlat21.x;
					    u_xlat21.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat55 = dot(u_xlat21.xy, u_xlat21.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat56);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat7.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat7.z<u_xlat5.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat40);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat6.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat6.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat6.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat58);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat9.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat9.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat9.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat59);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat8.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat8.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat8.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat60);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat11.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat11.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat11.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat61);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat10.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat10.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat10.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat62);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat12.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat12.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat12.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat3.x);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat13.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat13.z<u_xlat21.z;
					    u_xlat3.xyz = (bool(u_xlatb55)) ? u_xlat13.xyz : u_xlat21.xyz;
					    u_xlat55 = u_xlat3.z * _BubbleParams.y;
					    u_xlat55 = clamp(u_xlat55, 0.0, 1.0);
					    u_xlat56 = (-u_xlat55) * u_xlat55 + 1.0;
					    u_xlat56 = sqrt(u_xlat56);
					    u_xlat39 = (-u_xlat55) + 1.0;
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.z;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = min(u_xlat39, 1.0);
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * 3.1415;
					    u_xlat55 = cos(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.600000024 + 0.5;
					    u_xlat55 = clamp(u_xlat55, 0.0, 1.0);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat55 = float(1.0) / u_xlat55;
					    u_xlat56 = u_xlat56 + (-u_xlat39);
					    u_xlat4.z = u_xlat55 * u_xlat56 + u_xlat39;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat55 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat3.xy = vec2(u_xlat55) * u_xlat3.xy;
					    u_xlat55 = u_xlat4.z * u_xlat4.z;
					    u_xlat56 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat56 = sqrt(u_xlat56);
					    u_xlat4.xy = vec2(u_xlat56) * u_xlat3.xy;
					    u_xlatb55 = u_xlat55!=0.0;
					    u_xlat55 = u_xlatb55 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat55) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat55 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat56 = (-u_xlat39) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat39 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat39 = min(abs(u_xlat39), 1.0);
					    u_xlat39 = _BuildUp * 2.0 + (-u_xlat39);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = (-u_xlat39) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat39) + (-vec2(_AlphaThreshold));
					    u_xlat39 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat39);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat39 = log2(u_xlat4.x);
					    u_xlat39 = u_xlat39 * 1.5;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat4.x = (-u_xlat39) + 1.0;
					    u_xlat6.x = u_xlat56 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat42.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat42.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat42.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat56 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb58 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlat56 = (u_xlatb58) ? 0.0 : u_xlat56;
					    u_xlat58 = log2(_AlphaThreshold);
					    u_xlat58 = u_xlat58 * 0.300000012;
					    u_xlat58 = exp2(u_xlat58);
					    u_xlat58 = (-u_xlat58) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat58) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat58 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat58 + u_xlat56;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat56 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat56 = min(u_xlat56, 1.0);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat8.z = sqrt(u_xlat56);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat55) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat39) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat55 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat3.xyz = vec3(u_xlat55) * u_xlat3.xyz;
					    u_xlatb55 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb55){
					        u_xlatb56 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb56)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat56 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat57 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat56, u_xlat57);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat56 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat56 = clamp(u_xlat56, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat3.x = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat3.x = inversesqrt(u_xlat3.x);
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat58 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat58 = u_xlat58 + u_xlat58;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat58)) + (-u_xlat2.xyz);
					    u_xlat10.xyz = vec3(u_xlat56) * _LightColor0.xyz;
					    if(u_xlatb55){
					        u_xlatb55 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat11.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat11.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat11.xyz;
					        u_xlat11.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat11.xyz;
					        u_xlat11.xyz = u_xlat11.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat11.xyz = (bool(u_xlatb55)) ? u_xlat11.xyz : u_xlat0.xyz;
					        u_xlat11.xyz = u_xlat11.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat11.yzw = u_xlat11.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat55 = u_xlat11.y * 0.25;
					        u_xlat56 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat58 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat55 = max(u_xlat55, u_xlat56);
					        u_xlat11.x = min(u_xlat58, u_xlat55);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat11.xzw);
					        u_xlat13.xyz = u_xlat11.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat13 = texture(unity_ProbeVolumeSH, u_xlat13.xyz);
					        u_xlat11.xyz = u_xlat11.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat12.x = dot(u_xlat12, u_xlat3);
					        u_xlat12.y = dot(u_xlat13, u_xlat3);
					        u_xlat12.z = dot(u_xlat11, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat12.x = dot(unity_SHAr, u_xlat3);
					        u_xlat12.y = dot(unity_SHAg, u_xlat3);
					        u_xlat12.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat11.xyz = u_xlat12.xyz + vs_TEXCOORD4.xyz;
					    u_xlat11.xyz = max(u_xlat11.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb55 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb55){
					        u_xlat55 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat55 = inversesqrt(u_xlat55);
					        u_xlat12.xyz = vec3(u_xlat55) * u_xlat9.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					        u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					        u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat13;
					            hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					            hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					            hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					            u_xlat13 = hlslcc_movcTemp;
					        }
					        u_xlat55 = min(u_xlat13.y, u_xlat13.x);
					        u_xlat55 = min(u_xlat13.z, u_xlat55);
					        u_xlat13.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat12.xyz = u_xlat12.xyz * vec3(u_xlat55) + u_xlat13.xyz;
					    } else {
					        u_xlat12.xyz = u_xlat9.xyz;
					    }
					    u_xlat55 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat55 = u_xlat55 * u_xlat8.x;
					    u_xlat55 = u_xlat55 * 6.0;
					    u_xlat12 = textureLod(unity_SpecCube0, u_xlat12.xyz, u_xlat55);
					    u_xlat56 = u_xlat12.w + -1.0;
					    u_xlat56 = unity_SpecCube0_HDR.w * u_xlat56 + 1.0;
					    u_xlat56 = log2(u_xlat56);
					    u_xlat56 = u_xlat56 * unity_SpecCube0_HDR.y;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = u_xlat56 * unity_SpecCube0_HDR.x;
					    u_xlat13.xyz = u_xlat12.xyz * vec3(u_xlat56);
					    u_xlatb57 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb57){
					        u_xlatb57 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb57){
					            u_xlat57 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat57 = inversesqrt(u_xlat57);
					            u_xlat14.xyz = vec3(u_xlat57) * u_xlat9.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat14.xyz;
					            u_xlat16.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat16.xyz = u_xlat16.xyz / u_xlat14.xyz;
					            u_xlatb17.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat14.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat15;
					                hlslcc_movcTemp.x = (u_xlatb17.x) ? u_xlat15.x : u_xlat16.x;
					                hlslcc_movcTemp.y = (u_xlatb17.y) ? u_xlat15.y : u_xlat16.y;
					                hlslcc_movcTemp.z = (u_xlatb17.z) ? u_xlat15.z : u_xlat16.z;
					                u_xlat15 = hlslcc_movcTemp;
					            }
					            u_xlat57 = min(u_xlat15.y, u_xlat15.x);
					            u_xlat57 = min(u_xlat15.z, u_xlat57);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat14.xyz * vec3(u_xlat57) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat55);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat56) * u_xlat12.xyz + (-u_xlat0.xyz);
					        u_xlat13.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat18.xyz = u_xlat1.xyz * vec3(u_xlat54) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat18.xyz, u_xlat18.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat18.xyz = u_xlat18.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat19 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat3.xyz, u_xlat18.xyz);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat18.x = dot(_WorldSpaceLightPos0.xyz, u_xlat18.xyz);
					    u_xlat18.x = clamp(u_xlat18.x, 0.0, 1.0);
					    u_xlat36 = u_xlat18.x * u_xlat18.x;
					    u_xlat36 = dot(vec2(u_xlat36), u_xlat8.xx);
					    u_xlat36 = u_xlat36 + -0.5;
					    u_xlat54 = (-u_xlat19) + 1.0;
					    u_xlat55 = u_xlat54 * u_xlat54;
					    u_xlat55 = u_xlat55 * u_xlat55;
					    u_xlat54 = u_xlat54 * u_xlat55;
					    u_xlat54 = u_xlat36 * u_xlat54 + 1.0;
					    u_xlat55 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat55 * u_xlat55;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat55 = u_xlat55 * u_xlat2.x;
					    u_xlat36 = u_xlat36 * u_xlat55 + 1.0;
					    u_xlat36 = u_xlat36 * u_xlat54;
					    u_xlat36 = u_xlat19 * u_xlat36;
					    u_xlat54 = u_xlat8.x * u_xlat8.x;
					    u_xlat54 = max(u_xlat54, 0.00200000009);
					    u_xlat2.x = (-u_xlat54) + 1.0;
					    u_xlat20 = abs(u_xlat1.x) * u_xlat2.x + u_xlat54;
					    u_xlat2.x = u_xlat19 * u_xlat2.x + u_xlat54;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat19 * u_xlat20 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat54 * u_xlat54;
					    u_xlat20 = u_xlat37 * u_xlat2.x + (-u_xlat37);
					    u_xlat37 = u_xlat20 * u_xlat37 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat37 = u_xlat37 * u_xlat37 + 1.00000001e-07;
					    u_xlat37 = u_xlat2.x / u_xlat37;
					    u_xlat1.x = u_xlat37 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat19 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat54 = u_xlat54 * u_xlat54 + 1.0;
					    u_xlat54 = float(1.0) / u_xlat54;
					    u_xlat19 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb19 = u_xlat19!=0.0;
					    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat19 * u_xlat1.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat10.xyz * vec3(u_xlat36) + u_xlat11.xyz;
					    u_xlat1.xyz = u_xlat10.xyz * u_xlat1.xxx;
					    u_xlat18.x = (-u_xlat18.x) + 1.0;
					    u_xlat36 = u_xlat18.x * u_xlat18.x;
					    u_xlat36 = u_xlat36 * u_xlat36;
					    u_xlat18.x = u_xlat18.x * u_xlat36;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat18.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat18.xyz = u_xlat13.xyz * vec3(u_xlat54);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat55) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat18.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat48 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat48 = u_xlat48 + u_xlat48;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat48)) + (-u_xlat1.xyz);
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat48 = log2(u_xlat9.w);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.y;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat48);
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat49 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat50 = u_xlat49 + u_xlat49;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat50)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat49 = u_xlat49;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat49) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat16.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * _LightColor0.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat9.xyz * u_xlat16.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					    u_xlat17.z = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat50 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat50 = u_xlat50 + u_xlat50;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat50)) + (-u_xlat2.xyz);
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat50 = log2(u_xlat9.w);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.y;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat50);
					    u_xlatb50 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb50){
					        u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat50 = inversesqrt(u_xlat50);
					        u_xlat10.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat50 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat50 = min(u_xlat11.z, u_xlat50);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-u_xlat17.zz) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat50 = u_xlat17.z * u_xlat11.x;
					    u_xlat50 = u_xlat50 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat50);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat50);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat16.y = u_xlat17.z * u_xlat17.z;
					    u_xlat48 = u_xlat16.y * u_xlat16.y;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat2.x = u_xlat16.y * u_xlat16.y + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat2.x + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat2.x = u_xlat17.z * u_xlat17.z + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat2.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.xy = u_xlat17.xz * u_xlat16.xy;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = (-u_xlat16.y) * u_xlat11.y + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat16.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat9.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat16.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat33 = (-u_xlat33) + 1.0;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat33) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat16.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					vec3 u_xlat18;
					bool u_xlatb18;
					vec3 u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat36;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat52 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat52 = u_xlat52 + u_xlat52;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat52)) + (-u_xlat2.xyz);
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat52 = log2(u_xlat10.w);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.x;
					    u_xlatb53 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb53){
					        u_xlat53 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat53 = inversesqrt(u_xlat53);
					        u_xlat11.xyz = vec3(u_xlat53) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat53 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat53 = min(u_xlat12.z, u_xlat53);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat53) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat53 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat53 = u_xlat53 * u_xlat8.x;
					    u_xlat53 = u_xlat53 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat53);
					    u_xlat54 = u_xlat11.w + -1.0;
					    u_xlat54 = unity_SpecCube0_HDR.w * u_xlat54 + 1.0;
					    u_xlat54 = log2(u_xlat54);
					    u_xlat54 = u_xlat54 * unity_SpecCube0_HDR.y;
					    u_xlat54 = exp2(u_xlat54);
					    u_xlat54 = u_xlat54 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat54);
					    u_xlatb55 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb55){
					        u_xlatb55 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb55){
					            u_xlat55 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat55 = inversesqrt(u_xlat55);
					            u_xlat13.xyz = vec3(u_xlat55) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat55 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat55 = min(u_xlat14.z, u_xlat55);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat55) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat53);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat54) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18.x = clamp(u_xlat18.x, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18.x) + 1.0;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat51 = u_xlat51 * u_xlat2.x;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat2.x = -abs(u_xlat1.x) + 1.0;
					    u_xlat19.x = u_xlat2.x * u_xlat2.x;
					    u_xlat19.x = u_xlat19.x * u_xlat19.x;
					    u_xlat2.x = u_xlat2.x * u_xlat19.x;
					    u_xlat34 = u_xlat34 * u_xlat2.x + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18.x * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat19.x = (-u_xlat51) + 1.0;
					    u_xlat36 = abs(u_xlat1.x) * u_xlat19.x + u_xlat51;
					    u_xlat19.x = u_xlat18.x * u_xlat19.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat19.x;
					    u_xlat1.x = u_xlat18.x * u_xlat36 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat19.x = u_xlat51 * u_xlat51;
					    u_xlat36 = u_xlat35 * u_xlat19.x + (-u_xlat35);
					    u_xlat35 = u_xlat36 * u_xlat35 + 1.0;
					    u_xlat19.x = u_xlat19.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat19.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18.x * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18.x!=0.0;
					    u_xlat18.x = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18.x * u_xlat1.x;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat19.xyz = vec3(u_xlat34) * _LightColor0.xyz;
					    u_xlat18.xyz = vec3(u_xlat52) * u_xlat10.xyz + u_xlat19.xyz;
					    u_xlat19.xyz = u_xlat1.xxx * _LightColor0.xyz;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat19.xyz = u_xlat19.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat18.xyz + u_xlat19.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat19.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat19.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat48 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat48 = u_xlat48 + u_xlat48;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat48)) + (-u_xlat1.xyz);
					    u_xlatb48 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb48){
					        u_xlatb48 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat9.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat9.xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat9.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat9.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat0.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat9.yzw = u_xlat9.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat48 = u_xlat9.y * 0.25;
					        u_xlat49 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat51 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat48 = max(u_xlat48, u_xlat49);
					        u_xlat9.x = min(u_xlat51, u_xlat48);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat9.xzw);
					        u_xlat11.xyz = u_xlat9.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat9.xyz = u_xlat9.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat9.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat10.x = dot(u_xlat10, u_xlat2);
					        u_xlat10.y = dot(u_xlat11, u_xlat2);
					        u_xlat10.z = dot(u_xlat9, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat10.x = dot(unity_SHAr, u_xlat2);
					        u_xlat10.y = dot(unity_SHAg, u_xlat2);
					        u_xlat10.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat9 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat11.x = dot(unity_SHBr, u_xlat9);
					    u_xlat11.y = dot(unity_SHBg, u_xlat9);
					    u_xlat11.z = dot(unity_SHBb, u_xlat9);
					    u_xlat48 = u_xlat2.y * u_xlat2.y;
					    u_xlat48 = u_xlat2.x * u_xlat2.x + (-u_xlat48);
					    u_xlat9.xyz = unity_SHC.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    u_xlat9.xyz = u_xlat9.xyz + u_xlat10.xyz;
					    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat48 = log2(u_xlat10.w);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.y;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = vec3(u_xlat48) * u_xlat10.xyz + u_xlat9.xyz;
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat49 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat50 = u_xlat49 + u_xlat49;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat50)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat49 = u_xlat49;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat49) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat16.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * _LightColor0.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat9.xyz * u_xlat16.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					    u_xlat17.z = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat50 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat50 = u_xlat50 + u_xlat50;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat50)) + (-u_xlat2.xyz);
					    u_xlatb50 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb50){
					        u_xlatb50 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat9.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat9.xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat9.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat9.xyz = (bool(u_xlatb50)) ? u_xlat9.xyz : u_xlat0.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat9.yzw = u_xlat9.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat50 = u_xlat9.y * 0.25;
					        u_xlat52 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat54 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat50 = max(u_xlat50, u_xlat52);
					        u_xlat9.x = min(u_xlat54, u_xlat50);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat9.xzw);
					        u_xlat11.xyz = u_xlat9.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat9.xyz = u_xlat9.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat9.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat10.x = dot(u_xlat10, u_xlat3);
					        u_xlat10.y = dot(u_xlat11, u_xlat3);
					        u_xlat10.z = dot(u_xlat9, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat10.x = dot(unity_SHAr, u_xlat3);
					        u_xlat10.y = dot(unity_SHAg, u_xlat3);
					        u_xlat10.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat9 = u_xlat3.yzzx * u_xlat3.xyzz;
					    u_xlat11.x = dot(unity_SHBr, u_xlat9);
					    u_xlat11.y = dot(unity_SHBg, u_xlat9);
					    u_xlat11.z = dot(unity_SHBb, u_xlat9);
					    u_xlat50 = u_xlat3.y * u_xlat3.y;
					    u_xlat50 = u_xlat3.x * u_xlat3.x + (-u_xlat50);
					    u_xlat9.xyz = unity_SHC.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    u_xlat9.xyz = u_xlat9.xyz + u_xlat10.xyz;
					    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat50 = log2(u_xlat10.w);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.y;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = vec3(u_xlat50) * u_xlat10.xyz + u_xlat9.xyz;
					    u_xlatb50 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb50){
					        u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat50 = inversesqrt(u_xlat50);
					        u_xlat10.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat50 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat50 = min(u_xlat11.z, u_xlat50);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-u_xlat17.zz) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat50 = u_xlat17.z * u_xlat11.x;
					    u_xlat50 = u_xlat50 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat50);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat50);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat16.y = u_xlat17.z * u_xlat17.z;
					    u_xlat48 = u_xlat16.y * u_xlat16.y;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat2.x = u_xlat16.y * u_xlat16.y + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat2.x + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat2.x = u_xlat17.z * u_xlat17.z + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat2.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.xy = u_xlat17.xz * u_xlat16.xy;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = (-u_xlat16.y) * u_xlat11.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat16.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat9.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat16.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat33 = (-u_xlat33) + 1.0;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat33) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat16.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat52 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat52 = u_xlat52 + u_xlat52;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat52)) + (-u_xlat2.xyz);
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat10.y * 0.25;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat55 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat52 = max(u_xlat52, u_xlat53);
					        u_xlat10.x = min(u_xlat55, u_xlat52);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat3);
					        u_xlat11.y = dot(u_xlat12, u_xlat3);
					        u_xlat11.z = dot(u_xlat10, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat3);
					        u_xlat11.y = dot(unity_SHAg, u_xlat3);
					        u_xlat11.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat10 = u_xlat3.yzzx * u_xlat3.xyzz;
					    u_xlat12.x = dot(unity_SHBr, u_xlat10);
					    u_xlat12.y = dot(unity_SHBg, u_xlat10);
					    u_xlat12.z = dot(unity_SHBb, u_xlat10);
					    u_xlat52 = u_xlat3.y * u_xlat3.y;
					    u_xlat52 = u_xlat3.x * u_xlat3.x + (-u_xlat52);
					    u_xlat10.xyz = unity_SHC.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    u_xlat10.xyz = u_xlat10.xyz + u_xlat11.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat11 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat52 = log2(u_xlat11.w);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.x;
					    u_xlat10.xyz = vec3(u_xlat52) * u_xlat11.xyz + u_xlat10.xyz;
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat52 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat52 = u_xlat52 * u_xlat8.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat52);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18) + 1.0;
					    u_xlat52 = u_xlat51 * u_xlat51;
					    u_xlat52 = u_xlat52 * u_xlat52;
					    u_xlat51 = u_xlat51 * u_xlat52;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat52 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat52 * u_xlat52;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat52 = u_xlat52 * u_xlat2.x;
					    u_xlat34 = u_xlat34 * u_xlat52 + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18 * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat2.x = (-u_xlat51) + 1.0;
					    u_xlat19 = abs(u_xlat1.x) * u_xlat2.x + u_xlat51;
					    u_xlat2.x = u_xlat18 * u_xlat2.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat18 * u_xlat19 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat19 = u_xlat35 * u_xlat2.x + (-u_xlat35);
					    u_xlat35 = u_xlat19 * u_xlat35 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat2.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18!=0.0;
					    u_xlat18 = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = _LightColor0.xyz * vec3(u_xlat34) + u_xlat10.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * _LightColor0.xyz;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat52) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat45 = u_xlat45 * u_xlat46;
					    u_xlat45 = u_xlat45 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat45);
					    u_xlat46 = u_xlat9.w + -1.0;
					    u_xlat46 = unity_SpecCube0_HDR.w * u_xlat46 + 1.0;
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat46);
					    u_xlatb47 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb47){
					        u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb47){
					            u_xlat47 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat47 = inversesqrt(u_xlat47);
					            u_xlat11.xyz = vec3(u_xlat47) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat47 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat47 = min(u_xlat12.z, u_xlat47);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat47) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat45);
					        u_xlat45 = u_xlat0.w + -1.0;
					        u_xlat45 = unity_SpecCube1_HDR.w * u_xlat45 + 1.0;
					        u_xlat45 = log2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.y;
					        u_xlat45 = exp2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45);
					        u_xlat7.xyz = vec3(u_xlat46) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat15.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat16.x = u_xlat1.x * u_xlat1.x;
					    u_xlat16.x = u_xlat1.x * u_xlat16.x;
					    u_xlat1.x = u_xlat1.x * u_xlat16.x;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat16.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat16.xyz + u_xlat5.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat10.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat15.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat10.xy = (-vec2(u_xlat45)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat46 = u_xlat45 * u_xlat10.x;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xzw = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xzw = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = u_xlat45 * u_xlat30;
					    u_xlat30 = (-u_xlat30) * u_xlat10.y + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xzw * vec3(u_xlat30);
					    u_xlat15 = (-u_xlat15) + 1.0;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat3.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat46 = u_xlat45 * u_xlat46;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = max(u_xlat30, 0.00200000009);
					    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;
					    u_xlat30 = float(1.0) / u_xlat30;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xyz * vec3(u_xlat30);
					    u_xlat15 = -abs(u_xlat15) + 1.0;
					    u_xlat30 = u_xlat15 * u_xlat15;
					    u_xlat30 = u_xlat30 * u_xlat30;
					    u_xlat15 = u_xlat15 * u_xlat30;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat8.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat45 = u_xlat45 * u_xlat46;
					    u_xlat45 = u_xlat45 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat45);
					    u_xlat46 = u_xlat9.w + -1.0;
					    u_xlat46 = unity_SpecCube0_HDR.w * u_xlat46 + 1.0;
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat46);
					    u_xlatb47 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb47){
					        u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb47){
					            u_xlat47 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat47 = inversesqrt(u_xlat47);
					            u_xlat11.xyz = vec3(u_xlat47) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat47 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat47 = min(u_xlat12.z, u_xlat47);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat47) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat45);
					        u_xlat45 = u_xlat0.w + -1.0;
					        u_xlat45 = unity_SpecCube1_HDR.w * u_xlat45 + 1.0;
					        u_xlat45 = log2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.y;
					        u_xlat45 = exp2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45);
					        u_xlat7.xyz = vec3(u_xlat46) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat15.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat16.x = u_xlat1.x * u_xlat1.x;
					    u_xlat16.x = u_xlat1.x * u_xlat16.x;
					    u_xlat1.x = u_xlat1.x * u_xlat16.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat16.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat16.xyz + u_xlat5.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat10.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat15.xyz + u_xlat1.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat10.xy = (-vec2(u_xlat45)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat46 = u_xlat45 * u_xlat10.x;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xzw = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xzw = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = u_xlat45 * u_xlat30;
					    u_xlat30 = (-u_xlat30) * u_xlat10.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xzw * vec3(u_xlat30);
					    u_xlat15 = (-u_xlat15) + 1.0;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat3.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat46 = u_xlat45 * u_xlat46;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = max(u_xlat30, 0.00200000009);
					    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;
					    u_xlat30 = float(1.0) / u_xlat30;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xyz * vec3(u_xlat30);
					    u_xlat15 = -abs(u_xlat15) + 1.0;
					    u_xlat30 = u_xlat15 * u_xlat15;
					    u_xlat30 = u_xlat30 * u_xlat30;
					    u_xlat15 = u_xlat15 * u_xlat30;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat8.xyz + u_xlat0.xyz;
					    SV_Target0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat32;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlatb48 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb48){
					        u_xlatb48 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat0.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat48 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat49 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat48, u_xlat49);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat48 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat49 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat2.xyz = vec3(u_xlat49) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat49 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat49 = u_xlat49 + u_xlat49;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat49)) + (-u_xlat1.xyz);
					    u_xlat9.xyz = vec3(u_xlat48) * _LightColor0.xyz;
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.x = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat32 = u_xlat16.x + u_xlat16.x;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat32)) + u_xlat1.xyz;
					    u_xlat32 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat16.x = u_xlat16.x;
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.y = (-u_xlat16.x) + 1.0;
					    u_xlat1.zw = u_xlat1.xy * u_xlat1.xy;
					    u_xlat16.xz = u_xlat1.xy * u_xlat1.xw;
					    u_xlat7.xy = u_xlat1.zy * u_xlat16.xz;
					    u_xlat16.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat16.x = u_xlat16.x + 1.0;
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat48 = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat5.xyz * vec3(u_xlat48);
					    u_xlat1.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xzw = vec3(u_xlat32) * u_xlat9.xyz;
					    u_xlat2.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat16.xxx;
					    u_xlat2.xyz = u_xlat7.yyy * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xzw + u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlatb49 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb49){
					        u_xlatb49 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat49 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat50 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat49, u_xlat50);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat49 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat50 = inversesqrt(u_xlat50);
					    u_xlat3.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					    u_xlat50 = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat51 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat51 = u_xlat51 + u_xlat51;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat51)) + (-u_xlat2.xyz);
					    u_xlat9.xyz = vec3(u_xlat49) * _LightColor0.xyz;
					    u_xlatb49 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb49){
					        u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat49 = inversesqrt(u_xlat49);
					        u_xlat10.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat49 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat49 = min(u_xlat11.z, u_xlat49);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat49) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-vec2(u_xlat50)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat49 = u_xlat50 * u_xlat11.x;
					    u_xlat49 = u_xlat49 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat49);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat49);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat32 = u_xlat50 * u_xlat50;
					    u_xlat48 = u_xlat32 * u_xlat32;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat49 = u_xlat32 * u_xlat32 + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat49 + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat49 = u_xlat50 * u_xlat50 + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat49;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.x = u_xlat16.x * u_xlat17.x;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = u_xlat50 * u_xlat32;
					    u_xlat32 = (-u_xlat32) * u_xlat11.y + 1.0;
					    u_xlat48 = (-u_xlat0.x) + 1.0;
					    u_xlat48 = u_xlat5.w * _Glossiness + u_xlat48;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat6.xyz * u_xlat16.xxx;
					    u_xlat2.xyz = u_xlat4.xyz * u_xlat0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = u_xlat9.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat17.x = (-u_xlat33) + 1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat3.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + vec3(u_xlat48);
					    u_xlat17.xyz = u_xlat17.xxx * u_xlat3.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat17.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat52, u_xlat53);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat52 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat53 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat53 = inversesqrt(u_xlat53);
					    u_xlat3.xyz = vec3(u_xlat53) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat53 = u_xlat53 + u_xlat53;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat53)) + (-u_xlat2.xyz);
					    u_xlat10.xyz = vec3(u_xlat52) * _LightColor0.xyz;
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat52 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat52 = u_xlat52 * u_xlat8.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat52);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18) + 1.0;
					    u_xlat52 = u_xlat51 * u_xlat51;
					    u_xlat52 = u_xlat52 * u_xlat52;
					    u_xlat51 = u_xlat51 * u_xlat52;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat52 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat52 * u_xlat52;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat52 = u_xlat52 * u_xlat2.x;
					    u_xlat34 = u_xlat34 * u_xlat52 + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18 * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat2.x = (-u_xlat51) + 1.0;
					    u_xlat19 = abs(u_xlat1.x) * u_xlat2.x + u_xlat51;
					    u_xlat2.x = u_xlat18 * u_xlat2.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat18 * u_xlat19 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat19 = u_xlat35 * u_xlat2.x + (-u_xlat35);
					    u_xlat35 = u_xlat19 * u_xlat35 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat2.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18!=0.0;
					    u_xlat18 = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat10.xyz;
					    u_xlat1.xyz = u_xlat10.xyz * u_xlat1.xxx;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat52) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat51 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat51 = u_xlat51 * _ProjectionParams.z;
					    u_xlat51 = max(u_xlat51, 0.0);
					    u_xlat51 = u_xlat51 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat51) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					vec2 u_xlat39;
					float u_xlat41;
					float u_xlat43;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					float u_xlat61;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat1.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat51 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat51 = _Time.y * _AnimScale + u_xlat51;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat37 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat37 = u_xlat52 + u_xlat37;
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat4.x = u_xlat54 * 0.5 + u_xlat2.z;
					    u_xlat54 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat4.y = u_xlat52 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat37<_Mask;
					    u_xlat4.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat52 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat37 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat37 = u_xlat37 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat37;
					    u_xlat37 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat37 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat37;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.x = u_xlat55 * 0.5 + u_xlat5.x;
					    u_xlat55 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat37 = u_xlat55 * _AnimIntensity + u_xlat37;
					    u_xlat37 = u_xlat52 * _BubbleDrift + u_xlat37;
					    u_xlat37 = sin(u_xlat37);
					    u_xlat6.y = u_xlat37 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat54<_Mask;
					    u_xlat6.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat37 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat37 = sin(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat37 = u_xlat37 + 0.5;
					    u_xlat37 = u_xlat37 / u_xlat54;
					    u_xlat54 = floor(u_xlat37);
					    u_xlat37 = fract(u_xlat37);
					    u_xlat55 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat54;
					    u_xlat5.x = u_xlat37 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat39.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat54 = u_xlat39.x * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat37 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat5.y = u_xlat54 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat5.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat54 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.x = u_xlat57 * 0.5 + u_xlat7.x;
					    u_xlat57 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat8.y = u_xlat55 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat8.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat55 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat56;
					    u_xlat7.x = u_xlat55 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat41 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat56 = u_xlat41 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.y = u_xlat56 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat7.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat56 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.x = u_xlat59 * 0.5 + u_xlat9.x;
					    u_xlat59 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat57 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat10.y = u_xlat57 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat10.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat57 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat20;
					    u_xlat58 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat58;
					    u_xlat9.x = u_xlat57 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat43 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat58 = u_xlat43 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.y = u_xlat58 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat9.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat58 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat20;
					    u_xlat59 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat61 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat61 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat61 = u_xlat58 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat11.x = u_xlat61 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat59;
					    u_xlat2.x = u_xlat58 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat11.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat19.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat2.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat12.x = u_xlat20 * 0.5 + u_xlat2.z;
					    u_xlat36 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat36 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat2.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat12.y = u_xlat19.x * 0.5 + u_xlat2.w;
					    u_xlat19.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * _BubbleParams.w;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat4.z = u_xlat51 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat51 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat6.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat6.z<u_xlat4.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat37);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat5.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat5.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat54);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat8.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat55);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat7.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat7.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat7.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat56);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat10.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat57);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat9.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat58);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat11.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb51)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat51 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat51 = sqrt(u_xlat51);
					    u_xlat52 = log2(u_xlat2.x);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat12.z = u_xlat52 * _BubbleParams.x + u_xlat51;
					    u_xlatb51 = u_xlat12.z<u_xlat19.z;
					    u_xlat2.xyz = (bool(u_xlatb51)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat51 = u_xlat2.z * _BubbleParams.y;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat52 = (-u_xlat51) * u_xlat51 + 1.0;
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat36 = (-u_xlat51) + 1.0;
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.z;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = min(u_xlat36, 1.0);
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * 3.1415;
					    u_xlat51 = cos(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.600000024 + 0.5;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat52 = u_xlat52 + (-u_xlat36);
					    u_xlat3.z = u_xlat51 * u_xlat52 + u_xlat36;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat51 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xy = vec2(u_xlat51) * u_xlat2.xy;
					    u_xlat51 = u_xlat3.z * u_xlat3.z;
					    u_xlat52 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat2.xy;
					    u_xlatb51 = u_xlat51!=0.0;
					    u_xlat51 = u_xlatb51 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat51) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat51 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat52 = (-u_xlat36) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat36 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat36 = min(abs(u_xlat36), 1.0);
					    u_xlat36 = _BuildUp * 2.0 + (-u_xlat36);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = (-u_xlat36) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat36) + (-vec2(_AlphaThreshold));
					    u_xlat36 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat36);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat36 = log2(u_xlat3.x);
					    u_xlat36 = u_xlat36 * 1.5;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat3.x = (-u_xlat36) + 1.0;
					    u_xlat5.x = u_xlat52 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat39.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat39.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat39.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat52 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb54 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb54 = u_xlatb54 || u_xlatb4;
					    u_xlat52 = (u_xlatb54) ? 0.0 : u_xlat52;
					    u_xlat54 = log2(_AlphaThreshold);
					    u_xlat54 = u_xlat54 * 0.300000012;
					    u_xlat54 = exp2(u_xlat54);
					    u_xlat54 = (-u_xlat54) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat54) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat54 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat54 + u_xlat52;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat52 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat52 = min(u_xlat52, 1.0);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat7.z = sqrt(u_xlat52);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat51) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat36) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat51 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat2.xyz;
					    u_xlatb51 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb51){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat0.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat52, u_xlat53);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat52 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat54 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat54 = u_xlat54 + u_xlat54;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat54)) + (-u_xlat1.xyz);
					    u_xlat9.xyz = vec3(u_xlat52) * _LightColor0.xyz;
					    if(u_xlatb51){
					        u_xlatb51 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb51)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat51 = u_xlat10.y * 0.25;
					        u_xlat52 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat54 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat51 = max(u_xlat51, u_xlat52);
					        u_xlat10.x = min(u_xlat54, u_xlat51);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat2);
					        u_xlat11.y = dot(u_xlat12, u_xlat2);
					        u_xlat11.z = dot(u_xlat10, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat2);
					        u_xlat11.y = dot(unity_SHAg, u_xlat2);
					        u_xlat11.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat10.xyz = u_xlat11.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb51 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb51){
					        u_xlat51 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat51 = inversesqrt(u_xlat51);
					        u_xlat11.xyz = vec3(u_xlat51) * u_xlat8.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat51 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat51 = min(u_xlat12.z, u_xlat51);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat51) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat8.xyz;
					    }
					    u_xlat51 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat51 = u_xlat51 * u_xlat7.z;
					    u_xlat51 = u_xlat51 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat51);
					    u_xlat52 = u_xlat11.w + -1.0;
					    u_xlat52 = unity_SpecCube0_HDR.w * u_xlat52 + 1.0;
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_SpecCube0_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat52);
					    u_xlatb53 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb53){
					        u_xlatb53 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb53){
					            u_xlat53 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat53 = inversesqrt(u_xlat53);
					            u_xlat13.xyz = vec3(u_xlat53) * u_xlat8.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat53 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat53 = min(u_xlat14.z, u_xlat53);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat13.xyz * vec3(u_xlat53) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat51);
					        u_xlat51 = u_xlat0.w + -1.0;
					        u_xlat51 = unity_SpecCube1_HDR.w * u_xlat51 + 1.0;
					        u_xlat51 = log2(u_xlat51);
					        u_xlat51 = u_xlat51 * unity_SpecCube1_HDR.y;
					        u_xlat51 = exp2(u_xlat51);
					        u_xlat51 = u_xlat51 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat51);
					        u_xlat8.xyz = vec3(u_xlat52) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat17.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat52 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat53 = u_xlat52 + u_xlat52;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat53)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat52 = u_xlat52;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat52) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat17.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat12.xyz;
					    u_xlat0.xyz = u_xlat10.xyz * u_xlat17.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat51 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat51 = u_xlat51 * _ProjectionParams.z;
					    u_xlat51 = max(u_xlat51, 0.0);
					    u_xlat51 = u_xlat51 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat51) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb53 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb53)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat53 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat54 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat53, u_xlat54);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat53 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat53 = clamp(u_xlat53, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat3.x = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat3.x = inversesqrt(u_xlat3.x);
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat8.xyz;
					    u_xlat55 = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat57 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat57 = u_xlat57 + u_xlat57;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat57)) + (-u_xlat2.xyz);
					    u_xlat9.xyz = vec3(u_xlat53) * _LightColor0.xyz;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat10.y * 0.25;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat57 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat52 = max(u_xlat52, u_xlat53);
					        u_xlat10.x = min(u_xlat57, u_xlat52);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat3);
					        u_xlat11.y = dot(u_xlat12, u_xlat3);
					        u_xlat11.z = dot(u_xlat10, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat3);
					        u_xlat11.y = dot(unity_SHAg, u_xlat3);
					        u_xlat11.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat10.xyz = u_xlat11.xyz + vs_TEXCOORD4.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat8.xyz;
					    }
					    u_xlat12.xy = (-vec2(u_xlat55)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat52 = u_xlat55 * u_xlat12.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xzw = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat8.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat52);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat18 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat55 * u_xlat55;
					    u_xlat51 = u_xlat34 * u_xlat34;
					    u_xlat18 = u_xlat18 * u_xlat18;
					    u_xlat52 = u_xlat34 * u_xlat34 + -1.0;
					    u_xlat18 = u_xlat18 * u_xlat52 + 1.00001001;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat17.x = max(u_xlat17.x, 0.100000001);
					    u_xlat52 = u_xlat55 * u_xlat55 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat52;
					    u_xlat18 = u_xlat18 * u_xlat18;
					    u_xlat17.x = u_xlat17.x * u_xlat18;
					    u_xlat17.x = u_xlat17.x * 4.0;
					    u_xlat17.x = u_xlat51 / u_xlat17.x;
					    u_xlat34 = u_xlat55 * u_xlat34;
					    u_xlat34 = (-u_xlat34) * u_xlat12.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat17.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat9.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat10.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat17.xyz = u_xlat12.xzw * vec3(u_xlat34);
					    u_xlat35 = (-u_xlat35) + 1.0;
					    u_xlat35 = u_xlat35 * u_xlat35;
					    u_xlat35 = u_xlat35 * u_xlat35;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat35) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat51 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat51 = u_xlat51 * _ProjectionParams.z;
					    u_xlat51 = max(u_xlat51, 0.0);
					    u_xlat51 = u_xlat51 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat51) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unused_2_5[4];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_7;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec4 u_xlat13;
					vec3 u_xlat14;
					vec3 u_xlat15;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					bvec3 u_xlatb17;
					vec3 u_xlat18;
					float u_xlat19;
					bool u_xlatb19;
					float u_xlat20;
					vec3 u_xlat21;
					float u_xlat22;
					float u_xlat36;
					float u_xlat37;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					vec2 u_xlat42;
					float u_xlat44;
					float u_xlat46;
					float u_xlat54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					bool u_xlatb61;
					float u_xlat62;
					bool u_xlatb62;
					float u_xlat63;
					bool u_xlatb63;
					float u_xlat64;
					float u_xlat65;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat54 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat54 = inversesqrt(u_xlat54);
					    u_xlat2.xyz = vec3(u_xlat54) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat55 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat22 = _AnimScale * _Time.y;
					    u_xlat55 = _Time.y * _AnimScale + u_xlat55;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat40 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat40 = u_xlat56 + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat5.x = u_xlat58 * 0.5 + u_xlat3.z;
					    u_xlat58 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat5.y = u_xlat56 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat40<_Mask;
					    u_xlat5.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat56 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat22;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat40;
					    u_xlat40 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat40 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat40;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat7.x = u_xlat59 * 0.5 + u_xlat6.x;
					    u_xlat59 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat59 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat56 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat58<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat22;
					    u_xlat58 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat58;
					    u_xlat58 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat59 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat58;
					    u_xlat6.x = u_xlat40 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat42.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat58 = u_xlat42.x * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat40 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat6.y = u_xlat58 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat6.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat58 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat22;
					    u_xlat59 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat61 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat61 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat61 = u_xlat58 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat9.x = u_xlat61 * 0.5 + u_xlat8.x;
					    u_xlat61 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat59 = u_xlat61 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat9.y = u_xlat59 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat9.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat59 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat22;
					    u_xlat60 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat60;
					    u_xlat8.x = u_xlat59 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat44 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat60 = u_xlat44 * _AnimIntensity + u_xlat60;
					    u_xlat60 = u_xlat59 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat8.y = u_xlat60 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat8.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat60 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + u_xlat22;
					    u_xlat61 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat61 = u_xlat61 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat60 = u_xlat60 + 0.5;
					    u_xlat60 = u_xlat60 / u_xlat61;
					    u_xlat61 = floor(u_xlat60);
					    u_xlat60 = fract(u_xlat60);
					    u_xlat62 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat62 = u_xlat61 + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + 0.5;
					    u_xlat63 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat63 = u_xlat63 * _AnimIntensity + u_xlat61;
					    u_xlat63 = u_xlat60 * _BubbleDrift + u_xlat63;
					    u_xlat63 = sin(u_xlat63);
					    u_xlat11.x = u_xlat63 * 0.5 + u_xlat10.x;
					    u_xlat63 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat61 = u_xlat63 * _AnimIntensity + u_xlat61;
					    u_xlat61 = u_xlat60 * _BubbleDrift + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat11.y = u_xlat61 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb61 = u_xlat62<_Mask;
					    u_xlat11.xy = (bool(u_xlatb61)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat61 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + u_xlat22;
					    u_xlat62 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + 0.5;
					    u_xlat62 = u_xlat62 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat61 = u_xlat61 + 0.5;
					    u_xlat61 = u_xlat61 / u_xlat62;
					    u_xlat62 = floor(u_xlat61);
					    u_xlat61 = fract(u_xlat61);
					    u_xlat63 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat63 = u_xlat62 + u_xlat63;
					    u_xlat63 = sin(u_xlat63);
					    u_xlat63 = u_xlat63 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat62;
					    u_xlat10.x = u_xlat61 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat46 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat62 = u_xlat46 * _AnimIntensity + u_xlat62;
					    u_xlat62 = u_xlat61 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat10.y = u_xlat62 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb62 = u_xlat63<_Mask;
					    u_xlat10.xy = (bool(u_xlatb62)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat62 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat62 = sin(u_xlat62);
					    u_xlat62 = u_xlat62 * 0.5 + u_xlat22;
					    u_xlat63 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat63 = sin(u_xlat63);
					    u_xlat63 = u_xlat63 * 0.5 + 0.5;
					    u_xlat63 = u_xlat63 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat62 = u_xlat62 + 0.5;
					    u_xlat62 = u_xlat62 / u_xlat63;
					    u_xlat63 = floor(u_xlat62);
					    u_xlat62 = fract(u_xlat62);
					    u_xlat64 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat64 = u_xlat63 + u_xlat64;
					    u_xlat64 = sin(u_xlat64);
					    u_xlat64 = u_xlat64 * 0.5 + 0.5;
					    u_xlat65 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat65 = u_xlat65 * _AnimIntensity + u_xlat63;
					    u_xlat65 = u_xlat62 * _BubbleDrift + u_xlat65;
					    u_xlat65 = sin(u_xlat65);
					    u_xlat12.x = u_xlat65 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat63;
					    u_xlat3.x = u_xlat62 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb63 = u_xlat64<_Mask;
					    u_xlat12.xy = (bool(u_xlatb63)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat22;
					    u_xlat21.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat21.x = sin(u_xlat21.x);
					    u_xlat21.x = u_xlat21.x * 0.5 + 0.5;
					    u_xlat21.x = u_xlat21.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat21.x;
					    u_xlat21.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat21.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat21.x;
					    u_xlat22 = u_xlat3.x * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat13.x = u_xlat22 * 0.5 + u_xlat3.z;
					    u_xlat39 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat21.x = u_xlat39 * _AnimIntensity + u_xlat21.x;
					    u_xlat21.x = u_xlat3.x * _BubbleDrift + u_xlat21.x;
					    u_xlat21.x = sin(u_xlat21.x);
					    u_xlat13.y = u_xlat21.x * 0.5 + u_xlat3.w;
					    u_xlat21.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat21.xy;
					    u_xlat21.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat21.x = dot(u_xlat21.xy, u_xlat21.xy);
					    u_xlat21.x = sqrt(u_xlat21.x);
					    u_xlat55 = log2(u_xlat55);
					    u_xlat55 = u_xlat55 * _BubbleParams.w;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat5.z = u_xlat55 * _BubbleParams.x + u_xlat21.x;
					    u_xlat21.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat55 = dot(u_xlat21.xy, u_xlat21.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat56);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat7.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat7.z<u_xlat5.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat40);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat6.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat6.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat6.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat58);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat9.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat9.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat9.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat59);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat8.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat8.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat8.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat60);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat11.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat11.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat11.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat61);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat10.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat10.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat10.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat62);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat12.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat12.z<u_xlat21.z;
					    u_xlat21.xyz = (bool(u_xlatb55)) ? u_xlat12.xyz : u_xlat21.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat55 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat55 = sqrt(u_xlat55);
					    u_xlat56 = log2(u_xlat3.x);
					    u_xlat56 = u_xlat56 * _BubbleParams.w;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat13.z = u_xlat56 * _BubbleParams.x + u_xlat55;
					    u_xlatb55 = u_xlat13.z<u_xlat21.z;
					    u_xlat3.xyz = (bool(u_xlatb55)) ? u_xlat13.xyz : u_xlat21.xyz;
					    u_xlat55 = u_xlat3.z * _BubbleParams.y;
					    u_xlat55 = clamp(u_xlat55, 0.0, 1.0);
					    u_xlat56 = (-u_xlat55) * u_xlat55 + 1.0;
					    u_xlat56 = sqrt(u_xlat56);
					    u_xlat39 = (-u_xlat55) + 1.0;
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.z;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = min(u_xlat39, 1.0);
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * 3.1415;
					    u_xlat55 = cos(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.600000024 + 0.5;
					    u_xlat55 = clamp(u_xlat55, 0.0, 1.0);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat55 = float(1.0) / u_xlat55;
					    u_xlat56 = u_xlat56 + (-u_xlat39);
					    u_xlat4.z = u_xlat55 * u_xlat56 + u_xlat39;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat55 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat3.xy = vec2(u_xlat55) * u_xlat3.xy;
					    u_xlat55 = u_xlat4.z * u_xlat4.z;
					    u_xlat56 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat56 = sqrt(u_xlat56);
					    u_xlat4.xy = vec2(u_xlat56) * u_xlat3.xy;
					    u_xlatb55 = u_xlat55!=0.0;
					    u_xlat55 = u_xlatb55 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat55) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat55 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat56 = (-u_xlat39) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat39 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat39 = min(abs(u_xlat39), 1.0);
					    u_xlat39 = _BuildUp * 2.0 + (-u_xlat39);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = (-u_xlat39) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat39) + (-vec2(_AlphaThreshold));
					    u_xlat39 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat39);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat39 = log2(u_xlat4.x);
					    u_xlat39 = u_xlat39 * 1.5;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat4.x = (-u_xlat39) + 1.0;
					    u_xlat6.x = u_xlat56 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat42.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat42.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat42.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat56 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb58 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb58 = u_xlatb58 || u_xlatb5;
					    u_xlat56 = (u_xlatb58) ? 0.0 : u_xlat56;
					    u_xlat58 = log2(_AlphaThreshold);
					    u_xlat58 = u_xlat58 * 0.300000012;
					    u_xlat58 = exp2(u_xlat58);
					    u_xlat58 = (-u_xlat58) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat58) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat58 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat58 + u_xlat56;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat56 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat56 = min(u_xlat56, 1.0);
					    u_xlat56 = (-u_xlat56) + 1.0;
					    u_xlat8.z = sqrt(u_xlat56);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat55) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat39) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat55 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat55 = inversesqrt(u_xlat55);
					    u_xlat3.xyz = vec3(u_xlat55) * u_xlat3.xyz;
					    u_xlatb55 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb55){
					        u_xlatb56 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb56)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat56 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat57 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat56, u_xlat57);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat56 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat56 = clamp(u_xlat56, 0.0, 1.0);
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat3.x = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat3.x = inversesqrt(u_xlat3.x);
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat58 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat58 = u_xlat58 + u_xlat58;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat58)) + (-u_xlat2.xyz);
					    u_xlat10.xyz = vec3(u_xlat56) * _LightColor0.xyz;
					    if(u_xlatb55){
					        u_xlatb55 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat11.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat11.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat11.xyz;
					        u_xlat11.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat11.xyz;
					        u_xlat11.xyz = u_xlat11.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat11.xyz = (bool(u_xlatb55)) ? u_xlat11.xyz : u_xlat0.xyz;
					        u_xlat11.xyz = u_xlat11.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat11.yzw = u_xlat11.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat55 = u_xlat11.y * 0.25;
					        u_xlat56 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat58 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat55 = max(u_xlat55, u_xlat56);
					        u_xlat11.x = min(u_xlat58, u_xlat55);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat11.xzw);
					        u_xlat13.xyz = u_xlat11.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat13 = texture(unity_ProbeVolumeSH, u_xlat13.xyz);
					        u_xlat11.xyz = u_xlat11.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat12.x = dot(u_xlat12, u_xlat3);
					        u_xlat12.y = dot(u_xlat13, u_xlat3);
					        u_xlat12.z = dot(u_xlat11, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat12.x = dot(unity_SHAr, u_xlat3);
					        u_xlat12.y = dot(unity_SHAg, u_xlat3);
					        u_xlat12.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat11.xyz = u_xlat12.xyz + vs_TEXCOORD4.xyz;
					    u_xlat11.xyz = max(u_xlat11.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlatb55 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb55){
					        u_xlat55 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat55 = inversesqrt(u_xlat55);
					        u_xlat12.xyz = vec3(u_xlat55) * u_xlat9.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					        u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					        u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat13;
					            hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					            hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					            hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					            u_xlat13 = hlslcc_movcTemp;
					        }
					        u_xlat55 = min(u_xlat13.y, u_xlat13.x);
					        u_xlat55 = min(u_xlat13.z, u_xlat55);
					        u_xlat13.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat12.xyz = u_xlat12.xyz * vec3(u_xlat55) + u_xlat13.xyz;
					    } else {
					        u_xlat12.xyz = u_xlat9.xyz;
					    }
					    u_xlat55 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat55 = u_xlat55 * u_xlat8.x;
					    u_xlat55 = u_xlat55 * 6.0;
					    u_xlat12 = textureLod(unity_SpecCube0, u_xlat12.xyz, u_xlat55);
					    u_xlat56 = u_xlat12.w + -1.0;
					    u_xlat56 = unity_SpecCube0_HDR.w * u_xlat56 + 1.0;
					    u_xlat56 = log2(u_xlat56);
					    u_xlat56 = u_xlat56 * unity_SpecCube0_HDR.y;
					    u_xlat56 = exp2(u_xlat56);
					    u_xlat56 = u_xlat56 * unity_SpecCube0_HDR.x;
					    u_xlat13.xyz = u_xlat12.xyz * vec3(u_xlat56);
					    u_xlatb57 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb57){
					        u_xlatb57 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb57){
					            u_xlat57 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat57 = inversesqrt(u_xlat57);
					            u_xlat14.xyz = vec3(u_xlat57) * u_xlat9.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat14.xyz;
					            u_xlat16.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat16.xyz = u_xlat16.xyz / u_xlat14.xyz;
					            u_xlatb17.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat14.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat15;
					                hlslcc_movcTemp.x = (u_xlatb17.x) ? u_xlat15.x : u_xlat16.x;
					                hlslcc_movcTemp.y = (u_xlatb17.y) ? u_xlat15.y : u_xlat16.y;
					                hlslcc_movcTemp.z = (u_xlatb17.z) ? u_xlat15.z : u_xlat16.z;
					                u_xlat15 = hlslcc_movcTemp;
					            }
					            u_xlat57 = min(u_xlat15.y, u_xlat15.x);
					            u_xlat57 = min(u_xlat15.z, u_xlat57);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat14.xyz * vec3(u_xlat57) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat55);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat56) * u_xlat12.xyz + (-u_xlat0.xyz);
					        u_xlat13.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat18.xyz = u_xlat1.xyz * vec3(u_xlat54) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat18.xyz, u_xlat18.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat18.xyz = u_xlat18.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat19 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat3.xyz, u_xlat18.xyz);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat18.x = dot(_WorldSpaceLightPos0.xyz, u_xlat18.xyz);
					    u_xlat18.x = clamp(u_xlat18.x, 0.0, 1.0);
					    u_xlat36 = u_xlat18.x * u_xlat18.x;
					    u_xlat36 = dot(vec2(u_xlat36), u_xlat8.xx);
					    u_xlat36 = u_xlat36 + -0.5;
					    u_xlat54 = (-u_xlat19) + 1.0;
					    u_xlat55 = u_xlat54 * u_xlat54;
					    u_xlat55 = u_xlat55 * u_xlat55;
					    u_xlat54 = u_xlat54 * u_xlat55;
					    u_xlat54 = u_xlat36 * u_xlat54 + 1.0;
					    u_xlat55 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat55 * u_xlat55;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat55 = u_xlat55 * u_xlat2.x;
					    u_xlat36 = u_xlat36 * u_xlat55 + 1.0;
					    u_xlat36 = u_xlat36 * u_xlat54;
					    u_xlat36 = u_xlat19 * u_xlat36;
					    u_xlat54 = u_xlat8.x * u_xlat8.x;
					    u_xlat54 = max(u_xlat54, 0.00200000009);
					    u_xlat2.x = (-u_xlat54) + 1.0;
					    u_xlat20 = abs(u_xlat1.x) * u_xlat2.x + u_xlat54;
					    u_xlat2.x = u_xlat19 * u_xlat2.x + u_xlat54;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat19 * u_xlat20 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat54 * u_xlat54;
					    u_xlat20 = u_xlat37 * u_xlat2.x + (-u_xlat37);
					    u_xlat37 = u_xlat20 * u_xlat37 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat37 = u_xlat37 * u_xlat37 + 1.00000001e-07;
					    u_xlat37 = u_xlat2.x / u_xlat37;
					    u_xlat1.x = u_xlat37 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat19 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat54 = u_xlat54 * u_xlat54 + 1.0;
					    u_xlat54 = float(1.0) / u_xlat54;
					    u_xlat19 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb19 = u_xlat19!=0.0;
					    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat19 * u_xlat1.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat10.xyz * vec3(u_xlat36) + u_xlat11.xyz;
					    u_xlat1.xyz = u_xlat10.xyz * u_xlat1.xxx;
					    u_xlat18.x = (-u_xlat18.x) + 1.0;
					    u_xlat36 = u_xlat18.x * u_xlat18.x;
					    u_xlat36 = u_xlat36 * u_xlat36;
					    u_xlat18.x = u_xlat18.x * u_xlat36;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat18.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat18.xyz = u_xlat13.xyz * vec3(u_xlat54);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat55) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat18.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat54 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat54 = (-u_xlat54) + 1.0;
					    u_xlat54 = u_xlat54 * _ProjectionParams.z;
					    u_xlat54 = max(u_xlat54, 0.0);
					    u_xlat54 = u_xlat54 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat54 = clamp(u_xlat54, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat54) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat48 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat48 = u_xlat48 + u_xlat48;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat48)) + (-u_xlat1.xyz);
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat48 = log2(u_xlat9.w);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.y;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat48);
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat49 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat50 = u_xlat49 + u_xlat49;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat50)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat49 = u_xlat49;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat49) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat16.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * _LightColor0.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat9.xyz * u_xlat16.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					    u_xlat17.z = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat50 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat50 = u_xlat50 + u_xlat50;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat50)) + (-u_xlat2.xyz);
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat50 = log2(u_xlat9.w);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.y;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat50);
					    u_xlatb50 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb50){
					        u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat50 = inversesqrt(u_xlat50);
					        u_xlat10.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat50 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat50 = min(u_xlat11.z, u_xlat50);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-u_xlat17.zz) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat50 = u_xlat17.z * u_xlat11.x;
					    u_xlat50 = u_xlat50 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat50);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat50);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat16.y = u_xlat17.z * u_xlat17.z;
					    u_xlat48 = u_xlat16.y * u_xlat16.y;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat2.x = u_xlat16.y * u_xlat16.y + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat2.x + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat2.x = u_xlat17.z * u_xlat17.z + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat2.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.xy = u_xlat17.xz * u_xlat16.xy;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = (-u_xlat16.y) * u_xlat11.y + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat16.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat9.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat16.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat33 = (-u_xlat33) + 1.0;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat33) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat16.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[47];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					vec3 u_xlat18;
					bool u_xlatb18;
					vec3 u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat36;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat52 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat52 = u_xlat52 + u_xlat52;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat52)) + (-u_xlat2.xyz);
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat52 = log2(u_xlat10.w);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.x;
					    u_xlatb53 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb53){
					        u_xlat53 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat53 = inversesqrt(u_xlat53);
					        u_xlat11.xyz = vec3(u_xlat53) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat53 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat53 = min(u_xlat12.z, u_xlat53);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat53) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat53 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat53 = u_xlat53 * u_xlat8.x;
					    u_xlat53 = u_xlat53 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat53);
					    u_xlat54 = u_xlat11.w + -1.0;
					    u_xlat54 = unity_SpecCube0_HDR.w * u_xlat54 + 1.0;
					    u_xlat54 = log2(u_xlat54);
					    u_xlat54 = u_xlat54 * unity_SpecCube0_HDR.y;
					    u_xlat54 = exp2(u_xlat54);
					    u_xlat54 = u_xlat54 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat54);
					    u_xlatb55 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb55){
					        u_xlatb55 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb55){
					            u_xlat55 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat55 = inversesqrt(u_xlat55);
					            u_xlat13.xyz = vec3(u_xlat55) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat55 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat55 = min(u_xlat14.z, u_xlat55);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat55) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat53);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat54) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18.x = clamp(u_xlat18.x, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18.x) + 1.0;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat51 = u_xlat51 * u_xlat2.x;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat2.x = -abs(u_xlat1.x) + 1.0;
					    u_xlat19.x = u_xlat2.x * u_xlat2.x;
					    u_xlat19.x = u_xlat19.x * u_xlat19.x;
					    u_xlat2.x = u_xlat2.x * u_xlat19.x;
					    u_xlat34 = u_xlat34 * u_xlat2.x + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18.x * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat19.x = (-u_xlat51) + 1.0;
					    u_xlat36 = abs(u_xlat1.x) * u_xlat19.x + u_xlat51;
					    u_xlat19.x = u_xlat18.x * u_xlat19.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat19.x;
					    u_xlat1.x = u_xlat18.x * u_xlat36 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat19.x = u_xlat51 * u_xlat51;
					    u_xlat36 = u_xlat35 * u_xlat19.x + (-u_xlat35);
					    u_xlat35 = u_xlat36 * u_xlat35 + 1.0;
					    u_xlat19.x = u_xlat19.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat19.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18.x * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18.x!=0.0;
					    u_xlat18.x = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18.x * u_xlat1.x;
					    u_xlat0.x = u_xlat5.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat19.xyz = vec3(u_xlat34) * _LightColor0.xyz;
					    u_xlat18.xyz = vec3(u_xlat52) * u_xlat10.xyz + u_xlat19.xyz;
					    u_xlat19.xyz = u_xlat1.xxx * _LightColor0.xyz;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat19.xyz = u_xlat19.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat18.xyz + u_xlat19.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat19.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat19.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat51 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat51 = u_xlat51 * _ProjectionParams.z;
					    u_xlat51 = max(u_xlat51, 0.0);
					    u_xlat51 = u_xlat51 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat51) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat18;
					float u_xlat19;
					float u_xlat34;
					float u_xlat35;
					bool u_xlatb35;
					vec2 u_xlat37;
					float u_xlat39;
					float u_xlat41;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					float u_xlat58;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat1.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat48 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat19 = _AnimScale * _Time.y;
					    u_xlat48 = _Time.y * _AnimScale + u_xlat48;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat35 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat35 = u_xlat49 + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat4.x = u_xlat51 * 0.5 + u_xlat2.z;
					    u_xlat51 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat4.y = u_xlat49 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat35<_Mask;
					    u_xlat4.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat49 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat19;
					    u_xlat35 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat35 = u_xlat35 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat35;
					    u_xlat35 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat51 = u_xlat35 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.x = u_xlat52 * 0.5 + u_xlat5.x;
					    u_xlat52 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat35 = u_xlat52 * _AnimIntensity + u_xlat35;
					    u_xlat35 = u_xlat49 * _BubbleDrift + u_xlat35;
					    u_xlat35 = sin(u_xlat35);
					    u_xlat6.y = u_xlat35 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb35 = u_xlat51<_Mask;
					    u_xlat6.xy = (bool(u_xlatb35)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat35 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat35 = sin(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + u_xlat19;
					    u_xlat51 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat35 = u_xlat35 + 0.5;
					    u_xlat35 = u_xlat35 / u_xlat51;
					    u_xlat51 = floor(u_xlat35);
					    u_xlat35 = fract(u_xlat35);
					    u_xlat52 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat51;
					    u_xlat5.x = u_xlat35 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat37.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat51 = u_xlat37.x * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat35 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat5.y = u_xlat51 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat5.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat51 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat19;
					    u_xlat52 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat54 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat54 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat54 = u_xlat51 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.x = u_xlat54 * 0.5 + u_xlat7.x;
					    u_xlat54 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat52 = u_xlat54 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat8.y = u_xlat52 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat8.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat52 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat19;
					    u_xlat53 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat53;
					    u_xlat7.x = u_xlat52 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat39 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat53 = u_xlat39 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.y = u_xlat53 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat7.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat53 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat19;
					    u_xlat54 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.x = u_xlat56 * 0.5 + u_xlat9.x;
					    u_xlat56 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat54 = u_xlat56 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat10.y = u_xlat54 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat10.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat54 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat19;
					    u_xlat55 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat55;
					    u_xlat9.x = u_xlat54 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat41 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat55 = u_xlat41 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.y = u_xlat55 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat9.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat55 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat19;
					    u_xlat56 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.x = u_xlat58 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat56;
					    u_xlat2.x = u_xlat55 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat11.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat19;
					    u_xlat18.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat18.x = u_xlat18.x * 0.5 + 0.5;
					    u_xlat18.x = u_xlat18.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat18.x;
					    u_xlat18.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat18.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat18.x;
					    u_xlat19 = u_xlat2.x * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat12.x = u_xlat19 * 0.5 + u_xlat2.z;
					    u_xlat34 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat18.x = u_xlat34 * _AnimIntensity + u_xlat18.x;
					    u_xlat18.x = u_xlat2.x * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat12.y = u_xlat18.x * 0.5 + u_xlat2.w;
					    u_xlat18.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat18.x = sqrt(u_xlat18.x);
					    u_xlat48 = log2(u_xlat48);
					    u_xlat48 = u_xlat48 * _BubbleParams.w;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat4.z = u_xlat48 * _BubbleParams.x + u_xlat18.x;
					    u_xlat18.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat48 = dot(u_xlat18.xy, u_xlat18.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat6.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat6.z<u_xlat4.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat35);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat5.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat5.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat51);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat8.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat8.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat8.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat52);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat7.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat7.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat53);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat10.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat10.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat10.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat54);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat9.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat9.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat55);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat11.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat11.z<u_xlat18.z;
					    u_xlat18.xyz = (bool(u_xlatb48)) ? u_xlat11.xyz : u_xlat18.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat48 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat48 = sqrt(u_xlat48);
					    u_xlat49 = log2(u_xlat2.x);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat12.z = u_xlat49 * _BubbleParams.x + u_xlat48;
					    u_xlatb48 = u_xlat12.z<u_xlat18.z;
					    u_xlat2.xyz = (bool(u_xlatb48)) ? u_xlat12.xyz : u_xlat18.xyz;
					    u_xlat48 = u_xlat2.z * _BubbleParams.y;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat49 = (-u_xlat48) * u_xlat48 + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat34 = (-u_xlat48) + 1.0;
					    u_xlat34 = log2(u_xlat34);
					    u_xlat34 = u_xlat34 * _BubbleParams.z;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat34 = min(u_xlat34, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = u_xlat34 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * 3.1415;
					    u_xlat48 = cos(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.600000024 + 0.5;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat48 = float(1.0) / u_xlat48;
					    u_xlat49 = u_xlat49 + (-u_xlat34);
					    u_xlat3.z = u_xlat48 * u_xlat49 + u_xlat34;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat48 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xy = vec2(u_xlat48) * u_xlat2.xy;
					    u_xlat48 = u_xlat3.z * u_xlat3.z;
					    u_xlat49 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat2.xy;
					    u_xlatb48 = u_xlat48!=0.0;
					    u_xlat48 = u_xlatb48 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat48) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat48 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat49 = (-u_xlat34) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat34 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat34 = min(abs(u_xlat34), 1.0);
					    u_xlat34 = _BuildUp * 2.0 + (-u_xlat34);
					    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
					    u_xlat34 = u_xlat34 * 3.1415;
					    u_xlat34 = cos(u_xlat34);
					    u_xlat34 = (-u_xlat34) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat34) + (-vec2(_AlphaThreshold));
					    u_xlat34 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat34);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat34 = log2(u_xlat3.x);
					    u_xlat34 = u_xlat34 * 1.5;
					    u_xlat34 = exp2(u_xlat34);
					    u_xlat3.x = (-u_xlat34) + 1.0;
					    u_xlat5.x = u_xlat49 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat37.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat37.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat37.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat49 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb51 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb51 = u_xlatb51 || u_xlatb4;
					    u_xlat49 = (u_xlatb51) ? 0.0 : u_xlat49;
					    u_xlat51 = log2(_AlphaThreshold);
					    u_xlat51 = u_xlat51 * 0.300000012;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat51) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat51 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat51 + u_xlat49;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat49 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat49 = min(u_xlat49, 1.0);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat7.z = sqrt(u_xlat49);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat48) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat34) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat48 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					    u_xlat7.z = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat48 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat48 = u_xlat48 + u_xlat48;
					    u_xlat8.xyz = u_xlat2.xyz * (-vec3(u_xlat48)) + (-u_xlat1.xyz);
					    u_xlatb48 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb48){
					        u_xlatb48 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat9.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat9.xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat9.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat9.xyz = (bool(u_xlatb48)) ? u_xlat9.xyz : u_xlat0.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat9.yzw = u_xlat9.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat48 = u_xlat9.y * 0.25;
					        u_xlat49 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat51 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat48 = max(u_xlat48, u_xlat49);
					        u_xlat9.x = min(u_xlat51, u_xlat48);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat9.xzw);
					        u_xlat11.xyz = u_xlat9.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat9.xyz = u_xlat9.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat9.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat10.x = dot(u_xlat10, u_xlat2);
					        u_xlat10.y = dot(u_xlat11, u_xlat2);
					        u_xlat10.z = dot(u_xlat9, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat10.x = dot(unity_SHAr, u_xlat2);
					        u_xlat10.y = dot(unity_SHAg, u_xlat2);
					        u_xlat10.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat9 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat11.x = dot(unity_SHBr, u_xlat9);
					    u_xlat11.y = dot(unity_SHBg, u_xlat9);
					    u_xlat11.z = dot(unity_SHBb, u_xlat9);
					    u_xlat48 = u_xlat2.y * u_xlat2.y;
					    u_xlat48 = u_xlat2.x * u_xlat2.x + (-u_xlat48);
					    u_xlat9.xyz = unity_SHC.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    u_xlat9.xyz = u_xlat9.xyz + u_xlat10.xyz;
					    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat48 = log2(u_xlat10.w);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.y;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = u_xlat48 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = vec3(u_xlat48) * u_xlat10.xyz + u_xlat9.xyz;
					    u_xlatb48 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb48){
					        u_xlat48 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat48 = inversesqrt(u_xlat48);
					        u_xlat10.xyz = vec3(u_xlat48) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat48 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat48 = min(u_xlat11.z, u_xlat48);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat48) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat48 = (-u_xlat7.z) * 0.699999988 + 1.70000005;
					    u_xlat48 = u_xlat48 * u_xlat7.z;
					    u_xlat48 = u_xlat48 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat48);
					    u_xlat49 = u_xlat10.w + -1.0;
					    u_xlat49 = unity_SpecCube0_HDR.w * u_xlat49 + 1.0;
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.y;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = u_xlat49 * unity_SpecCube0_HDR.x;
					    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat49);
					    u_xlatb50 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb50){
					        u_xlatb50 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb50){
					            u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat50 = inversesqrt(u_xlat50);
					            u_xlat12.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat50 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat50 = min(u_xlat13.z, u_xlat50);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat50) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat48);
					        u_xlat48 = u_xlat0.w + -1.0;
					        u_xlat48 = unity_SpecCube1_HDR.w * u_xlat48 + 1.0;
					        u_xlat48 = log2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.y;
					        u_xlat48 = exp2(u_xlat48);
					        u_xlat48 = u_xlat48 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat48);
					        u_xlat8.xyz = vec3(u_xlat49) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xyz = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat16.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat49 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat50 = u_xlat49 + u_xlat49;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat50)) + u_xlat1.xyz;
					    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat49 = u_xlat49;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat3.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat3.y = (-u_xlat49) + 1.0;
					    u_xlat3.zw = u_xlat3.xy * u_xlat3.xy;
					    u_xlat1.xy = u_xlat3.xy * u_xlat3.xw;
					    u_xlat7.xy = u_xlat3.zy * u_xlat1.xy;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1 = texture(unity_NHxRoughness, u_xlat7.xz);
					    u_xlat1.x = u_xlat1.x * 16.0;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat5.xyz + u_xlat16.xyz;
					    u_xlat2.xyz = u_xlat2.xxx * _LightColor0.xyz;
					    u_xlat3.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat3.xyz = u_xlat7.yyy * u_xlat3.xyz + u_xlat5.xyz;
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat11.xyz;
					    u_xlat0.xyz = u_xlat9.xyz * u_xlat16.xyz + u_xlat3.xyz;
					    u_xlat0.xyz = u_xlat1.xyz * u_xlat2.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					bvec3 u_xlatb13;
					vec3 u_xlat14;
					bvec3 u_xlatb15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					vec3 u_xlat19;
					float u_xlat20;
					float u_xlat32;
					float u_xlat33;
					float u_xlat35;
					float u_xlat36;
					bool u_xlatb36;
					vec2 u_xlat38;
					float u_xlat40;
					float u_xlat42;
					float u_xlat48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					float u_xlat59;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat48 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat48 = inversesqrt(u_xlat48);
					    u_xlat2.xyz = vec3(u_xlat48) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat49 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat50 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat20 = _AnimScale * _Time.y;
					    u_xlat49 = _Time.y * _AnimScale + u_xlat49;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat36 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat36 = u_xlat50 + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat52 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat52 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat52 = u_xlat49 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat5.x = u_xlat52 * 0.5 + u_xlat3.z;
					    u_xlat52 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat50 = u_xlat52 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat5.y = u_xlat50 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat36<_Mask;
					    u_xlat5.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat50 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat20;
					    u_xlat36 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat36;
					    u_xlat36 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat36 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat7.x = u_xlat53 * 0.5 + u_xlat6.x;
					    u_xlat53 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat36 = u_xlat53 * _AnimIntensity + u_xlat36;
					    u_xlat36 = u_xlat50 * _BubbleDrift + u_xlat36;
					    u_xlat36 = sin(u_xlat36);
					    u_xlat7.y = u_xlat36 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb36 = u_xlat52<_Mask;
					    u_xlat7.xy = (bool(u_xlatb36)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat36 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + u_xlat20;
					    u_xlat52 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat36 = u_xlat36 + 0.5;
					    u_xlat36 = u_xlat36 / u_xlat52;
					    u_xlat52 = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat53 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat52;
					    u_xlat6.x = u_xlat36 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat38.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat52 = u_xlat38.x * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat36 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat6.y = u_xlat52 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat6.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat52 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat20;
					    u_xlat53 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat9.x = u_xlat55 * 0.5 + u_xlat8.x;
					    u_xlat55 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat9.y = u_xlat53 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat9.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat53 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat20;
					    u_xlat54 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat54 = u_xlat54 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat54;
					    u_xlat54 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat55 = u_xlat54 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat54;
					    u_xlat8.x = u_xlat53 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat40 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat54 = u_xlat40 * _AnimIntensity + u_xlat54;
					    u_xlat54 = u_xlat53 * _BubbleDrift + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat8.y = u_xlat54 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat55<_Mask;
					    u_xlat8.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat54 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + u_xlat20;
					    u_xlat55 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat54 = u_xlat54 + 0.5;
					    u_xlat54 = u_xlat54 / u_xlat55;
					    u_xlat55 = floor(u_xlat54);
					    u_xlat54 = fract(u_xlat54);
					    u_xlat56 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat57 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat57 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat57 = u_xlat54 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat11.x = u_xlat57 * 0.5 + u_xlat10.x;
					    u_xlat57 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat55 = u_xlat57 * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat54 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.y = u_xlat55 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat11.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat55 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat20;
					    u_xlat56 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat56;
					    u_xlat10.x = u_xlat55 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat42 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat56 = u_xlat42 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat10.y = u_xlat56 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat10.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat56 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat20;
					    u_xlat57 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat59 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat59 = u_xlat59 * _AnimIntensity + u_xlat57;
					    u_xlat59 = u_xlat56 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat12.x = u_xlat59 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat57;
					    u_xlat3.x = u_xlat56 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat12.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat20;
					    u_xlat19.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat19.x = u_xlat19.x * 0.5 + 0.5;
					    u_xlat19.x = u_xlat19.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat19.x;
					    u_xlat19.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat19.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat20 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat20 = u_xlat20 * _AnimIntensity + u_xlat19.x;
					    u_xlat20 = u_xlat3.x * _BubbleDrift + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat13.x = u_xlat20 * 0.5 + u_xlat3.z;
					    u_xlat35 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat19.x = u_xlat35 * _AnimIntensity + u_xlat19.x;
					    u_xlat19.x = u_xlat3.x * _BubbleDrift + u_xlat19.x;
					    u_xlat19.x = sin(u_xlat19.x);
					    u_xlat13.y = u_xlat19.x * 0.5 + u_xlat3.w;
					    u_xlat19.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat19.xy;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat19.x = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat19.x = sqrt(u_xlat19.x);
					    u_xlat49 = log2(u_xlat49);
					    u_xlat49 = u_xlat49 * _BubbleParams.w;
					    u_xlat49 = exp2(u_xlat49);
					    u_xlat49 = (-u_xlat49) + 1.0;
					    u_xlat5.z = u_xlat49 * _BubbleParams.x + u_xlat19.x;
					    u_xlat19.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat49 = dot(u_xlat19.xy, u_xlat19.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat50);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat7.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat7.z<u_xlat5.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat36);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat6.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat6.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat6.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat52);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat9.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat9.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat9.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat53);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat8.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat8.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat54);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat11.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat11.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat11.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat55);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat10.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat10.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat10.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat56);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat12.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat12.z<u_xlat19.z;
					    u_xlat19.xyz = (bool(u_xlatb49)) ? u_xlat12.xyz : u_xlat19.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat49 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat49 = sqrt(u_xlat49);
					    u_xlat50 = log2(u_xlat3.x);
					    u_xlat50 = u_xlat50 * _BubbleParams.w;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat13.z = u_xlat50 * _BubbleParams.x + u_xlat49;
					    u_xlatb49 = u_xlat13.z<u_xlat19.z;
					    u_xlat3.xyz = (bool(u_xlatb49)) ? u_xlat13.xyz : u_xlat19.xyz;
					    u_xlat49 = u_xlat3.z * _BubbleParams.y;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat50 = (-u_xlat49) * u_xlat49 + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat35 = (-u_xlat49) + 1.0;
					    u_xlat35 = log2(u_xlat35);
					    u_xlat35 = u_xlat35 * _BubbleParams.z;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat35 = min(u_xlat35, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = u_xlat35 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * 3.1415;
					    u_xlat49 = cos(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.600000024 + 0.5;
					    u_xlat49 = clamp(u_xlat49, 0.0, 1.0);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat49 = float(1.0) / u_xlat49;
					    u_xlat50 = u_xlat50 + (-u_xlat35);
					    u_xlat4.z = u_xlat49 * u_xlat50 + u_xlat35;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat49 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xy = vec2(u_xlat49) * u_xlat3.xy;
					    u_xlat49 = u_xlat4.z * u_xlat4.z;
					    u_xlat50 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat50 = sqrt(u_xlat50);
					    u_xlat4.xy = vec2(u_xlat50) * u_xlat3.xy;
					    u_xlatb49 = u_xlat49!=0.0;
					    u_xlat49 = u_xlatb49 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat49) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat49 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat50 = (-u_xlat35) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat35 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat35 = min(abs(u_xlat35), 1.0);
					    u_xlat35 = _BuildUp * 2.0 + (-u_xlat35);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat35 = u_xlat35 * 3.1415;
					    u_xlat35 = cos(u_xlat35);
					    u_xlat35 = (-u_xlat35) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat35) + (-vec2(_AlphaThreshold));
					    u_xlat35 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat35);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat35 = log2(u_xlat4.x);
					    u_xlat35 = u_xlat35 * 1.5;
					    u_xlat35 = exp2(u_xlat35);
					    u_xlat4.x = (-u_xlat35) + 1.0;
					    u_xlat6.x = u_xlat50 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat38.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat38.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat38.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat50 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb52 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb52 = u_xlatb52 || u_xlatb5;
					    u_xlat50 = (u_xlatb52) ? 0.0 : u_xlat50;
					    u_xlat52 = log2(_AlphaThreshold);
					    u_xlat52 = u_xlat52 * 0.300000012;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat52) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat52 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat52 + u_xlat50;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat50 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat50 = min(u_xlat50, 1.0);
					    u_xlat50 = (-u_xlat50) + 1.0;
					    u_xlat8.z = sqrt(u_xlat50);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat49) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat35) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat49 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat49 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat49 = inversesqrt(u_xlat49);
					    u_xlat3.xyz = vec3(u_xlat49) * u_xlat8.xyz;
					    u_xlat17.z = (-u_xlat5.w) * _Glossiness + 1.0;
					    u_xlat50 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat50 = u_xlat50 + u_xlat50;
					    u_xlat8.xyz = u_xlat3.xyz * (-vec3(u_xlat50)) + (-u_xlat2.xyz);
					    u_xlatb50 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb50){
					        u_xlatb50 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat9.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat9.xyz;
					        u_xlat9.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat9.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat9.xyz = (bool(u_xlatb50)) ? u_xlat9.xyz : u_xlat0.xyz;
					        u_xlat9.xyz = u_xlat9.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat9.yzw = u_xlat9.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat50 = u_xlat9.y * 0.25;
					        u_xlat52 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat54 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat50 = max(u_xlat50, u_xlat52);
					        u_xlat9.x = min(u_xlat54, u_xlat50);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat9.xzw);
					        u_xlat11.xyz = u_xlat9.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat11.xyz);
					        u_xlat9.xyz = u_xlat9.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat9.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat10.x = dot(u_xlat10, u_xlat3);
					        u_xlat10.y = dot(u_xlat11, u_xlat3);
					        u_xlat10.z = dot(u_xlat9, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat10.x = dot(unity_SHAr, u_xlat3);
					        u_xlat10.y = dot(unity_SHAg, u_xlat3);
					        u_xlat10.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat9 = u_xlat3.yzzx * u_xlat3.xyzz;
					    u_xlat11.x = dot(unity_SHBr, u_xlat9);
					    u_xlat11.y = dot(unity_SHBg, u_xlat9);
					    u_xlat11.z = dot(unity_SHBb, u_xlat9);
					    u_xlat50 = u_xlat3.y * u_xlat3.y;
					    u_xlat50 = u_xlat3.x * u_xlat3.x + (-u_xlat50);
					    u_xlat9.xyz = unity_SHC.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    u_xlat9.xyz = u_xlat9.xyz + u_xlat10.xyz;
					    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat10 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat50 = log2(u_xlat10.w);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.y;
					    u_xlat50 = exp2(u_xlat50);
					    u_xlat50 = u_xlat50 * unity_Lightmap_HDR.x;
					    u_xlat9.xyz = vec3(u_xlat50) * u_xlat10.xyz + u_xlat9.xyz;
					    u_xlatb50 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb50){
					        u_xlat50 = dot(u_xlat8.xyz, u_xlat8.xyz);
					        u_xlat50 = inversesqrt(u_xlat50);
					        u_xlat10.xyz = vec3(u_xlat50) * u_xlat8.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat10.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat10.xyz;
					        u_xlatb13.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat10.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat11;
					            hlslcc_movcTemp.x = (u_xlatb13.x) ? u_xlat11.x : u_xlat12.x;
					            hlslcc_movcTemp.y = (u_xlatb13.y) ? u_xlat11.y : u_xlat12.y;
					            hlslcc_movcTemp.z = (u_xlatb13.z) ? u_xlat11.z : u_xlat12.z;
					            u_xlat11 = hlslcc_movcTemp;
					        }
					        u_xlat50 = min(u_xlat11.y, u_xlat11.x);
					        u_xlat50 = min(u_xlat11.z, u_xlat50);
					        u_xlat11.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat50) + u_xlat11.xyz;
					    } else {
					        u_xlat10.xyz = u_xlat8.xyz;
					    }
					    u_xlat11.xy = (-u_xlat17.zz) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat50 = u_xlat17.z * u_xlat11.x;
					    u_xlat50 = u_xlat50 * 6.0;
					    u_xlat10 = textureLod(unity_SpecCube0, u_xlat10.xyz, u_xlat50);
					    u_xlat51 = u_xlat10.w + -1.0;
					    u_xlat51 = unity_SpecCube0_HDR.w * u_xlat51 + 1.0;
					    u_xlat51 = log2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.y;
					    u_xlat51 = exp2(u_xlat51);
					    u_xlat51 = u_xlat51 * unity_SpecCube0_HDR.x;
					    u_xlat11.xzw = u_xlat10.xyz * vec3(u_xlat51);
					    u_xlatb52 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb52){
					        u_xlatb52 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb52){
					            u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					            u_xlat52 = inversesqrt(u_xlat52);
					            u_xlat12.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat12.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat12.xyz;
					            u_xlatb15.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat12.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat13;
					                hlslcc_movcTemp.x = (u_xlatb15.x) ? u_xlat13.x : u_xlat14.x;
					                hlslcc_movcTemp.y = (u_xlatb15.y) ? u_xlat13.y : u_xlat14.y;
					                hlslcc_movcTemp.z = (u_xlatb15.z) ? u_xlat13.z : u_xlat14.z;
					                u_xlat13 = hlslcc_movcTemp;
					            }
					            u_xlat52 = min(u_xlat13.y, u_xlat13.x);
					            u_xlat52 = min(u_xlat13.z, u_xlat52);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat8.xyz = u_xlat12.xyz * vec3(u_xlat52) + u_xlat0.xyz;
					        }
					        u_xlat8 = textureLod(unity_SpecCube1, u_xlat8.xyz, u_xlat50);
					        u_xlat0.x = u_xlat8.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat8.xyz * u_xlat0.xxx;
					        u_xlat8.xyz = vec3(u_xlat51) * u_xlat10.xyz + (-u_xlat0.xyz);
					        u_xlat11.xzw = unity_SpecCube0_BoxMin.www * u_xlat8.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat16.xyz = u_xlat1.xyz * vec3(u_xlat48) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat16.xyz, u_xlat16.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat17.x = dot(u_xlat3.xyz, u_xlat16.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat33 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
					    u_xlat16.x = dot(_WorldSpaceLightPos0.xyz, u_xlat16.xyz);
					    u_xlat16.x = clamp(u_xlat16.x, 0.0, 1.0);
					    u_xlat16.y = u_xlat17.z * u_xlat17.z;
					    u_xlat48 = u_xlat16.y * u_xlat16.y;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat2.x = u_xlat16.y * u_xlat16.y + -1.0;
					    u_xlat17.x = u_xlat17.x * u_xlat2.x + 1.00001001;
					    u_xlat16.x = u_xlat16.x * u_xlat16.x;
					    u_xlat16.x = max(u_xlat16.x, 0.100000001);
					    u_xlat2.x = u_xlat17.z * u_xlat17.z + 0.5;
					    u_xlat16.x = u_xlat16.x * u_xlat2.x;
					    u_xlat17.x = u_xlat17.x * u_xlat17.x;
					    u_xlat16.xy = u_xlat17.xz * u_xlat16.xy;
					    u_xlat16.x = u_xlat16.x * 4.0;
					    u_xlat16.x = u_xlat48 / u_xlat16.x;
					    u_xlat32 = (-u_xlat16.y) * u_xlat11.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = u_xlat16.xxx * u_xlat6.xyz + u_xlat4.xyz;
					    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
					    u_xlat3.xyz = u_xlat4.xyz * u_xlat9.xyz;
					    u_xlat1.xyw = u_xlat2.xyz * u_xlat1.xxx + u_xlat3.xyz;
					    u_xlat16.xyz = u_xlat11.xzw * vec3(u_xlat32);
					    u_xlat33 = (-u_xlat33) + 1.0;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat33 = u_xlat33 * u_xlat33;
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat33) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat16.xyz * u_xlat2.xyz + u_xlat1.xyw;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat48 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat48 = u_xlat48 * _ProjectionParams.z;
					    u_xlat48 = max(u_xlat48, 0.0);
					    u_xlat48 = u_xlat48 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat48 = clamp(u_xlat48, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat48) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1;
						vec4 _LightColor0;
						vec4 unused_0_3;
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_23[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[38];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_9[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bool u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec4 u_xlat11;
					vec4 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					bvec3 u_xlatb16;
					vec3 u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					vec3 u_xlat20;
					float u_xlat21;
					float u_xlat34;
					float u_xlat35;
					float u_xlat37;
					float u_xlat38;
					bool u_xlatb38;
					vec2 u_xlat40;
					float u_xlat42;
					float u_xlat44;
					float u_xlat51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					bool u_xlatb54;
					float u_xlat55;
					bool u_xlatb55;
					float u_xlat56;
					bool u_xlatb56;
					float u_xlat57;
					bool u_xlatb57;
					float u_xlat58;
					bool u_xlatb58;
					float u_xlat59;
					bool u_xlatb59;
					float u_xlat60;
					bool u_xlatb60;
					float u_xlat61;
					float u_xlat62;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat51 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat51 = inversesqrt(u_xlat51);
					    u_xlat2.xyz = vec3(u_xlat51) * u_xlat1.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat52 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat53 = u_xlat53 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat21 = _AnimScale * _Time.y;
					    u_xlat52 = _Time.y * _AnimScale + u_xlat52;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat38 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat53 + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat5.x = u_xlat55 * 0.5 + u_xlat3.z;
					    u_xlat55 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat53 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat53 = u_xlat52 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat5.y = u_xlat53 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat38<_Mask;
					    u_xlat5.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat53 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + u_xlat21;
					    u_xlat38 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat53 = u_xlat53 + 0.5;
					    u_xlat53 = u_xlat53 / u_xlat38;
					    u_xlat38 = floor(u_xlat53);
					    u_xlat53 = fract(u_xlat53);
					    u_xlat55 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat55 = u_xlat38 + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat56 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat56 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat56 = u_xlat53 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat7.x = u_xlat56 * 0.5 + u_xlat6.x;
					    u_xlat56 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat38 = u_xlat56 * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat53 * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat7.y = u_xlat38 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat55<_Mask;
					    u_xlat7.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat38 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat21;
					    u_xlat55 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + 0.5;
					    u_xlat55 = u_xlat55 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat55;
					    u_xlat55 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat56 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat56 = u_xlat55 + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat55;
					    u_xlat6.x = u_xlat38 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat40.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat55 = u_xlat40.x * _AnimIntensity + u_xlat55;
					    u_xlat55 = u_xlat38 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat6.y = u_xlat55 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb55 = u_xlat56<_Mask;
					    u_xlat6.xy = (bool(u_xlatb55)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat55 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat55 = sin(u_xlat55);
					    u_xlat55 = u_xlat55 * 0.5 + u_xlat21;
					    u_xlat56 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + 0.5;
					    u_xlat56 = u_xlat56 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat55 = u_xlat55 + 0.5;
					    u_xlat55 = u_xlat55 / u_xlat56;
					    u_xlat56 = floor(u_xlat55);
					    u_xlat55 = fract(u_xlat55);
					    u_xlat57 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat57 = u_xlat56 + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat58 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat58 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat58 = u_xlat55 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat9.x = u_xlat58 * 0.5 + u_xlat8.x;
					    u_xlat58 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat56 = u_xlat58 * _AnimIntensity + u_xlat56;
					    u_xlat56 = u_xlat55 * _BubbleDrift + u_xlat56;
					    u_xlat56 = sin(u_xlat56);
					    u_xlat9.y = u_xlat56 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb56 = u_xlat57<_Mask;
					    u_xlat9.xy = (bool(u_xlatb56)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat56 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat56 = sin(u_xlat56);
					    u_xlat56 = u_xlat56 * 0.5 + u_xlat21;
					    u_xlat57 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + 0.5;
					    u_xlat57 = u_xlat57 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat56 = u_xlat56 + 0.5;
					    u_xlat56 = u_xlat56 / u_xlat57;
					    u_xlat57 = floor(u_xlat56);
					    u_xlat56 = fract(u_xlat56);
					    u_xlat58 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat58 = u_xlat57 + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat57;
					    u_xlat8.x = u_xlat56 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat42 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat57 = u_xlat42 * _AnimIntensity + u_xlat57;
					    u_xlat57 = u_xlat56 * _BubbleDrift + u_xlat57;
					    u_xlat57 = sin(u_xlat57);
					    u_xlat8.y = u_xlat57 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb57 = u_xlat58<_Mask;
					    u_xlat8.xy = (bool(u_xlatb57)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat57 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat57 = sin(u_xlat57);
					    u_xlat57 = u_xlat57 * 0.5 + u_xlat21;
					    u_xlat58 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + 0.5;
					    u_xlat58 = u_xlat58 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat57 = u_xlat57 + 0.5;
					    u_xlat57 = u_xlat57 / u_xlat58;
					    u_xlat58 = floor(u_xlat57);
					    u_xlat57 = fract(u_xlat57);
					    u_xlat59 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat59 = u_xlat58 + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat60 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat60 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat60 = u_xlat57 * _BubbleDrift + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat11.x = u_xlat60 * 0.5 + u_xlat10.x;
					    u_xlat60 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat58 = u_xlat60 * _AnimIntensity + u_xlat58;
					    u_xlat58 = u_xlat57 * _BubbleDrift + u_xlat58;
					    u_xlat58 = sin(u_xlat58);
					    u_xlat11.y = u_xlat58 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb58 = u_xlat59<_Mask;
					    u_xlat11.xy = (bool(u_xlatb58)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat58 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat58 = sin(u_xlat58);
					    u_xlat58 = u_xlat58 * 0.5 + u_xlat21;
					    u_xlat59 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + 0.5;
					    u_xlat59 = u_xlat59 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat58 = u_xlat58 + 0.5;
					    u_xlat58 = u_xlat58 / u_xlat59;
					    u_xlat59 = floor(u_xlat58);
					    u_xlat58 = fract(u_xlat58);
					    u_xlat60 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat60 = u_xlat59 + u_xlat60;
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat59;
					    u_xlat10.x = u_xlat58 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat44 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat59 = u_xlat44 * _AnimIntensity + u_xlat59;
					    u_xlat59 = u_xlat58 * _BubbleDrift + u_xlat59;
					    u_xlat59 = sin(u_xlat59);
					    u_xlat10.y = u_xlat59 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb59 = u_xlat60<_Mask;
					    u_xlat10.xy = (bool(u_xlatb59)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat59 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat59 = sin(u_xlat59);
					    u_xlat59 = u_xlat59 * 0.5 + u_xlat21;
					    u_xlat60 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat60 = sin(u_xlat60);
					    u_xlat60 = u_xlat60 * 0.5 + 0.5;
					    u_xlat60 = u_xlat60 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat59 = u_xlat59 + 0.5;
					    u_xlat59 = u_xlat59 / u_xlat60;
					    u_xlat60 = floor(u_xlat59);
					    u_xlat59 = fract(u_xlat59);
					    u_xlat61 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat61 = u_xlat60 + u_xlat61;
					    u_xlat61 = sin(u_xlat61);
					    u_xlat61 = u_xlat61 * 0.5 + 0.5;
					    u_xlat62 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat62 = u_xlat62 * _AnimIntensity + u_xlat60;
					    u_xlat62 = u_xlat59 * _BubbleDrift + u_xlat62;
					    u_xlat62 = sin(u_xlat62);
					    u_xlat12.x = u_xlat62 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat60;
					    u_xlat3.x = u_xlat59 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb60 = u_xlat61<_Mask;
					    u_xlat12.xy = (bool(u_xlatb60)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat21;
					    u_xlat20.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat20.x = u_xlat20.x * 0.5 + 0.5;
					    u_xlat20.x = u_xlat20.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat20.x;
					    u_xlat20.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat20.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat20.x;
					    u_xlat21 = u_xlat3.x * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat13.x = u_xlat21 * 0.5 + u_xlat3.z;
					    u_xlat37 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat20.x = u_xlat37 * _AnimIntensity + u_xlat20.x;
					    u_xlat20.x = u_xlat3.x * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat13.y = u_xlat20.x * 0.5 + u_xlat3.w;
					    u_xlat20.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb54 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb54)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat20.x = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat20.x = sqrt(u_xlat20.x);
					    u_xlat52 = log2(u_xlat52);
					    u_xlat52 = u_xlat52 * _BubbleParams.w;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = (-u_xlat52) + 1.0;
					    u_xlat5.z = u_xlat52 * _BubbleParams.x + u_xlat20.x;
					    u_xlat20.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat52 = dot(u_xlat20.xy, u_xlat20.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat7.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat7.z<u_xlat5.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat38);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat6.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat6.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat6.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat55);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat9.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat9.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat9.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat56);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat8.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat8.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat57);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat11.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat11.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat11.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat58);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat10.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat10.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat59);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat12.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat12.z<u_xlat20.z;
					    u_xlat20.xyz = (bool(u_xlatb52)) ? u_xlat12.xyz : u_xlat20.xyz;
					    u_xlat4.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat52 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat52 = sqrt(u_xlat52);
					    u_xlat53 = log2(u_xlat3.x);
					    u_xlat53 = u_xlat53 * _BubbleParams.w;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat13.z = u_xlat53 * _BubbleParams.x + u_xlat52;
					    u_xlatb52 = u_xlat13.z<u_xlat20.z;
					    u_xlat3.xyz = (bool(u_xlatb52)) ? u_xlat13.xyz : u_xlat20.xyz;
					    u_xlat52 = u_xlat3.z * _BubbleParams.y;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat53 = (-u_xlat52) * u_xlat52 + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat37 = (-u_xlat52) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * 3.1415;
					    u_xlat52 = cos(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.600000024 + 0.5;
					    u_xlat52 = clamp(u_xlat52, 0.0, 1.0);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat52 = float(1.0) / u_xlat52;
					    u_xlat53 = u_xlat53 + (-u_xlat37);
					    u_xlat4.z = u_xlat52 * u_xlat53 + u_xlat37;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat52 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xy = vec2(u_xlat52) * u_xlat3.xy;
					    u_xlat52 = u_xlat4.z * u_xlat4.z;
					    u_xlat53 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat53 = sqrt(u_xlat53);
					    u_xlat4.xy = vec2(u_xlat53) * u_xlat3.xy;
					    u_xlatb52 = u_xlat52!=0.0;
					    u_xlat52 = u_xlatb52 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat52) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat52 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat53 = (-u_xlat37) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat37 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat37 = min(abs(u_xlat37), 1.0);
					    u_xlat37 = _BuildUp * 2.0 + (-u_xlat37);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = (-u_xlat37) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat37) + (-vec2(_AlphaThreshold));
					    u_xlat37 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat37);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat37 = log2(u_xlat4.x);
					    u_xlat37 = u_xlat37 * 1.5;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat4.x = (-u_xlat37) + 1.0;
					    u_xlat6.x = u_xlat53 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat40.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat40.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat40.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat53 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb55 = u_xlat5.x<vs_TEXCOORD1.w;
					    u_xlat5.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5 = vs_TEXCOORD1.w<u_xlat5.x;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = u_xlat5.y<vs_TEXCOORD3.w;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlatb5 = vs_TEXCOORD3.w<u_xlat5.z;
					    u_xlatb55 = u_xlatb55 || u_xlatb5;
					    u_xlat53 = (u_xlatb55) ? 0.0 : u_xlat53;
					    u_xlat55 = log2(_AlphaThreshold);
					    u_xlat55 = u_xlat55 * 0.300000012;
					    u_xlat55 = exp2(u_xlat55);
					    u_xlat55 = (-u_xlat55) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat55) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat55 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat55 + u_xlat53;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat8 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat8.x = u_xlat8.w * u_xlat8.x;
					    u_xlat8.xy = u_xlat8.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat53 = dot(u_xlat8.xy, u_xlat8.xy);
					    u_xlat53 = min(u_xlat53, 1.0);
					    u_xlat53 = (-u_xlat53) + 1.0;
					    u_xlat8.z = sqrt(u_xlat53);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat52) + (-u_xlat8.xyz);
					    u_xlat3.xyz = vec3(u_xlat37) * u_xlat3.xyw + u_xlat8.xyz;
					    u_xlat52 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat3.xyz;
					    u_xlat8.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat8.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat8.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat52 = dot(u_xlat8.xyz, u_xlat8.xyz);
					    u_xlat52 = inversesqrt(u_xlat52);
					    u_xlat3.xyz = vec3(u_xlat52) * u_xlat8.xyz;
					    u_xlat8 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat52 = dot((-u_xlat2.xyz), u_xlat3.xyz);
					    u_xlat52 = u_xlat52 + u_xlat52;
					    u_xlat9.xyz = u_xlat3.xyz * (-vec3(u_xlat52)) + (-u_xlat2.xyz);
					    u_xlatb52 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb52){
					        u_xlatb52 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat10.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat10.xyz;
					        u_xlat10.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat10.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat10.xyz = (bool(u_xlatb52)) ? u_xlat10.xyz : u_xlat0.xyz;
					        u_xlat10.xyz = u_xlat10.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat10.yzw = u_xlat10.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat52 = u_xlat10.y * 0.25;
					        u_xlat53 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat55 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat52 = max(u_xlat52, u_xlat53);
					        u_xlat10.x = min(u_xlat55, u_xlat52);
					        u_xlat11 = texture(unity_ProbeVolumeSH, u_xlat10.xzw);
					        u_xlat12.xyz = u_xlat10.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat12 = texture(unity_ProbeVolumeSH, u_xlat12.xyz);
					        u_xlat10.xyz = u_xlat10.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(u_xlat11, u_xlat3);
					        u_xlat11.y = dot(u_xlat12, u_xlat3);
					        u_xlat11.z = dot(u_xlat10, u_xlat3);
					    } else {
					        u_xlat3.w = 1.0;
					        u_xlat11.x = dot(unity_SHAr, u_xlat3);
					        u_xlat11.y = dot(unity_SHAg, u_xlat3);
					        u_xlat11.z = dot(unity_SHAb, u_xlat3);
					    }
					    u_xlat10 = u_xlat3.yzzx * u_xlat3.xyzz;
					    u_xlat12.x = dot(unity_SHBr, u_xlat10);
					    u_xlat12.y = dot(unity_SHBg, u_xlat10);
					    u_xlat12.z = dot(unity_SHBb, u_xlat10);
					    u_xlat52 = u_xlat3.y * u_xlat3.y;
					    u_xlat52 = u_xlat3.x * u_xlat3.x + (-u_xlat52);
					    u_xlat10.xyz = unity_SHC.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    u_xlat10.xyz = u_xlat10.xyz + u_xlat11.xyz;
					    u_xlat10.xyz = max(u_xlat10.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat11 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat52 = log2(u_xlat11.w);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.y;
					    u_xlat52 = exp2(u_xlat52);
					    u_xlat52 = u_xlat52 * unity_Lightmap_HDR.x;
					    u_xlat10.xyz = vec3(u_xlat52) * u_xlat11.xyz + u_xlat10.xyz;
					    u_xlatb52 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb52){
					        u_xlat52 = dot(u_xlat9.xyz, u_xlat9.xyz);
					        u_xlat52 = inversesqrt(u_xlat52);
					        u_xlat11.xyz = vec3(u_xlat52) * u_xlat9.xyz;
					        u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					        u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					        u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat12;
					            hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					            hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					            hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					            u_xlat12 = hlslcc_movcTemp;
					        }
					        u_xlat52 = min(u_xlat12.y, u_xlat12.x);
					        u_xlat52 = min(u_xlat12.z, u_xlat52);
					        u_xlat12.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat11.xyz = u_xlat11.xyz * vec3(u_xlat52) + u_xlat12.xyz;
					    } else {
					        u_xlat11.xyz = u_xlat9.xyz;
					    }
					    u_xlat52 = (-u_xlat8.x) * 0.699999988 + 1.70000005;
					    u_xlat52 = u_xlat52 * u_xlat8.x;
					    u_xlat52 = u_xlat52 * 6.0;
					    u_xlat11 = textureLod(unity_SpecCube0, u_xlat11.xyz, u_xlat52);
					    u_xlat53 = u_xlat11.w + -1.0;
					    u_xlat53 = unity_SpecCube0_HDR.w * u_xlat53 + 1.0;
					    u_xlat53 = log2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.y;
					    u_xlat53 = exp2(u_xlat53);
					    u_xlat53 = u_xlat53 * unity_SpecCube0_HDR.x;
					    u_xlat12.xyz = u_xlat11.xyz * vec3(u_xlat53);
					    u_xlatb54 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb54){
					        u_xlatb54 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb54){
					            u_xlat54 = dot(u_xlat9.xyz, u_xlat9.xyz);
					            u_xlat54 = inversesqrt(u_xlat54);
					            u_xlat13.xyz = vec3(u_xlat54) * u_xlat9.xyz;
					            u_xlat14.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat14.xyz = u_xlat14.xyz / u_xlat13.xyz;
					            u_xlat15.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat15.xyz = u_xlat15.xyz / u_xlat13.xyz;
					            u_xlatb16.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat13.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat14;
					                hlslcc_movcTemp.x = (u_xlatb16.x) ? u_xlat14.x : u_xlat15.x;
					                hlslcc_movcTemp.y = (u_xlatb16.y) ? u_xlat14.y : u_xlat15.y;
					                hlslcc_movcTemp.z = (u_xlatb16.z) ? u_xlat14.z : u_xlat15.z;
					                u_xlat14 = hlslcc_movcTemp;
					            }
					            u_xlat54 = min(u_xlat14.y, u_xlat14.x);
					            u_xlat54 = min(u_xlat14.z, u_xlat54);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat9.xyz = u_xlat13.xyz * vec3(u_xlat54) + u_xlat0.xyz;
					        }
					        u_xlat9 = textureLod(unity_SpecCube1, u_xlat9.xyz, u_xlat52);
					        u_xlat0.x = u_xlat9.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat9.xyz * u_xlat0.xxx;
					        u_xlat9.xyz = vec3(u_xlat53) * u_xlat11.xyz + (-u_xlat0.xyz);
					        u_xlat12.xyz = unity_SpecCube0_BoxMin.www * u_xlat9.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat6.y, u_xlat6.x);
					    u_xlat0.x = max(u_xlat6.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat4.xyz = u_xlat0.xxx * u_xlat4.xyz;
					    u_xlat17.xyz = u_xlat1.xyz * vec3(u_xlat51) + _WorldSpaceLightPos0.xyz;
					    u_xlat1.x = dot(u_xlat17.xyz, u_xlat17.xyz);
					    u_xlat1.x = max(u_xlat1.x, 0.00100000005);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat17.xyz = u_xlat17.xyz * u_xlat1.xxx;
					    u_xlat1.x = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat18 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
					    u_xlat35 = dot(u_xlat3.xyz, u_xlat17.xyz);
					    u_xlat35 = clamp(u_xlat35, 0.0, 1.0);
					    u_xlat17.x = dot(_WorldSpaceLightPos0.xyz, u_xlat17.xyz);
					    u_xlat17.x = clamp(u_xlat17.x, 0.0, 1.0);
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = dot(vec2(u_xlat34), u_xlat8.xx);
					    u_xlat34 = u_xlat34 + -0.5;
					    u_xlat51 = (-u_xlat18) + 1.0;
					    u_xlat52 = u_xlat51 * u_xlat51;
					    u_xlat52 = u_xlat52 * u_xlat52;
					    u_xlat51 = u_xlat51 * u_xlat52;
					    u_xlat51 = u_xlat34 * u_xlat51 + 1.0;
					    u_xlat52 = -abs(u_xlat1.x) + 1.0;
					    u_xlat2.x = u_xlat52 * u_xlat52;
					    u_xlat2.x = u_xlat2.x * u_xlat2.x;
					    u_xlat52 = u_xlat52 * u_xlat2.x;
					    u_xlat34 = u_xlat34 * u_xlat52 + 1.0;
					    u_xlat34 = u_xlat34 * u_xlat51;
					    u_xlat34 = u_xlat18 * u_xlat34;
					    u_xlat51 = u_xlat8.x * u_xlat8.x;
					    u_xlat51 = max(u_xlat51, 0.00200000009);
					    u_xlat2.x = (-u_xlat51) + 1.0;
					    u_xlat19 = abs(u_xlat1.x) * u_xlat2.x + u_xlat51;
					    u_xlat2.x = u_xlat18 * u_xlat2.x + u_xlat51;
					    u_xlat1.x = abs(u_xlat1.x) * u_xlat2.x;
					    u_xlat1.x = u_xlat18 * u_xlat19 + u_xlat1.x;
					    u_xlat1.x = u_xlat1.x + 9.99999975e-06;
					    u_xlat1.x = 0.5 / u_xlat1.x;
					    u_xlat2.x = u_xlat51 * u_xlat51;
					    u_xlat19 = u_xlat35 * u_xlat2.x + (-u_xlat35);
					    u_xlat35 = u_xlat19 * u_xlat35 + 1.0;
					    u_xlat2.x = u_xlat2.x * 0.318309873;
					    u_xlat35 = u_xlat35 * u_xlat35 + 1.00000001e-07;
					    u_xlat35 = u_xlat2.x / u_xlat35;
					    u_xlat1.x = u_xlat35 * u_xlat1.x;
					    u_xlat1.x = u_xlat1.x * 3.14159274;
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat1.x = max(u_xlat1.x, 0.0);
					    u_xlat51 = u_xlat51 * u_xlat51 + 1.0;
					    u_xlat51 = float(1.0) / u_xlat51;
					    u_xlat18 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb18 = u_xlat18!=0.0;
					    u_xlat18 = u_xlatb18 ? 1.0 : float(0.0);
					    u_xlat1.x = u_xlat18 * u_xlat1.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat5.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat2.xyz = _LightColor0.xyz * vec3(u_xlat34) + u_xlat10.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * _LightColor0.xyz;
					    u_xlat17.x = (-u_xlat17.x) + 1.0;
					    u_xlat34 = u_xlat17.x * u_xlat17.x;
					    u_xlat34 = u_xlat34 * u_xlat34;
					    u_xlat17.x = u_xlat17.x * u_xlat34;
					    u_xlat3.xyz = u_xlat8.yzw * u_xlat17.xxx + u_xlat6.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat3.xyz;
					    u_xlat1.xyz = u_xlat4.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat17.xyz = u_xlat12.xyz * vec3(u_xlat51);
					    u_xlat2.xyz = (-u_xlat5.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat2.xyz = vec3(u_xlat52) * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat17.xyz * u_xlat2.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat7.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat51 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat51 = (-u_xlat51) + 1.0;
					    u_xlat51 = u_xlat51 * _ProjectionParams.z;
					    u_xlat51 = max(u_xlat51, 0.0);
					    u_xlat51 = u_xlat51 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat51 = clamp(u_xlat51, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat51) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat45 = u_xlat45 * u_xlat46;
					    u_xlat45 = u_xlat45 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat45);
					    u_xlat46 = u_xlat9.w + -1.0;
					    u_xlat46 = unity_SpecCube0_HDR.w * u_xlat46 + 1.0;
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat46);
					    u_xlatb47 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb47){
					        u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb47){
					            u_xlat47 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat47 = inversesqrt(u_xlat47);
					            u_xlat11.xyz = vec3(u_xlat47) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat47 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat47 = min(u_xlat12.z, u_xlat47);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat47) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat45);
					        u_xlat45 = u_xlat0.w + -1.0;
					        u_xlat45 = unity_SpecCube1_HDR.w * u_xlat45 + 1.0;
					        u_xlat45 = log2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.y;
					        u_xlat45 = exp2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45);
					        u_xlat7.xyz = vec3(u_xlat46) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat15.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat16.x = u_xlat1.x * u_xlat1.x;
					    u_xlat16.x = u_xlat1.x * u_xlat16.x;
					    u_xlat1.x = u_xlat1.x * u_xlat16.x;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat16.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat16.xyz + u_xlat5.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat10.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat15.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat10.xy = (-vec2(u_xlat45)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat46 = u_xlat45 * u_xlat10.x;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xzw = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xzw = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = u_xlat45 * u_xlat30;
					    u_xlat30 = (-u_xlat30) * u_xlat10.y + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xzw * vec3(u_xlat30);
					    u_xlat15 = (-u_xlat15) + 1.0;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat3.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlat8 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat8.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = u_xlat8.xyz * vec3(u_xlat46);
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec3 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat46 = u_xlat45 * u_xlat46;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = max(u_xlat30, 0.00200000009);
					    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;
					    u_xlat30 = float(1.0) / u_xlat30;
					    u_xlat0.x = u_xlat4.w * _Glossiness + (-u_xlat0.x);
					    u_xlat0.x = u_xlat0.x + 1.0;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xyz * vec3(u_xlat30);
					    u_xlat15 = -abs(u_xlat15) + 1.0;
					    u_xlat30 = u_xlat15 * u_xlat15;
					    u_xlat30 = u_xlat30 * u_xlat30;
					    u_xlat15 = u_xlat15 * u_xlat30;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat8.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat45 = u_xlat45 * u_xlat46;
					    u_xlat45 = u_xlat45 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat45);
					    u_xlat46 = u_xlat9.w + -1.0;
					    u_xlat46 = unity_SpecCube0_HDR.w * u_xlat46 + 1.0;
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat46);
					    u_xlatb47 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb47){
					        u_xlatb47 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb47){
					            u_xlat47 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat47 = inversesqrt(u_xlat47);
					            u_xlat11.xyz = vec3(u_xlat47) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat47 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat47 = min(u_xlat12.z, u_xlat47);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat47) + u_xlat0.xyz;
					        }
					        u_xlat0 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat45);
					        u_xlat45 = u_xlat0.w + -1.0;
					        u_xlat45 = unity_SpecCube1_HDR.w * u_xlat45 + 1.0;
					        u_xlat45 = log2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.y;
					        u_xlat45 = exp2(u_xlat45);
					        u_xlat45 = u_xlat45 * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat45);
					        u_xlat7.xyz = vec3(u_xlat46) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat15.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat16.x = u_xlat1.x * u_xlat1.x;
					    u_xlat16.x = u_xlat1.x * u_xlat16.x;
					    u_xlat1.x = u_xlat1.x * u_xlat16.x;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat16.xyz = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat16.xyz + u_xlat5.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * u_xlat10.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat15.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat10.xy = (-vec2(u_xlat45)) * vec2(0.699999988, 0.0799999982) + vec2(1.70000005, 0.600000024);
					    u_xlat46 = u_xlat45 * u_xlat10.x;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xzw = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xzw = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = u_xlat45 * u_xlat30;
					    u_xlat30 = (-u_xlat30) * u_xlat10.y + 1.0;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xzw * vec3(u_xlat30);
					    u_xlat15 = (-u_xlat15) + 1.0;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat8.xyz * u_xlat3.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTMAP_SHADOW_MIXING" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unity_Lightmap_HDR;
						vec4 unused_0_1[3];
						float _Glossiness;
						float _SpecScale;
						float _EmissionScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 unused_2_0[39];
						vec4 unity_SHAr;
						vec4 unity_SHAg;
						vec4 unity_SHAb;
						vec4 unity_SHBr;
						vec4 unity_SHBg;
						vec4 unity_SHBb;
						vec4 unity_SHC;
						vec4 unused_2_8[2];
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityReflectionProbes {
						vec4 unity_SpecCube0_BoxMax;
						vec4 unity_SpecCube0_BoxMin;
						vec4 unity_SpecCube0_ProbePosition;
						vec4 unity_SpecCube0_HDR;
						vec4 unity_SpecCube1_BoxMax;
						vec4 unity_SpecCube1_BoxMin;
						vec4 unity_SpecCube1_ProbePosition;
						vec4 unity_SpecCube1_HDR;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _Emission;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_Lightmap;
					uniform  samplerCube unity_SpecCube0;
					uniform  samplerCube unity_SpecCube1;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					in  vec4 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					in  vec4 vs_TEXCOORD4;
					in  float vs_TEXCOORD5;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bool u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec4 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					bvec3 u_xlatb12;
					vec3 u_xlat13;
					bvec3 u_xlatb14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat30;
					float u_xlat32;
					float u_xlat33;
					bool u_xlatb33;
					vec2 u_xlat35;
					float u_xlat37;
					float u_xlat39;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					bool u_xlatb52;
					float u_xlat53;
					bool u_xlatb53;
					float u_xlat54;
					float u_xlat55;
					void main()
					{
					    u_xlat0.x = vs_TEXCOORD1.w;
					    u_xlat0.y = vs_TEXCOORD2.w;
					    u_xlat0.z = vs_TEXCOORD3.w;
					    u_xlat1.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat45 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat1.xyz = vec3(u_xlat45) * u_xlat1.xyz;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat45 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat45 = _Time.y * _AnimScale + u_xlat45;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat33 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat33 = u_xlat46 + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat48 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat48 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat48 = u_xlat45 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat4.x = u_xlat48 * 0.5 + u_xlat2.z;
					    u_xlat48 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat46 = u_xlat48 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat4.y = u_xlat46 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat33<_Mask;
					    u_xlat4.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat46 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat33 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + 0.5;
					    u_xlat33 = u_xlat33 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat33;
					    u_xlat33 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat33 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat6.x = u_xlat49 * 0.5 + u_xlat5.x;
					    u_xlat49 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat33 = u_xlat49 * _AnimIntensity + u_xlat33;
					    u_xlat33 = u_xlat46 * _BubbleDrift + u_xlat33;
					    u_xlat33 = sin(u_xlat33);
					    u_xlat6.y = u_xlat33 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb33 = u_xlat48<_Mask;
					    u_xlat6.xy = (bool(u_xlatb33)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat33 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat33 = sin(u_xlat33);
					    u_xlat33 = u_xlat33 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat33 = u_xlat33 + 0.5;
					    u_xlat33 = u_xlat33 / u_xlat48;
					    u_xlat48 = floor(u_xlat33);
					    u_xlat33 = fract(u_xlat33);
					    u_xlat49 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat48;
					    u_xlat5.x = u_xlat33 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat35.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat48 = u_xlat35.x * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat33 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat5.y = u_xlat48 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat5.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat48 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat8.x = u_xlat51 * 0.5 + u_xlat7.x;
					    u_xlat51 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat8.y = u_xlat49 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat8.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat49 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat50;
					    u_xlat7.x = u_xlat49 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat37 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat50 = u_xlat37 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat7.y = u_xlat50 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat7.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat50 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat10.x = u_xlat53 * 0.5 + u_xlat9.x;
					    u_xlat53 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat51 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat51 = u_xlat50 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat10.y = u_xlat51 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat10.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat51 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + u_xlat18;
					    u_xlat52 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat52 = u_xlat52 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat51 = u_xlat51 + 0.5;
					    u_xlat51 = u_xlat51 / u_xlat52;
					    u_xlat52 = floor(u_xlat51);
					    u_xlat51 = fract(u_xlat51);
					    u_xlat53 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat53 = u_xlat52 + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat52;
					    u_xlat9.x = u_xlat51 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat39 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat52 = u_xlat39 * _AnimIntensity + u_xlat52;
					    u_xlat52 = u_xlat51 * _BubbleDrift + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat9.y = u_xlat52 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb52 = u_xlat53<_Mask;
					    u_xlat9.xy = (bool(u_xlatb52)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat52 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + u_xlat18;
					    u_xlat53 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat53 = sin(u_xlat53);
					    u_xlat53 = u_xlat53 * 0.5 + 0.5;
					    u_xlat53 = u_xlat53 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat52 = u_xlat52 + 0.5;
					    u_xlat52 = u_xlat52 / u_xlat53;
					    u_xlat53 = floor(u_xlat52);
					    u_xlat52 = fract(u_xlat52);
					    u_xlat54 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat54 = u_xlat53 + u_xlat54;
					    u_xlat54 = sin(u_xlat54);
					    u_xlat54 = u_xlat54 * 0.5 + 0.5;
					    u_xlat55 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat55 = u_xlat55 * _AnimIntensity + u_xlat53;
					    u_xlat55 = u_xlat52 * _BubbleDrift + u_xlat55;
					    u_xlat55 = sin(u_xlat55);
					    u_xlat11.x = u_xlat55 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat53;
					    u_xlat2.x = u_xlat52 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb53 = u_xlat54<_Mask;
					    u_xlat11.xy = (bool(u_xlatb53)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat17.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat2.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat12.x = u_xlat18 * 0.5 + u_xlat2.z;
					    u_xlat32 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat32 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat2.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat12.y = u_xlat17.x * 0.5 + u_xlat2.w;
					    u_xlat17.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat45 = log2(u_xlat45);
					    u_xlat45 = u_xlat45 * _BubbleParams.w;
					    u_xlat45 = exp2(u_xlat45);
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat4.z = u_xlat45 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat45 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat46);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat6.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat6.z<u_xlat4.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat33);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat5.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat5.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat5.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat48);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat8.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat49);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat7.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat7.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat50);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat10.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat51);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat9.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat52);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat11.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb45)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat3.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat45 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat45 = sqrt(u_xlat45);
					    u_xlat46 = log2(u_xlat2.x);
					    u_xlat46 = u_xlat46 * _BubbleParams.w;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat12.z = u_xlat46 * _BubbleParams.x + u_xlat45;
					    u_xlatb45 = u_xlat12.z<u_xlat17.z;
					    u_xlat2.xyz = (bool(u_xlatb45)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat45 = u_xlat2.z * _BubbleParams.y;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat46 = (-u_xlat45) * u_xlat45 + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat32 = (-u_xlat45) + 1.0;
					    u_xlat32 = log2(u_xlat32);
					    u_xlat32 = u_xlat32 * _BubbleParams.z;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat32 = min(u_xlat32, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * 3.1415;
					    u_xlat45 = cos(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.600000024 + 0.5;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat45 = float(1.0) / u_xlat45;
					    u_xlat46 = u_xlat46 + (-u_xlat32);
					    u_xlat3.z = u_xlat45 * u_xlat46 + u_xlat32;
					    u_xlat2.xy = u_xlat0.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat45 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xy = vec2(u_xlat45) * u_xlat2.xy;
					    u_xlat45 = u_xlat3.z * u_xlat3.z;
					    u_xlat46 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat46 = sqrt(u_xlat46);
					    u_xlat3.xy = vec2(u_xlat46) * u_xlat2.xy;
					    u_xlatb45 = u_xlat45!=0.0;
					    u_xlat45 = u_xlatb45 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat45) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat45 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat46 = (-u_xlat32) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat32 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat32 = min(abs(u_xlat32), 1.0);
					    u_xlat32 = _BuildUp * 2.0 + (-u_xlat32);
					    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
					    u_xlat32 = u_xlat32 * 3.1415;
					    u_xlat32 = cos(u_xlat32);
					    u_xlat32 = (-u_xlat32) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat32) + (-vec2(_AlphaThreshold));
					    u_xlat32 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat32);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat32 = log2(u_xlat3.x);
					    u_xlat32 = u_xlat32 * 1.5;
					    u_xlat32 = exp2(u_xlat32);
					    u_xlat3.x = (-u_xlat32) + 1.0;
					    u_xlat5.x = u_xlat46 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat35.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat35.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat35.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat46 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb48 = u_xlat4.x<vs_TEXCOORD1.w;
					    u_xlat4.xz = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4 = vs_TEXCOORD1.w<u_xlat4.x;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = u_xlat4.y<vs_TEXCOORD3.w;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlatb4 = vs_TEXCOORD3.w<u_xlat4.z;
					    u_xlatb48 = u_xlatb48 || u_xlatb4;
					    u_xlat46 = (u_xlatb48) ? 0.0 : u_xlat46;
					    u_xlat48 = log2(_AlphaThreshold);
					    u_xlat48 = u_xlat48 * 0.300000012;
					    u_xlat48 = exp2(u_xlat48);
					    u_xlat48 = (-u_xlat48) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat48) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat48 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat48 + u_xlat46;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_Emission, vs_TEXCOORD0.xy);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat46 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat46 = min(u_xlat46, 1.0);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat7.z = sqrt(u_xlat46);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat45) + (-u_xlat7.xyz);
					    u_xlat2.xyz = vec3(u_xlat32) * u_xlat2.xyw + u_xlat7.xyz;
					    u_xlat45 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat2.xyz;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat45 = inversesqrt(u_xlat45);
					    u_xlat2.xyz = vec3(u_xlat45) * u_xlat7.xyz;
					    u_xlat45 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat46 = dot((-u_xlat1.xyz), u_xlat2.xyz);
					    u_xlat46 = u_xlat46 + u_xlat46;
					    u_xlat7.xyz = u_xlat2.xyz * (-vec3(u_xlat46)) + (-u_xlat1.xyz);
					    u_xlatb46 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb46){
					        u_xlatb46 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD2.www * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD1.www + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD3.www + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb46)) ? u_xlat8.xyz : u_xlat0.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat46 = u_xlat8.y * 0.25;
					        u_xlat48 = unity_ProbeVolumeParams.z * 0.5;
					        u_xlat50 = (-unity_ProbeVolumeParams.z) * 0.5 + 0.25;
					        u_xlat46 = max(u_xlat46, u_xlat48);
					        u_xlat8.x = min(u_xlat50, u_xlat46);
					        u_xlat9 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					        u_xlat10.xyz = u_xlat8.xzw + vec3(0.25, 0.0, 0.0);
					        u_xlat10 = texture(unity_ProbeVolumeSH, u_xlat10.xyz);
					        u_xlat8.xyz = u_xlat8.xzw + vec3(0.5, 0.0, 0.0);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xyz);
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(u_xlat9, u_xlat2);
					        u_xlat9.y = dot(u_xlat10, u_xlat2);
					        u_xlat9.z = dot(u_xlat8, u_xlat2);
					    } else {
					        u_xlat2.w = 1.0;
					        u_xlat9.x = dot(unity_SHAr, u_xlat2);
					        u_xlat9.y = dot(unity_SHAg, u_xlat2);
					        u_xlat9.z = dot(unity_SHAb, u_xlat2);
					    }
					    u_xlat8 = u_xlat2.yzzx * u_xlat2.xyzz;
					    u_xlat10.x = dot(unity_SHBr, u_xlat8);
					    u_xlat10.y = dot(unity_SHBg, u_xlat8);
					    u_xlat10.z = dot(unity_SHBb, u_xlat8);
					    u_xlat46 = u_xlat2.y * u_xlat2.y;
					    u_xlat46 = u_xlat2.x * u_xlat2.x + (-u_xlat46);
					    u_xlat8.xyz = unity_SHC.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    u_xlat8.xyz = u_xlat8.xyz + u_xlat9.xyz;
					    u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));
					    u_xlat9 = texture(unity_Lightmap, vs_TEXCOORD4.xy);
					    u_xlat46 = log2(u_xlat9.w);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.y;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = u_xlat46 * unity_Lightmap_HDR.x;
					    u_xlat8.xyz = vec3(u_xlat46) * u_xlat9.xyz + u_xlat8.xyz;
					    u_xlatb46 = 0.0<unity_SpecCube0_ProbePosition.w;
					    if(u_xlatb46){
					        u_xlat46 = dot(u_xlat7.xyz, u_xlat7.xyz);
					        u_xlat46 = inversesqrt(u_xlat46);
					        u_xlat9.xyz = vec3(u_xlat46) * u_xlat7.xyz;
					        u_xlat10.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMax.xyz;
					        u_xlat10.xyz = u_xlat10.xyz / u_xlat9.xyz;
					        u_xlat11.xyz = (-u_xlat0.xyz) + unity_SpecCube0_BoxMin.xyz;
					        u_xlat11.xyz = u_xlat11.xyz / u_xlat9.xyz;
					        u_xlatb12.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat9.xyzx).xyz;
					        {
					            vec4 hlslcc_movcTemp = u_xlat10;
					            hlslcc_movcTemp.x = (u_xlatb12.x) ? u_xlat10.x : u_xlat11.x;
					            hlslcc_movcTemp.y = (u_xlatb12.y) ? u_xlat10.y : u_xlat11.y;
					            hlslcc_movcTemp.z = (u_xlatb12.z) ? u_xlat10.z : u_xlat11.z;
					            u_xlat10 = hlslcc_movcTemp;
					        }
					        u_xlat46 = min(u_xlat10.y, u_xlat10.x);
					        u_xlat46 = min(u_xlat10.z, u_xlat46);
					        u_xlat10.xyz = u_xlat0.xyz + (-unity_SpecCube0_ProbePosition.xyz);
					        u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat46) + u_xlat10.xyz;
					    } else {
					        u_xlat9.xyz = u_xlat7.xyz;
					    }
					    u_xlat46 = (-u_xlat45) * 0.699999988 + 1.70000005;
					    u_xlat46 = u_xlat45 * u_xlat46;
					    u_xlat46 = u_xlat46 * 6.0;
					    u_xlat9 = textureLod(unity_SpecCube0, u_xlat9.xyz, u_xlat46);
					    u_xlat47 = u_xlat9.w + -1.0;
					    u_xlat47 = unity_SpecCube0_HDR.w * u_xlat47 + 1.0;
					    u_xlat47 = log2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.y;
					    u_xlat47 = exp2(u_xlat47);
					    u_xlat47 = u_xlat47 * unity_SpecCube0_HDR.x;
					    u_xlat10.xyz = u_xlat9.xyz * vec3(u_xlat47);
					    u_xlatb48 = unity_SpecCube0_BoxMin.w<0.999989986;
					    if(u_xlatb48){
					        u_xlatb48 = 0.0<unity_SpecCube1_ProbePosition.w;
					        if(u_xlatb48){
					            u_xlat48 = dot(u_xlat7.xyz, u_xlat7.xyz);
					            u_xlat48 = inversesqrt(u_xlat48);
					            u_xlat11.xyz = vec3(u_xlat48) * u_xlat7.xyz;
					            u_xlat12.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMax.xyz;
					            u_xlat12.xyz = u_xlat12.xyz / u_xlat11.xyz;
					            u_xlat13.xyz = (-u_xlat0.xyz) + unity_SpecCube1_BoxMin.xyz;
					            u_xlat13.xyz = u_xlat13.xyz / u_xlat11.xyz;
					            u_xlatb14.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat11.xyzx).xyz;
					            {
					                vec3 hlslcc_movcTemp = u_xlat12;
					                hlslcc_movcTemp.x = (u_xlatb14.x) ? u_xlat12.x : u_xlat13.x;
					                hlslcc_movcTemp.y = (u_xlatb14.y) ? u_xlat12.y : u_xlat13.y;
					                hlslcc_movcTemp.z = (u_xlatb14.z) ? u_xlat12.z : u_xlat13.z;
					                u_xlat12 = hlslcc_movcTemp;
					            }
					            u_xlat48 = min(u_xlat12.y, u_xlat12.x);
					            u_xlat48 = min(u_xlat12.z, u_xlat48);
					            u_xlat0.xyz = u_xlat0.xyz + (-unity_SpecCube1_ProbePosition.xyz);
					            u_xlat7.xyz = u_xlat11.xyz * vec3(u_xlat48) + u_xlat0.xyz;
					        }
					        u_xlat7 = textureLod(unity_SpecCube1, u_xlat7.xyz, u_xlat46);
					        u_xlat0.x = u_xlat7.w + -1.0;
					        u_xlat0.x = unity_SpecCube1_HDR.w * u_xlat0.x + 1.0;
					        u_xlat0.x = log2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.y;
					        u_xlat0.x = exp2(u_xlat0.x);
					        u_xlat0.x = u_xlat0.x * unity_SpecCube1_HDR.x;
					        u_xlat0.xyz = u_xlat7.xyz * u_xlat0.xxx;
					        u_xlat7.xyz = vec3(u_xlat47) * u_xlat9.xyz + (-u_xlat0.xyz);
					        u_xlat10.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat0.xyz;
					    }
					    u_xlat0.x = max(u_xlat5.y, u_xlat5.x);
					    u_xlat0.x = max(u_xlat5.z, u_xlat0.x);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
					    u_xlat15 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat30 = u_xlat45 * u_xlat45;
					    u_xlat30 = max(u_xlat30, 0.00200000009);
					    u_xlat30 = u_xlat30 * u_xlat30 + 1.0;
					    u_xlat30 = float(1.0) / u_xlat30;
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat0.x = u_xlat4.w * _Glossiness + u_xlat0.x;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat1.xyz = u_xlat10.xyz * vec3(u_xlat30);
					    u_xlat15 = -abs(u_xlat15) + 1.0;
					    u_xlat30 = u_xlat15 * u_xlat15;
					    u_xlat30 = u_xlat30 * u_xlat30;
					    u_xlat15 = u_xlat15 * u_xlat30;
					    u_xlat0.xzw = (-u_xlat4.xyz) * vec3(vec3(_SpecScale, _SpecScale, _SpecScale)) + u_xlat0.xxx;
					    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xzw + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat8.xyz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat6.xyz * vec3(vec3(_EmissionScale, _EmissionScale, _EmissionScale)) + u_xlat0.xyz;
					    u_xlat45 = vs_TEXCOORD5 / _ProjectionParams.y;
					    u_xlat45 = (-u_xlat45) + 1.0;
					    u_xlat45 = u_xlat45 * _ProjectionParams.z;
					    u_xlat45 = max(u_xlat45, 0.0);
					    u_xlat45 = u_xlat45 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat45 = clamp(u_xlat45, 0.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(u_xlat45) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 200
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha One, SrcAlpha One
			ColorMask RGB -1
			ZWrite Off
			GpuProgramID 91583
			Program "vp" {
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "SPOT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "SPOT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "SPOT" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    gl_Position = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[14];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat9;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat0 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
					    u_xlat0 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_TEXCOORD6 = u_xlat0.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat0.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat0.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat0.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat1.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
					    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    vs_TEXCOORD1.y = u_xlat2.x;
					    vs_TEXCOORD1.x = u_xlat1.z;
					    vs_TEXCOORD1.z = u_xlat0.y;
					    vs_TEXCOORD2.x = u_xlat1.x;
					    vs_TEXCOORD3.x = u_xlat1.y;
					    vs_TEXCOORD2.z = u_xlat0.z;
					    vs_TEXCOORD3.z = u_xlat0.x;
					    vs_TEXCOORD2.y = u_xlat2.y;
					    vs_TEXCOORD3.y = u_xlat2.z;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec4 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1 = u_xlat0.yyyy * unity_WorldToLight[1];
					    u_xlat1 = unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat1 = unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
					    vs_TEXCOORD5 = unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out float vs_TEXCOORD6;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec3 vs_TEXCOORD5;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xyz = u_xlat0.yyy * unity_WorldToLight[1].xyz;
					    u_xlat1.xyz = unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
					    u_xlat0.xyz = unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD5.xyz = unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					out float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					out float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[4];
						mat4x4 unity_WorldToLight;
						vec4 unused_0_2[10];
						vec4 _MainTex_ST;
						vec4 _NormalMap_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 unity_ObjectToWorld;
						mat4x4 unity_WorldToObject;
						vec4 unused_1_2;
						vec4 unity_WorldTransformParams;
						vec4 unused_1_4;
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_2_0[17];
						mat4x4 unity_MatrixVP;
						vec4 unused_2_2[2];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_TANGENT0;
					in  vec3 in_NORMAL0;
					in  vec4 in_TEXCOORD0;
					out vec4 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec3 vs_TEXCOORD2;
					out vec3 vs_TEXCOORD3;
					out vec3 vs_TEXCOORD4;
					out vec2 vs_TEXCOORD5;
					out float vs_TEXCOORD6;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					vec3 u_xlat3;
					float u_xlat13;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * unity_ObjectToWorld[1];
					    u_xlat0 = unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat1 = u_xlat0 + unity_ObjectToWorld[3];
					    u_xlat2 = u_xlat1.yyyy * unity_MatrixVP[1];
					    u_xlat2 = unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
					    u_xlat2 = unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
					    u_xlat1 = unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
					    gl_Position = u_xlat1;
					    vs_TEXCOORD6 = u_xlat1.z;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;
					    u_xlat1.y = dot(in_NORMAL0.xyz, unity_WorldToObject[0].xyz);
					    u_xlat1.z = dot(in_NORMAL0.xyz, unity_WorldToObject[1].xyz);
					    u_xlat1.x = dot(in_NORMAL0.xyz, unity_WorldToObject[2].xyz);
					    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
					    u_xlat2.xyz = in_TANGENT0.yyy * unity_ObjectToWorld[1].yzx;
					    u_xlat2.xyz = unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
					    u_xlat2.xyz = unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
					    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat13 = inversesqrt(u_xlat13);
					    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
					    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
					    u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
					    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
					    vs_TEXCOORD1.y = u_xlat3.x;
					    vs_TEXCOORD1.x = u_xlat2.z;
					    vs_TEXCOORD1.z = u_xlat1.y;
					    vs_TEXCOORD2.x = u_xlat2.x;
					    vs_TEXCOORD3.x = u_xlat2.y;
					    vs_TEXCOORD2.z = u_xlat1.z;
					    vs_TEXCOORD3.z = u_xlat1.x;
					    vs_TEXCOORD2.y = u_xlat3.y;
					    vs_TEXCOORD3.y = u_xlat3.z;
					    vs_TEXCOORD4.xyz = unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    u_xlat0 = unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat1.xy = u_xlat0.yy * unity_WorldToLight[1].xy;
					    u_xlat0.xy = unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
					    u_xlat0.xy = unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
					    vs_TEXCOORD5.xy = unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
					    return;
					}"
				}
			}
			Program "fp" {
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTexture0, vec2(u_xlat40));
					    u_xlat39 = u_xlat39 * u_xlat5.x;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTexture0, vec2(u_xlat41));
					    u_xlat40 = u_xlat40 * u_xlat5.x;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    SV_Target0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat7.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					    u_xlat7.xyz = u_xlat7.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat7 = texture(_LightTexture0, vec2(u_xlat44));
					    u_xlat43 = u_xlat43 * u_xlat7.x;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					bvec2 u_xlatb3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat13;
					vec3 u_xlat14;
					vec2 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					float u_xlat25;
					float u_xlat26;
					vec2 u_xlat27;
					bvec2 u_xlatb27;
					vec2 u_xlat28;
					float u_xlat36;
					bool u_xlatb36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					bool u_xlatb38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat36 = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat2.x = u_xlat2.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat26 = _AnimScale * _Time.y;
					    u_xlat36 = _Time.y * _AnimScale + u_xlat36;
					    u_xlat36 = u_xlat36 / u_xlat2.x;
					    u_xlat2.x = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat38 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat2.x + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat2.x;
					    u_xlat3.x = u_xlat36 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat1.z;
					    u_xlat27.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat2.x = u_xlat27.x * _AnimIntensity + u_xlat2.x;
					    u_xlat2.x = u_xlat36 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat3.y = u_xlat2.x * 0.5 + u_xlat1.w;
					    u_xlat3.xy = u_xlat3.xy + vec2(0.5, 0.5);
					    u_xlatb2 = u_xlat38<_Mask;
					    u_xlat3.xy = (bool(u_xlatb2)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat2.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat26;
					    u_xlat38 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat38;
					    u_xlat38 = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat39 = u_xlat38 + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat38;
					    u_xlat5.x = u_xlat2.x * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat38 = u_xlat4.x * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat2.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat5.y = u_xlat38 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat39<_Mask;
					    u_xlat5.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat38 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat26;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat39;
					    u_xlat39 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat39 + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat16.x = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat16.x = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat16.x = u_xlat38 * _BubbleDrift + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat6.x = u_xlat16.x * 0.5 + u_xlat4.z;
					    u_xlat16.x = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat39 = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat38 * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.w;
					    u_xlat16.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat4.x<_Mask;
					    u_xlat4.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat16.xy;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat26;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat41 = u_xlat40 + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat40;
					    u_xlat7.x = u_xlat39 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat6.x * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat41<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat26;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat6.x = u_xlat41 + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat18.x = u_xlat40 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat8.x = u_xlat18.x * 0.5 + u_xlat6.z;
					    u_xlat18.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat41 = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.w;
					    u_xlat18.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat6.x<_Mask;
					    u_xlat6.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat41 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat26;
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat42;
					    u_xlat42 = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat42;
					    u_xlat9.x = u_xlat41 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat42 = u_xlat8.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat41 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat9.y = u_xlat42 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat9.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat42 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat26;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat8.x = u_xlat43 + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat20.x = u_xlat42 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat10.x = u_xlat20.x * 0.5 + u_xlat8.z;
					    u_xlat20.x = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat43 = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.w;
					    u_xlat20.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat8.x<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat43 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat26;
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat44;
					    u_xlat10.x = u_xlat43 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat44;
					    u_xlat1.x = u_xlat43 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat10.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat10.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat26;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat14.x = u_xlat13.x + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat26 = u_xlat26 * _AnimIntensity + u_xlat13.x;
					    u_xlat26 = u_xlat1.x * _BubbleDrift + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat11.x = u_xlat26 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat14.x<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.w;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat3.z = u_xlat36 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat36 = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat13.x = log2(u_xlat2.x);
					    u_xlat13.x = u_xlat13.x * _BubbleParams.w;
					    u_xlat13.x = exp2(u_xlat13.x);
					    u_xlat13.x = (-u_xlat13.x) + 1.0;
					    u_xlat5.z = u_xlat13.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat38);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat4.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat39);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat7.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat40);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat6.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat41);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat9.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat42);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat8.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat43);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat10.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb36)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat36 = u_xlat1.z * _BubbleParams.y;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = (-u_xlat36) * u_xlat36 + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat37 = (-u_xlat36) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.600000024 + 0.5;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat36 = float(1.0) / u_xlat36;
					    u_xlat25 = (-u_xlat37) + u_xlat25;
					    u_xlat2.z = u_xlat36 * u_xlat25 + u_xlat37;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vec2(u_xlat36) * u_xlat1.xy;
					    u_xlat36 = u_xlat2.z * u_xlat2.z;
					    u_xlat25 = (-u_xlat2.z) * u_xlat2.z + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat2.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlatb36 = u_xlat36!=0.0;
					    u_xlat36 = u_xlatb36 ? 1.0 : float(0.0);
					    u_xlat1.xyz = u_xlat2.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat2 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat26 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat26 = min(abs(u_xlat26), 1.0);
					    u_xlat26 = _BuildUp * 2.0 + (-u_xlat26);
					    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
					    u_xlat26 = u_xlat26 * 3.1415;
					    u_xlat26 = cos(u_xlat26);
					    u_xlat26 = (-u_xlat26) * 0.5 + 0.5;
					    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat26) + (-vec2(_AlphaThreshold));
					    u_xlat26 = (-_AlphaThreshold) + 1.0;
					    u_xlat2.xy = u_xlat2.xy / vec2(u_xlat26);
					    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
					    u_xlat2.z = 0.0;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat2.xz);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 1.5;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat26 = (-u_xlat2.x) + 1.0;
					    u_xlat4.x = u_xlat37 + (-u_xlat26);
					    u_xlat4.y = float(0.0);
					    u_xlat28.y = float(0.0);
					    u_xlat5 = texture(_ColorRampTex, u_xlat4.xy);
					    u_xlat5 = u_xlat5 * _Color;
					    u_xlat28.x = _AlphaThreshold * 0.200000003 + u_xlat2.y;
					    u_xlat6 = texture(_AlbedoRampTex, u_xlat28.xy);
					    u_xlat14.xyz = u_xlat5.xyz * u_xlat6.xyz;
					    u_xlat37 = u_xlat3.w * u_xlat5.w;
					    u_xlat3.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb3.xy = lessThan(u_xlat3.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat27.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb27.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat27.xyxy).xy;
					    u_xlatb3.x = u_xlatb27.x || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb3.y || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb27.y || u_xlatb3.x;
					    u_xlat37 = (u_xlatb3.x) ? 0.0 : u_xlat37;
					    u_xlat3.x = log2(_AlphaThreshold);
					    u_xlat3.x = u_xlat3.x * 0.300000012;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat14.xyz = u_xlat14.xyz * u_xlat3.xxx;
					    u_xlat3 = texture(_Specular, u_xlat4.xy);
					    u_xlat3.xyz = u_xlat3.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat37;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat4 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat4.x = u_xlat4.w * u_xlat4.x;
					    u_xlat4.xy = u_xlat4.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat37 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat4.z = sqrt(u_xlat37);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat36) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.xxx * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz;
					    u_xlatb36 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb36){
					        u_xlatb36 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat4.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat4.xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat4.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : vs_TEXCOORD4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat4.yzw = u_xlat4.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat36 = u_xlat4.y * 0.25 + 0.75;
					        u_xlat37 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat4.x = max(u_xlat36, u_xlat37);
					        u_xlat4 = texture(unity_ProbeVolumeSH, u_xlat4.xzw);
					    } else {
					        u_xlat4.x = float(1.0);
					        u_xlat4.y = float(1.0);
					        u_xlat4.z = float(1.0);
					        u_xlat4.w = float(1.0);
					    }
					    u_xlat36 = dot(u_xlat4, unity_OcclusionMaskSelector);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat36) * _LightColor0.xyz;
					    u_xlat36 = max(u_xlat3.y, u_xlat3.x);
					    u_xlat36 = max(u_xlat3.z, u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat37 = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat37 = u_xlat37 + u_xlat37;
					    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat37)) + u_xlat0.xyz;
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat3.w) * _Glossiness + 1.0;
					    u_xlat5 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat5.x * 16.0;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat14.xyz * vec3(u_xlat36) + u_xlat0.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					float u_xlat12;
					vec3 u_xlat13;
					bool u_xlatb13;
					vec2 u_xlat14;
					bool u_xlatb14;
					vec3 u_xlat15;
					bvec2 u_xlatb15;
					float u_xlat16;
					bool u_xlatb16;
					float u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					float u_xlat20;
					bool u_xlatb20;
					float u_xlat21;
					float u_xlat22;
					float u_xlat24;
					float u_xlat25;
					float u_xlat26;
					float u_xlat28;
					vec2 u_xlat29;
					float u_xlat30;
					float u_xlat32;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					float u_xlat45;
					bool u_xlatb45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat14.x = u_xlat14.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat38 = _AnimScale * _Time.y;
					    u_xlat2.x = _Time.y * _AnimScale + u_xlat2.x;
					    u_xlat2.x = u_xlat2.x / u_xlat14.x;
					    u_xlat14.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat14.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat15.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat15.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat4.x = u_xlat15.x * 0.5 + u_xlat1.z;
					    u_xlat15.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat14.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat14.x = u_xlat2.x * _BubbleDrift + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat4.y = u_xlat14.x * 0.5 + u_xlat1.w;
					    u_xlat15.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb14 = u_xlat3.x<_Mask;
					    u_xlat3.xy = (bool(u_xlatb14)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat14.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + u_xlat38;
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat26 + _BubbleDurationMin;
					    u_xlat14.x = u_xlat14.x + 0.5;
					    u_xlat14.x = u_xlat14.x / u_xlat39;
					    u_xlat39 = floor(u_xlat14.x);
					    u_xlat14.x = fract(u_xlat14.x);
					    u_xlat5.x = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat39 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat17 = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat17 = u_xlat17 * _AnimIntensity + u_xlat39;
					    u_xlat17 = u_xlat14.x * _BubbleDrift + u_xlat17;
					    u_xlat17 = sin(u_xlat17);
					    u_xlat6.x = u_xlat17 * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat39 = u_xlat4.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat14.x * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat38;
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat4.x = u_xlat4.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat4.x;
					    u_xlat4.x = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat16 = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat16 = u_xlat4.x + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat16 = u_xlat16 * 0.5 + 0.5;
					    u_xlat41 = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat41 = u_xlat41 * _AnimIntensity + u_xlat4.x;
					    u_xlat41 = u_xlat39 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat6.x = u_xlat41 * 0.5 + u_xlat4.z;
					    u_xlat28 = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat4.x = u_xlat28 * _AnimIntensity + u_xlat4.x;
					    u_xlat4.x = u_xlat39 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat6.y = u_xlat4.x * 0.5 + u_xlat4.w;
					    u_xlat4.xz = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb16 = u_xlat16<_Mask;
					    u_xlat4.xy = (bool(u_xlatb16)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xz;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat38;
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat26 + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat7.x = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat41 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat41;
					    u_xlat19 = u_xlat40 * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat8.x = u_xlat19 * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat41 = u_xlat6.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat38;
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat6.x = u_xlat6.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat6.x;
					    u_xlat6.x = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat18 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat18 = u_xlat6.x + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat18 = u_xlat18 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat6.x;
					    u_xlat43 = u_xlat41 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.x = u_xlat43 * 0.5 + u_xlat6.z;
					    u_xlat30 = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat6.x = u_xlat30 * _AnimIntensity + u_xlat6.x;
					    u_xlat6.x = u_xlat41 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat8.y = u_xlat6.x * 0.5 + u_xlat6.w;
					    u_xlat6.xz = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb18 = u_xlat18<_Mask;
					    u_xlat6.xy = (bool(u_xlatb18)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xz;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat38;
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat26 + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat9.x = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat43 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat43;
					    u_xlat21 = u_xlat42 * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat10.x = u_xlat21 * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat43 = u_xlat8.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat38;
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat8.x = u_xlat8.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat8.x;
					    u_xlat8.x = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat20 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat20 = u_xlat8.x + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat20 = u_xlat20 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat8.x;
					    u_xlat45 = u_xlat43 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.x = u_xlat45 * 0.5 + u_xlat8.z;
					    u_xlat32 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat8.x = u_xlat32 * _AnimIntensity + u_xlat8.x;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat10.y = u_xlat8.x * 0.5 + u_xlat8.w;
					    u_xlat8.xz = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb20 = u_xlat20<_Mask;
					    u_xlat8.xy = (bool(u_xlatb20)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xz;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat38;
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat26 + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat10.x = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat10.x = u_xlat45 + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat45;
					    u_xlat22 = u_xlat44 * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat11.x = u_xlat22 * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat45;
					    u_xlat1.x = u_xlat44 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat11.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat10.x<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat38;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat26 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat26 = u_xlat13.x + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat26 = u_xlat26 * 0.5 + 0.5;
					    u_xlat38 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat38 = u_xlat38 * _AnimIntensity + u_xlat13.x;
					    u_xlat38 = u_xlat1.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat11.x = u_xlat38 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat26<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat2.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat3.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat14.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat5.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlatb13 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb13)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat39);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat4.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat40);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat7.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat41);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat6.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat42);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat9.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat43);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat8.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat44);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat10.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb1 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb1)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat25 = u_xlat1.z * _BubbleParams.y;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat37 = (-u_xlat25) * u_xlat25 + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat2.x = (-u_xlat25) + 1.0;
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.z;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = min(u_xlat2.x, 1.0);
					    u_xlat2.x = u_xlat2.x * 3.1415;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat25 = u_xlat25 * 3.1415;
					    u_xlat25 = cos(u_xlat25);
					    u_xlat25 = u_xlat25 * 0.600000024 + 0.5;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat25 = float(1.0) / u_xlat25;
					    u_xlat37 = u_xlat37 + (-u_xlat2.x);
					    u_xlat3.z = u_xlat25 * u_xlat37 + u_xlat2.x;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat25 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat1.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlat25 = u_xlat3.z * u_xlat3.z;
					    u_xlat37 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat3.xy = vec2(u_xlat37) * u_xlat1.xy;
					    u_xlatb1 = u_xlat25!=0.0;
					    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);
					    u_xlat13.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat13.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat14.x = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat14.x = min(abs(u_xlat14.x), 1.0);
					    u_xlat14.x = _BuildUp * 2.0 + (-u_xlat14.x);
					    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat14.x * 3.1415;
					    u_xlat14.x = cos(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) * 0.5 + 0.5;
					    u_xlat14.xy = u_xlat3.xy * u_xlat14.xx + (-vec2(_AlphaThreshold));
					    u_xlat38 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat14.xy / vec2(u_xlat38);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat14.x = log2(u_xlat3.x);
					    u_xlat14.x = u_xlat14.x * 1.5;
					    u_xlat2.y = exp2(u_xlat14.x);
					    u_xlat2.xz = (-u_xlat2.xy) + vec2(1.0, 1.0);
					    u_xlat5.x = (-u_xlat2.z) + u_xlat2.x;
					    u_xlat5.y = float(0.0);
					    u_xlat29.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat29.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat29.xy);
					    u_xlat2.xzw = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat3.x = u_xlat4.w * u_xlat6.w;
					    u_xlat15.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb15.xy = lessThan(u_xlat15.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat4.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(vs_TEXCOORD4.xzxx, u_xlat4.xyxx).xy;
					    u_xlatb15.x = u_xlatb15.x || u_xlatb4.x;
					    u_xlatb15.x = u_xlatb15.y || u_xlatb15.x;
					    u_xlatb15.x = u_xlatb4.y || u_xlatb15.x;
					    u_xlat3.x = (u_xlatb15.x) ? 0.0 : u_xlat3.x;
					    u_xlat15.x = log2(_AlphaThreshold);
					    u_xlat15.x = u_xlat15.x * 0.300000012;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat2.xzw = u_xlat2.xzw * u_xlat15.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat15.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat3.x;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat4.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat3.x = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat3.x = min(u_xlat3.x, 1.0);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat4.z = sqrt(u_xlat3.x);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat37) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.yyy * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat1.xyz = vec3(u_xlat37) * u_xlat1.xyz;
					    u_xlatb37 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb37){
					        u_xlatb37 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat4.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat4.xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat4.xyz = (bool(u_xlatb37)) ? u_xlat4.xyz : vs_TEXCOORD4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat4.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat37 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat14.x = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat37, u_xlat14.x);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat37 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat37) * _LightColor0.xyz;
					    u_xlat37 = max(u_xlat15.y, u_xlat15.x);
					    u_xlat37 = max(u_xlat15.z, u_xlat37);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = max(u_xlat36, 0.00100000005);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat12 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat24 = u_xlat12 * u_xlat12;
					    u_xlat13.x = u_xlat24 * u_xlat24;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat24 = u_xlat24 * u_xlat24 + -1.0;
					    u_xlat24 = u_xlat1.x * u_xlat24 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat12 = u_xlat12 * u_xlat12 + 0.5;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat12 = u_xlat24 * u_xlat24;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat13.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat15.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat2.xzw * vec3(u_xlat37) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xyz;
					    SV_Target0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat27;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat44 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat44 + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat6.x = u_xlat6.w * u_xlat6.x;
					    u_xlat6.xy = u_xlat6.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat6.xy, u_xlat6.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat6.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat6.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat6.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat6.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat6.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat6.xyz;
					    u_xlat6.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat5.y, u_xlat5.x);
					    u_xlat40 = max(u_xlat5.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat40) * u_xlat16.xyz;
					    u_xlat4 = (-u_xlat4.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat0.x * u_xlat0.x;
					    u_xlat13.x = dot(u_xlat13.xx, u_xlat4.xx);
					    u_xlat13.x = u_xlat13.x + -0.5;
					    u_xlat26 = (-u_xlat1.x) + 1.0;
					    u_xlat27 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat27 * u_xlat27;
					    u_xlat26 = u_xlat26 * u_xlat27;
					    u_xlat26 = u_xlat13.x * u_xlat26 + 1.0;
					    u_xlat27 = -abs(u_xlat39) + 1.0;
					    u_xlat40 = u_xlat27 * u_xlat27;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat27 = u_xlat27 * u_xlat40;
					    u_xlat13.x = u_xlat13.x * u_xlat27 + 1.0;
					    u_xlat13.x = u_xlat13.x * u_xlat26;
					    u_xlat26 = u_xlat4.x * u_xlat4.x;
					    u_xlat26 = max(u_xlat26, 0.00200000009);
					    u_xlat27 = (-u_xlat26) + 1.0;
					    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat26;
					    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;
					    u_xlat39 = abs(u_xlat39) * u_xlat27;
					    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;
					    u_xlat39 = u_xlat39 + 9.99999975e-06;
					    u_xlat39 = 0.5 / u_xlat39;
					    u_xlat26 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat14 * u_xlat26 + (-u_xlat14);
					    u_xlat14 = u_xlat27 * u_xlat14 + 1.0;
					    u_xlat26 = u_xlat26 * 0.318309873;
					    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;
					    u_xlat26 = u_xlat26 / u_xlat14;
					    u_xlat26 = u_xlat26 * u_xlat39;
					    u_xlat13.y = u_xlat26 * 3.14159274;
					    u_xlat13.xy = u_xlat1.xx * u_xlat13.xy;
					    u_xlat26 = max(u_xlat13.y, 0.0);
					    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat26 = u_xlat39 * u_xlat26;
					    u_xlat1.xyz = u_xlat13.xxx * u_xlat6.xyz;
					    u_xlat13.xyz = u_xlat6.xyz * vec3(u_xlat26);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat40 = u_xlat0.x * u_xlat0.x;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat0.x = u_xlat0.x * u_xlat40;
					    u_xlat2.xyz = u_xlat4.yzw * u_xlat0.xxx + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat13.xyz * u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat3.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "SPOT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat5 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat5;
					    u_xlat5 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat5;
					    u_xlat5 = u_xlat5 + unity_WorldToLight[3];
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlatb40 = 0.0<u_xlat5.z;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat6.xy = u_xlat5.xy / u_xlat5.ww;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat40 = u_xlat40 * u_xlat6.w;
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTextureB0, vec2(u_xlat41));
					    u_xlat40 = u_xlat40 * u_xlat5.x;
					    u_xlat39 = u_xlat39 * u_xlat40;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "SPOT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat5 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat5;
					    u_xlat5 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat5;
					    u_xlat5 = u_xlat5 + unity_WorldToLight[3];
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlatb41 = 0.0<u_xlat5.z;
					    u_xlat41 = u_xlatb41 ? 1.0 : float(0.0);
					    u_xlat6.xy = u_xlat5.xy / u_xlat5.ww;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat41 = u_xlat41 * u_xlat6.w;
					    u_xlat3.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTextureB0, u_xlat3.xx);
					    u_xlat41 = u_xlat41 * u_xlat5.x;
					    u_xlat40 = u_xlat40 * u_xlat41;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    SV_Target0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "SPOT" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat7 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat7;
					    u_xlat7 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat7;
					    u_xlat7 = u_xlat7 + unity_WorldToLight[3];
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlatb44 = 0.0<u_xlat7.z;
					    u_xlat44 = u_xlatb44 ? 1.0 : float(0.0);
					    u_xlat8.xy = u_xlat7.xy / u_xlat7.ww;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlat8 = texture(_LightTexture0, u_xlat8.xy);
					    u_xlat44 = u_xlat44 * u_xlat8.w;
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat7 = texture(_LightTextureB0, vec2(u_xlat45));
					    u_xlat44 = u_xlat44 * u_xlat7.x;
					    u_xlat43 = u_xlat43 * u_xlat44;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat6 = texture(_LightTextureB0, vec2(u_xlat40));
					    u_xlat5 = texture(_LightTexture0, u_xlat5.xyz);
					    u_xlat40 = u_xlat5.w * u_xlat6.x;
					    u_xlat39 = u_xlat39 * u_xlat40;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat6 = texture(_LightTextureB0, vec2(u_xlat41));
					    u_xlat5 = texture(_LightTexture0, u_xlat5.xyz);
					    u_xlat41 = u_xlat5.w * u_xlat6.x;
					    u_xlat40 = u_xlat40 * u_xlat41;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    SV_Target0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat7.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					    u_xlat7.xyz = u_xlat7.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat8 = texture(_LightTextureB0, vec2(u_xlat44));
					    u_xlat7 = texture(_LightTexture0, u_xlat7.xyz);
					    u_xlat44 = u_xlat7.w * u_xlat8.x;
					    u_xlat43 = u_xlat43 * u_xlat44;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					bvec2 u_xlatb3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat13;
					vec3 u_xlat14;
					vec2 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					float u_xlat25;
					float u_xlat26;
					vec2 u_xlat27;
					bvec2 u_xlatb27;
					vec2 u_xlat28;
					float u_xlat36;
					bool u_xlatb36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					bool u_xlatb38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat36 = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat2.x = u_xlat2.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat26 = _AnimScale * _Time.y;
					    u_xlat36 = _Time.y * _AnimScale + u_xlat36;
					    u_xlat36 = u_xlat36 / u_xlat2.x;
					    u_xlat2.x = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat38 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat2.x + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat2.x;
					    u_xlat3.x = u_xlat36 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat1.z;
					    u_xlat27.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat2.x = u_xlat27.x * _AnimIntensity + u_xlat2.x;
					    u_xlat2.x = u_xlat36 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat3.y = u_xlat2.x * 0.5 + u_xlat1.w;
					    u_xlat3.xy = u_xlat3.xy + vec2(0.5, 0.5);
					    u_xlatb2 = u_xlat38<_Mask;
					    u_xlat3.xy = (bool(u_xlatb2)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat2.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat26;
					    u_xlat38 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat38;
					    u_xlat38 = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat39 = u_xlat38 + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat38;
					    u_xlat5.x = u_xlat2.x * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat38 = u_xlat4.x * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat2.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat5.y = u_xlat38 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat39<_Mask;
					    u_xlat5.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat38 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat26;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat39;
					    u_xlat39 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat39 + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat16.x = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat16.x = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat16.x = u_xlat38 * _BubbleDrift + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat6.x = u_xlat16.x * 0.5 + u_xlat4.z;
					    u_xlat16.x = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat39 = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat38 * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.w;
					    u_xlat16.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat4.x<_Mask;
					    u_xlat4.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat16.xy;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat26;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat41 = u_xlat40 + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat40;
					    u_xlat7.x = u_xlat39 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat6.x * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat41<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat26;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat6.x = u_xlat41 + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat18.x = u_xlat40 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat8.x = u_xlat18.x * 0.5 + u_xlat6.z;
					    u_xlat18.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat41 = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.w;
					    u_xlat18.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat6.x<_Mask;
					    u_xlat6.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat41 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat26;
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat42;
					    u_xlat42 = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat42;
					    u_xlat9.x = u_xlat41 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat42 = u_xlat8.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat41 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat9.y = u_xlat42 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat9.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat42 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat26;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat8.x = u_xlat43 + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat20.x = u_xlat42 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat10.x = u_xlat20.x * 0.5 + u_xlat8.z;
					    u_xlat20.x = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat43 = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.w;
					    u_xlat20.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat8.x<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat43 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat26;
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat44;
					    u_xlat10.x = u_xlat43 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat44;
					    u_xlat1.x = u_xlat43 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat10.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat10.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat26;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat14.x = u_xlat13.x + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat26 = u_xlat26 * _AnimIntensity + u_xlat13.x;
					    u_xlat26 = u_xlat1.x * _BubbleDrift + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat11.x = u_xlat26 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat14.x<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.w;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat3.z = u_xlat36 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat36 = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat13.x = log2(u_xlat2.x);
					    u_xlat13.x = u_xlat13.x * _BubbleParams.w;
					    u_xlat13.x = exp2(u_xlat13.x);
					    u_xlat13.x = (-u_xlat13.x) + 1.0;
					    u_xlat5.z = u_xlat13.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat38);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat4.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat39);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat7.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat40);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat6.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat41);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat9.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat42);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat8.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat43);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat10.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb36)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat36 = u_xlat1.z * _BubbleParams.y;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = (-u_xlat36) * u_xlat36 + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat37 = (-u_xlat36) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.600000024 + 0.5;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat36 = float(1.0) / u_xlat36;
					    u_xlat25 = (-u_xlat37) + u_xlat25;
					    u_xlat2.z = u_xlat36 * u_xlat25 + u_xlat37;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vec2(u_xlat36) * u_xlat1.xy;
					    u_xlat36 = u_xlat2.z * u_xlat2.z;
					    u_xlat25 = (-u_xlat2.z) * u_xlat2.z + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat2.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlatb36 = u_xlat36!=0.0;
					    u_xlat36 = u_xlatb36 ? 1.0 : float(0.0);
					    u_xlat1.xyz = u_xlat2.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat2 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat26 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat26 = min(abs(u_xlat26), 1.0);
					    u_xlat26 = _BuildUp * 2.0 + (-u_xlat26);
					    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
					    u_xlat26 = u_xlat26 * 3.1415;
					    u_xlat26 = cos(u_xlat26);
					    u_xlat26 = (-u_xlat26) * 0.5 + 0.5;
					    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat26) + (-vec2(_AlphaThreshold));
					    u_xlat26 = (-_AlphaThreshold) + 1.0;
					    u_xlat2.xy = u_xlat2.xy / vec2(u_xlat26);
					    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
					    u_xlat2.z = 0.0;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat2.xz);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 1.5;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat26 = (-u_xlat2.x) + 1.0;
					    u_xlat4.x = u_xlat37 + (-u_xlat26);
					    u_xlat4.y = float(0.0);
					    u_xlat28.y = float(0.0);
					    u_xlat5 = texture(_ColorRampTex, u_xlat4.xy);
					    u_xlat5 = u_xlat5 * _Color;
					    u_xlat28.x = _AlphaThreshold * 0.200000003 + u_xlat2.y;
					    u_xlat6 = texture(_AlbedoRampTex, u_xlat28.xy);
					    u_xlat14.xyz = u_xlat5.xyz * u_xlat6.xyz;
					    u_xlat37 = u_xlat3.w * u_xlat5.w;
					    u_xlat3.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb3.xy = lessThan(u_xlat3.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat27.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb27.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat27.xyxy).xy;
					    u_xlatb3.x = u_xlatb27.x || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb3.y || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb27.y || u_xlatb3.x;
					    u_xlat37 = (u_xlatb3.x) ? 0.0 : u_xlat37;
					    u_xlat3.x = log2(_AlphaThreshold);
					    u_xlat3.x = u_xlat3.x * 0.300000012;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat14.xyz = u_xlat14.xyz * u_xlat3.xxx;
					    u_xlat3 = texture(_Specular, u_xlat4.xy);
					    u_xlat3.xyz = u_xlat3.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat37;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat4 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat4.x = u_xlat4.w * u_xlat4.x;
					    u_xlat4.xy = u_xlat4.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat37 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat4.z = sqrt(u_xlat37);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat36) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.xxx * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat4.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat4.xy;
					    u_xlat4.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat4.xy;
					    u_xlat4.xy = u_xlat4.xy + unity_WorldToLight[3].xy;
					    u_xlatb36 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb36){
					        u_xlatb36 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat5.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : vs_TEXCOORD4.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat5.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat36 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat37 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat36, u_xlat37);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat36 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat4 = texture(_LightTexture0, u_xlat4.xy);
					    u_xlat36 = u_xlat36 * u_xlat4.w;
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat36) * _LightColor0.xyz;
					    u_xlat36 = max(u_xlat3.y, u_xlat3.x);
					    u_xlat36 = max(u_xlat3.z, u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat37 = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat37 = u_xlat37 + u_xlat37;
					    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat37)) + u_xlat0.xyz;
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat3.w) * _Glossiness + 1.0;
					    u_xlat5 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat5.x * 16.0;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat14.xyz * vec3(u_xlat36) + u_xlat0.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					float u_xlat12;
					vec3 u_xlat13;
					bool u_xlatb13;
					vec2 u_xlat14;
					bool u_xlatb14;
					vec3 u_xlat15;
					bvec2 u_xlatb15;
					float u_xlat16;
					bool u_xlatb16;
					float u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					float u_xlat20;
					bool u_xlatb20;
					float u_xlat21;
					float u_xlat22;
					float u_xlat24;
					float u_xlat25;
					float u_xlat26;
					float u_xlat28;
					vec2 u_xlat29;
					float u_xlat30;
					float u_xlat32;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					float u_xlat45;
					bool u_xlatb45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat14.x = u_xlat14.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat38 = _AnimScale * _Time.y;
					    u_xlat2.x = _Time.y * _AnimScale + u_xlat2.x;
					    u_xlat2.x = u_xlat2.x / u_xlat14.x;
					    u_xlat14.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat14.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat15.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat15.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat4.x = u_xlat15.x * 0.5 + u_xlat1.z;
					    u_xlat15.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat14.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat14.x = u_xlat2.x * _BubbleDrift + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat4.y = u_xlat14.x * 0.5 + u_xlat1.w;
					    u_xlat15.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb14 = u_xlat3.x<_Mask;
					    u_xlat3.xy = (bool(u_xlatb14)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat14.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + u_xlat38;
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat26 + _BubbleDurationMin;
					    u_xlat14.x = u_xlat14.x + 0.5;
					    u_xlat14.x = u_xlat14.x / u_xlat39;
					    u_xlat39 = floor(u_xlat14.x);
					    u_xlat14.x = fract(u_xlat14.x);
					    u_xlat5.x = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat39 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat17 = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat17 = u_xlat17 * _AnimIntensity + u_xlat39;
					    u_xlat17 = u_xlat14.x * _BubbleDrift + u_xlat17;
					    u_xlat17 = sin(u_xlat17);
					    u_xlat6.x = u_xlat17 * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat39 = u_xlat4.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat14.x * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat38;
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat4.x = u_xlat4.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat4.x;
					    u_xlat4.x = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat16 = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat16 = u_xlat4.x + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat16 = u_xlat16 * 0.5 + 0.5;
					    u_xlat41 = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat41 = u_xlat41 * _AnimIntensity + u_xlat4.x;
					    u_xlat41 = u_xlat39 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat6.x = u_xlat41 * 0.5 + u_xlat4.z;
					    u_xlat28 = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat4.x = u_xlat28 * _AnimIntensity + u_xlat4.x;
					    u_xlat4.x = u_xlat39 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat6.y = u_xlat4.x * 0.5 + u_xlat4.w;
					    u_xlat4.xz = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb16 = u_xlat16<_Mask;
					    u_xlat4.xy = (bool(u_xlatb16)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xz;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat38;
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat26 + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat7.x = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat41 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat41;
					    u_xlat19 = u_xlat40 * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat8.x = u_xlat19 * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat41 = u_xlat6.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat38;
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat6.x = u_xlat6.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat6.x;
					    u_xlat6.x = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat18 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat18 = u_xlat6.x + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat18 = u_xlat18 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat6.x;
					    u_xlat43 = u_xlat41 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.x = u_xlat43 * 0.5 + u_xlat6.z;
					    u_xlat30 = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat6.x = u_xlat30 * _AnimIntensity + u_xlat6.x;
					    u_xlat6.x = u_xlat41 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat8.y = u_xlat6.x * 0.5 + u_xlat6.w;
					    u_xlat6.xz = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb18 = u_xlat18<_Mask;
					    u_xlat6.xy = (bool(u_xlatb18)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xz;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat38;
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat26 + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat9.x = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat43 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat43;
					    u_xlat21 = u_xlat42 * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat10.x = u_xlat21 * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat43 = u_xlat8.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat38;
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat8.x = u_xlat8.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat8.x;
					    u_xlat8.x = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat20 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat20 = u_xlat8.x + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat20 = u_xlat20 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat8.x;
					    u_xlat45 = u_xlat43 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.x = u_xlat45 * 0.5 + u_xlat8.z;
					    u_xlat32 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat8.x = u_xlat32 * _AnimIntensity + u_xlat8.x;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat10.y = u_xlat8.x * 0.5 + u_xlat8.w;
					    u_xlat8.xz = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb20 = u_xlat20<_Mask;
					    u_xlat8.xy = (bool(u_xlatb20)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xz;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat38;
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat26 + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat10.x = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat10.x = u_xlat45 + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat45;
					    u_xlat22 = u_xlat44 * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat11.x = u_xlat22 * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat45;
					    u_xlat1.x = u_xlat44 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat11.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat10.x<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat38;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat26 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat26 = u_xlat13.x + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat26 = u_xlat26 * 0.5 + 0.5;
					    u_xlat38 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat38 = u_xlat38 * _AnimIntensity + u_xlat13.x;
					    u_xlat38 = u_xlat1.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat11.x = u_xlat38 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat26<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat2.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat3.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat14.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat5.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlatb13 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb13)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat39);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat4.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat40);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat7.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat41);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat6.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat42);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat9.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat43);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat8.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat44);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat10.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb1 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb1)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat25 = u_xlat1.z * _BubbleParams.y;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat37 = (-u_xlat25) * u_xlat25 + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat2.x = (-u_xlat25) + 1.0;
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.z;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = min(u_xlat2.x, 1.0);
					    u_xlat2.x = u_xlat2.x * 3.1415;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat25 = u_xlat25 * 3.1415;
					    u_xlat25 = cos(u_xlat25);
					    u_xlat25 = u_xlat25 * 0.600000024 + 0.5;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat25 = float(1.0) / u_xlat25;
					    u_xlat37 = u_xlat37 + (-u_xlat2.x);
					    u_xlat3.z = u_xlat25 * u_xlat37 + u_xlat2.x;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat25 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat1.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlat25 = u_xlat3.z * u_xlat3.z;
					    u_xlat37 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat3.xy = vec2(u_xlat37) * u_xlat1.xy;
					    u_xlatb1 = u_xlat25!=0.0;
					    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);
					    u_xlat13.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat13.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat14.x = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat14.x = min(abs(u_xlat14.x), 1.0);
					    u_xlat14.x = _BuildUp * 2.0 + (-u_xlat14.x);
					    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat14.x * 3.1415;
					    u_xlat14.x = cos(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) * 0.5 + 0.5;
					    u_xlat14.xy = u_xlat3.xy * u_xlat14.xx + (-vec2(_AlphaThreshold));
					    u_xlat38 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat14.xy / vec2(u_xlat38);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat14.x = log2(u_xlat3.x);
					    u_xlat14.x = u_xlat14.x * 1.5;
					    u_xlat2.y = exp2(u_xlat14.x);
					    u_xlat2.xz = (-u_xlat2.xy) + vec2(1.0, 1.0);
					    u_xlat5.x = (-u_xlat2.z) + u_xlat2.x;
					    u_xlat5.y = float(0.0);
					    u_xlat29.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat29.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat29.xy);
					    u_xlat2.xzw = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat3.x = u_xlat4.w * u_xlat6.w;
					    u_xlat15.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb15.xy = lessThan(u_xlat15.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat4.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(vs_TEXCOORD4.xzxx, u_xlat4.xyxx).xy;
					    u_xlatb15.x = u_xlatb15.x || u_xlatb4.x;
					    u_xlatb15.x = u_xlatb15.y || u_xlatb15.x;
					    u_xlatb15.x = u_xlatb4.y || u_xlatb15.x;
					    u_xlat3.x = (u_xlatb15.x) ? 0.0 : u_xlat3.x;
					    u_xlat15.x = log2(_AlphaThreshold);
					    u_xlat15.x = u_xlat15.x * 0.300000012;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat2.xzw = u_xlat2.xzw * u_xlat15.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat15.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat3.x;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat4.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat3.x = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat3.x = min(u_xlat3.x, 1.0);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat4.z = sqrt(u_xlat3.x);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat37) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.yyy * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat1.xyz = vec3(u_xlat37) * u_xlat1.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat4.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat4.xy;
					    u_xlat4.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat4.xy;
					    u_xlat4.xy = u_xlat4.xy + unity_WorldToLight[3].xy;
					    u_xlatb37 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb37){
					        u_xlatb37 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat5.xyz = (bool(u_xlatb37)) ? u_xlat5.xyz : vs_TEXCOORD4.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat5.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat37 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat14.x = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat37, u_xlat14.x);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat37 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat5 = texture(_LightTexture0, u_xlat4.xy);
					    u_xlat37 = u_xlat37 * u_xlat5.w;
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat37) * _LightColor0.xyz;
					    u_xlat37 = max(u_xlat15.y, u_xlat15.x);
					    u_xlat37 = max(u_xlat15.z, u_xlat37);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = max(u_xlat36, 0.00100000005);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat12 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat24 = u_xlat12 * u_xlat12;
					    u_xlat13.x = u_xlat24 * u_xlat24;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat24 = u_xlat24 * u_xlat24 + -1.0;
					    u_xlat24 = u_xlat1.x * u_xlat24 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat12 = u_xlat12 * u_xlat12 + 0.5;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat12 = u_xlat24 * u_xlat24;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat13.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat15.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat2.xzw * vec3(u_xlat37) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xyz;
					    SV_Target0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_3[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat27;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat44 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat44 + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat6.x = u_xlat6.w * u_xlat6.x;
					    u_xlat6.xy = u_xlat6.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat6.xy, u_xlat6.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat6.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat6.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat6.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat6.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat6.xy;
					    u_xlat6.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat6.xy;
					    u_xlat6.xy = u_xlat6.xy + unity_WorldToLight[3].xy;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : vs_TEXCOORD4.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat40, u_xlat41);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat40 = u_xlat40 * u_xlat6.w;
					    u_xlat6.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat6.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat6.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat6.xyz;
					    u_xlat6.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat5.y, u_xlat5.x);
					    u_xlat40 = max(u_xlat5.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat40) * u_xlat16.xyz;
					    u_xlat4 = (-u_xlat4.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat0.x * u_xlat0.x;
					    u_xlat13.x = dot(u_xlat13.xx, u_xlat4.xx);
					    u_xlat13.x = u_xlat13.x + -0.5;
					    u_xlat26 = (-u_xlat1.x) + 1.0;
					    u_xlat27 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat27 * u_xlat27;
					    u_xlat26 = u_xlat26 * u_xlat27;
					    u_xlat26 = u_xlat13.x * u_xlat26 + 1.0;
					    u_xlat27 = -abs(u_xlat39) + 1.0;
					    u_xlat40 = u_xlat27 * u_xlat27;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat27 = u_xlat27 * u_xlat40;
					    u_xlat13.x = u_xlat13.x * u_xlat27 + 1.0;
					    u_xlat13.x = u_xlat13.x * u_xlat26;
					    u_xlat26 = u_xlat4.x * u_xlat4.x;
					    u_xlat26 = max(u_xlat26, 0.00200000009);
					    u_xlat27 = (-u_xlat26) + 1.0;
					    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat26;
					    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;
					    u_xlat39 = abs(u_xlat39) * u_xlat27;
					    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;
					    u_xlat39 = u_xlat39 + 9.99999975e-06;
					    u_xlat39 = 0.5 / u_xlat39;
					    u_xlat26 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat14 * u_xlat26 + (-u_xlat14);
					    u_xlat14 = u_xlat27 * u_xlat14 + 1.0;
					    u_xlat26 = u_xlat26 * 0.318309873;
					    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;
					    u_xlat26 = u_xlat26 / u_xlat14;
					    u_xlat26 = u_xlat26 * u_xlat39;
					    u_xlat13.y = u_xlat26 * 3.14159274;
					    u_xlat13.xy = u_xlat1.xx * u_xlat13.xy;
					    u_xlat26 = max(u_xlat13.y, 0.0);
					    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat26 = u_xlat39 * u_xlat26;
					    u_xlat1.xyz = u_xlat13.xxx * u_xlat6.xyz;
					    u_xlat13.xyz = u_xlat6.xyz * vec3(u_xlat26);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat40 = u_xlat0.x * u_xlat0.x;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat0.x = u_xlat0.x * u_xlat40;
					    u_xlat2.xyz = u_xlat4.yzw * u_xlat0.xxx + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat13.xyz * u_xlat2.xyz;
					    SV_Target0.xyz = u_xlat3.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTexture0, vec2(u_xlat40));
					    u_xlat39 = u_xlat39 * u_xlat5.x;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTexture0, vec2(u_xlat41));
					    u_xlat40 = u_xlat40 * u_xlat5.x;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat7.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					    u_xlat7.xyz = u_xlat7.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat7 = texture(_LightTexture0, vec2(u_xlat44));
					    u_xlat43 = u_xlat43 * u_xlat7.x;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    u_xlat42 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat42 = u_xlat42 * _ProjectionParams.z;
					    u_xlat42 = max(u_xlat42, 0.0);
					    u_xlat42 = u_xlat42 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat42);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					bvec2 u_xlatb3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat13;
					vec3 u_xlat14;
					vec2 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					float u_xlat25;
					float u_xlat26;
					vec2 u_xlat27;
					bvec2 u_xlatb27;
					vec2 u_xlat28;
					float u_xlat36;
					bool u_xlatb36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					bool u_xlatb38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat36 = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat2.x = u_xlat2.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat26 = _AnimScale * _Time.y;
					    u_xlat36 = _Time.y * _AnimScale + u_xlat36;
					    u_xlat36 = u_xlat36 / u_xlat2.x;
					    u_xlat2.x = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat38 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat2.x + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat2.x;
					    u_xlat3.x = u_xlat36 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat1.z;
					    u_xlat27.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat2.x = u_xlat27.x * _AnimIntensity + u_xlat2.x;
					    u_xlat2.x = u_xlat36 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat3.y = u_xlat2.x * 0.5 + u_xlat1.w;
					    u_xlat3.xy = u_xlat3.xy + vec2(0.5, 0.5);
					    u_xlatb2 = u_xlat38<_Mask;
					    u_xlat3.xy = (bool(u_xlatb2)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat2.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat26;
					    u_xlat38 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat38;
					    u_xlat38 = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat39 = u_xlat38 + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat38;
					    u_xlat5.x = u_xlat2.x * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat38 = u_xlat4.x * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat2.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat5.y = u_xlat38 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat39<_Mask;
					    u_xlat5.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat38 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat26;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat39;
					    u_xlat39 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat39 + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat16.x = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat16.x = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat16.x = u_xlat38 * _BubbleDrift + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat6.x = u_xlat16.x * 0.5 + u_xlat4.z;
					    u_xlat16.x = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat39 = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat38 * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.w;
					    u_xlat16.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat4.x<_Mask;
					    u_xlat4.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat16.xy;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat26;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat41 = u_xlat40 + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat40;
					    u_xlat7.x = u_xlat39 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat6.x * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat41<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat26;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat6.x = u_xlat41 + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat18.x = u_xlat40 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat8.x = u_xlat18.x * 0.5 + u_xlat6.z;
					    u_xlat18.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat41 = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.w;
					    u_xlat18.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat6.x<_Mask;
					    u_xlat6.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat41 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat26;
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat42;
					    u_xlat42 = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat42;
					    u_xlat9.x = u_xlat41 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat42 = u_xlat8.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat41 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat9.y = u_xlat42 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat9.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat42 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat26;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat8.x = u_xlat43 + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat20.x = u_xlat42 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat10.x = u_xlat20.x * 0.5 + u_xlat8.z;
					    u_xlat20.x = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat43 = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.w;
					    u_xlat20.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat8.x<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat43 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat26;
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat44;
					    u_xlat10.x = u_xlat43 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat44;
					    u_xlat1.x = u_xlat43 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat10.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat10.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat26;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat14.x = u_xlat13.x + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat26 = u_xlat26 * _AnimIntensity + u_xlat13.x;
					    u_xlat26 = u_xlat1.x * _BubbleDrift + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat11.x = u_xlat26 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat14.x<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.w;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat3.z = u_xlat36 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat36 = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat13.x = log2(u_xlat2.x);
					    u_xlat13.x = u_xlat13.x * _BubbleParams.w;
					    u_xlat13.x = exp2(u_xlat13.x);
					    u_xlat13.x = (-u_xlat13.x) + 1.0;
					    u_xlat5.z = u_xlat13.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat38);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat4.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat39);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat7.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat40);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat6.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat41);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat9.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat42);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat8.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat43);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat10.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb36)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat36 = u_xlat1.z * _BubbleParams.y;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = (-u_xlat36) * u_xlat36 + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat37 = (-u_xlat36) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.600000024 + 0.5;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat36 = float(1.0) / u_xlat36;
					    u_xlat25 = (-u_xlat37) + u_xlat25;
					    u_xlat2.z = u_xlat36 * u_xlat25 + u_xlat37;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vec2(u_xlat36) * u_xlat1.xy;
					    u_xlat36 = u_xlat2.z * u_xlat2.z;
					    u_xlat25 = (-u_xlat2.z) * u_xlat2.z + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat2.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlatb36 = u_xlat36!=0.0;
					    u_xlat36 = u_xlatb36 ? 1.0 : float(0.0);
					    u_xlat1.xyz = u_xlat2.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat2 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat26 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat26 = min(abs(u_xlat26), 1.0);
					    u_xlat26 = _BuildUp * 2.0 + (-u_xlat26);
					    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
					    u_xlat26 = u_xlat26 * 3.1415;
					    u_xlat26 = cos(u_xlat26);
					    u_xlat26 = (-u_xlat26) * 0.5 + 0.5;
					    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat26) + (-vec2(_AlphaThreshold));
					    u_xlat26 = (-_AlphaThreshold) + 1.0;
					    u_xlat2.xy = u_xlat2.xy / vec2(u_xlat26);
					    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
					    u_xlat2.z = 0.0;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat2.xz);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 1.5;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat26 = (-u_xlat2.x) + 1.0;
					    u_xlat4.x = u_xlat37 + (-u_xlat26);
					    u_xlat4.y = float(0.0);
					    u_xlat28.y = float(0.0);
					    u_xlat5 = texture(_ColorRampTex, u_xlat4.xy);
					    u_xlat5 = u_xlat5 * _Color;
					    u_xlat28.x = _AlphaThreshold * 0.200000003 + u_xlat2.y;
					    u_xlat6 = texture(_AlbedoRampTex, u_xlat28.xy);
					    u_xlat14.xyz = u_xlat5.xyz * u_xlat6.xyz;
					    u_xlat37 = u_xlat3.w * u_xlat5.w;
					    u_xlat3.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb3.xy = lessThan(u_xlat3.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat27.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb27.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat27.xyxy).xy;
					    u_xlatb3.x = u_xlatb27.x || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb3.y || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb27.y || u_xlatb3.x;
					    u_xlat37 = (u_xlatb3.x) ? 0.0 : u_xlat37;
					    u_xlat3.x = log2(_AlphaThreshold);
					    u_xlat3.x = u_xlat3.x * 0.300000012;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat14.xyz = u_xlat14.xyz * u_xlat3.xxx;
					    u_xlat3 = texture(_Specular, u_xlat4.xy);
					    u_xlat3.xyz = u_xlat3.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat37;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat4 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat4.x = u_xlat4.w * u_xlat4.x;
					    u_xlat4.xy = u_xlat4.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat37 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat4.z = sqrt(u_xlat37);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat36) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.xxx * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz;
					    u_xlatb36 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb36){
					        u_xlatb36 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat4.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat4.xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat4.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : vs_TEXCOORD4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat4.yzw = u_xlat4.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat36 = u_xlat4.y * 0.25 + 0.75;
					        u_xlat37 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat4.x = max(u_xlat36, u_xlat37);
					        u_xlat4 = texture(unity_ProbeVolumeSH, u_xlat4.xzw);
					    } else {
					        u_xlat4.x = float(1.0);
					        u_xlat4.y = float(1.0);
					        u_xlat4.z = float(1.0);
					        u_xlat4.w = float(1.0);
					    }
					    u_xlat36 = dot(u_xlat4, unity_OcclusionMaskSelector);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat36) * _LightColor0.xyz;
					    u_xlat36 = max(u_xlat3.y, u_xlat3.x);
					    u_xlat36 = max(u_xlat3.z, u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat37 = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat37 = u_xlat37 + u_xlat37;
					    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat37)) + u_xlat0.xyz;
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat3.w) * _Glossiness + 1.0;
					    u_xlat5 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat5.x * 16.0;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat14.xyz * vec3(u_xlat36) + u_xlat0.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat36 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat36 = u_xlat36 * _ProjectionParams.z;
					    u_xlat36 = max(u_xlat36, 0.0);
					    u_xlat36 = u_xlat36 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat36);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					float u_xlat12;
					vec3 u_xlat13;
					bool u_xlatb13;
					vec2 u_xlat14;
					bool u_xlatb14;
					vec3 u_xlat15;
					bvec2 u_xlatb15;
					float u_xlat16;
					bool u_xlatb16;
					float u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					float u_xlat20;
					bool u_xlatb20;
					float u_xlat21;
					float u_xlat22;
					float u_xlat24;
					float u_xlat25;
					float u_xlat26;
					float u_xlat28;
					vec2 u_xlat29;
					float u_xlat30;
					float u_xlat32;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					float u_xlat45;
					bool u_xlatb45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat14.x = u_xlat14.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat38 = _AnimScale * _Time.y;
					    u_xlat2.x = _Time.y * _AnimScale + u_xlat2.x;
					    u_xlat2.x = u_xlat2.x / u_xlat14.x;
					    u_xlat14.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat14.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat15.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat15.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat4.x = u_xlat15.x * 0.5 + u_xlat1.z;
					    u_xlat15.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat14.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat14.x = u_xlat2.x * _BubbleDrift + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat4.y = u_xlat14.x * 0.5 + u_xlat1.w;
					    u_xlat15.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb14 = u_xlat3.x<_Mask;
					    u_xlat3.xy = (bool(u_xlatb14)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat14.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + u_xlat38;
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat26 + _BubbleDurationMin;
					    u_xlat14.x = u_xlat14.x + 0.5;
					    u_xlat14.x = u_xlat14.x / u_xlat39;
					    u_xlat39 = floor(u_xlat14.x);
					    u_xlat14.x = fract(u_xlat14.x);
					    u_xlat5.x = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat39 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat17 = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat17 = u_xlat17 * _AnimIntensity + u_xlat39;
					    u_xlat17 = u_xlat14.x * _BubbleDrift + u_xlat17;
					    u_xlat17 = sin(u_xlat17);
					    u_xlat6.x = u_xlat17 * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat39 = u_xlat4.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat14.x * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat38;
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat4.x = u_xlat4.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat4.x;
					    u_xlat4.x = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat16 = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat16 = u_xlat4.x + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat16 = u_xlat16 * 0.5 + 0.5;
					    u_xlat41 = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat41 = u_xlat41 * _AnimIntensity + u_xlat4.x;
					    u_xlat41 = u_xlat39 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat6.x = u_xlat41 * 0.5 + u_xlat4.z;
					    u_xlat28 = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat4.x = u_xlat28 * _AnimIntensity + u_xlat4.x;
					    u_xlat4.x = u_xlat39 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat6.y = u_xlat4.x * 0.5 + u_xlat4.w;
					    u_xlat4.xz = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb16 = u_xlat16<_Mask;
					    u_xlat4.xy = (bool(u_xlatb16)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xz;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat38;
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat26 + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat7.x = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat41 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat41;
					    u_xlat19 = u_xlat40 * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat8.x = u_xlat19 * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat41 = u_xlat6.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat38;
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat6.x = u_xlat6.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat6.x;
					    u_xlat6.x = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat18 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat18 = u_xlat6.x + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat18 = u_xlat18 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat6.x;
					    u_xlat43 = u_xlat41 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.x = u_xlat43 * 0.5 + u_xlat6.z;
					    u_xlat30 = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat6.x = u_xlat30 * _AnimIntensity + u_xlat6.x;
					    u_xlat6.x = u_xlat41 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat8.y = u_xlat6.x * 0.5 + u_xlat6.w;
					    u_xlat6.xz = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb18 = u_xlat18<_Mask;
					    u_xlat6.xy = (bool(u_xlatb18)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xz;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat38;
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat26 + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat9.x = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat43 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat43;
					    u_xlat21 = u_xlat42 * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat10.x = u_xlat21 * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat43 = u_xlat8.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat38;
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat8.x = u_xlat8.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat8.x;
					    u_xlat8.x = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat20 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat20 = u_xlat8.x + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat20 = u_xlat20 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat8.x;
					    u_xlat45 = u_xlat43 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.x = u_xlat45 * 0.5 + u_xlat8.z;
					    u_xlat32 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat8.x = u_xlat32 * _AnimIntensity + u_xlat8.x;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat10.y = u_xlat8.x * 0.5 + u_xlat8.w;
					    u_xlat8.xz = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb20 = u_xlat20<_Mask;
					    u_xlat8.xy = (bool(u_xlatb20)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xz;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat38;
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat26 + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat10.x = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat10.x = u_xlat45 + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat45;
					    u_xlat22 = u_xlat44 * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat11.x = u_xlat22 * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat45;
					    u_xlat1.x = u_xlat44 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat11.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat10.x<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat38;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat26 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat26 = u_xlat13.x + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat26 = u_xlat26 * 0.5 + 0.5;
					    u_xlat38 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat38 = u_xlat38 * _AnimIntensity + u_xlat13.x;
					    u_xlat38 = u_xlat1.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat11.x = u_xlat38 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat26<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat2.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat3.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat14.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat5.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlatb13 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb13)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat39);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat4.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat40);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat7.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat41);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat6.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat42);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat9.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat43);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat8.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat44);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat10.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb1 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb1)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat25 = u_xlat1.z * _BubbleParams.y;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat37 = (-u_xlat25) * u_xlat25 + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat2.x = (-u_xlat25) + 1.0;
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.z;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = min(u_xlat2.x, 1.0);
					    u_xlat2.x = u_xlat2.x * 3.1415;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat25 = u_xlat25 * 3.1415;
					    u_xlat25 = cos(u_xlat25);
					    u_xlat25 = u_xlat25 * 0.600000024 + 0.5;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat25 = float(1.0) / u_xlat25;
					    u_xlat37 = u_xlat37 + (-u_xlat2.x);
					    u_xlat3.z = u_xlat25 * u_xlat37 + u_xlat2.x;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat25 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat1.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlat25 = u_xlat3.z * u_xlat3.z;
					    u_xlat37 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat3.xy = vec2(u_xlat37) * u_xlat1.xy;
					    u_xlatb1 = u_xlat25!=0.0;
					    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);
					    u_xlat13.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat13.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat14.x = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat14.x = min(abs(u_xlat14.x), 1.0);
					    u_xlat14.x = _BuildUp * 2.0 + (-u_xlat14.x);
					    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat14.x * 3.1415;
					    u_xlat14.x = cos(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) * 0.5 + 0.5;
					    u_xlat14.xy = u_xlat3.xy * u_xlat14.xx + (-vec2(_AlphaThreshold));
					    u_xlat38 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat14.xy / vec2(u_xlat38);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat14.x = log2(u_xlat3.x);
					    u_xlat14.x = u_xlat14.x * 1.5;
					    u_xlat2.y = exp2(u_xlat14.x);
					    u_xlat2.xz = (-u_xlat2.xy) + vec2(1.0, 1.0);
					    u_xlat5.x = (-u_xlat2.z) + u_xlat2.x;
					    u_xlat5.y = float(0.0);
					    u_xlat29.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat29.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat29.xy);
					    u_xlat2.xzw = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat3.x = u_xlat4.w * u_xlat6.w;
					    u_xlat15.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb15.xy = lessThan(u_xlat15.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat4.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(vs_TEXCOORD4.xzxx, u_xlat4.xyxx).xy;
					    u_xlatb15.x = u_xlatb15.x || u_xlatb4.x;
					    u_xlatb15.x = u_xlatb15.y || u_xlatb15.x;
					    u_xlatb15.x = u_xlatb4.y || u_xlatb15.x;
					    u_xlat3.x = (u_xlatb15.x) ? 0.0 : u_xlat3.x;
					    u_xlat15.x = log2(_AlphaThreshold);
					    u_xlat15.x = u_xlat15.x * 0.300000012;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat2.xzw = u_xlat2.xzw * u_xlat15.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat15.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat3.x;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat4.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat3.x = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat3.x = min(u_xlat3.x, 1.0);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat4.z = sqrt(u_xlat3.x);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat37) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.yyy * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat1.xyz = vec3(u_xlat37) * u_xlat1.xyz;
					    u_xlatb37 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb37){
					        u_xlatb37 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat4.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat4.xyz;
					        u_xlat4.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat4.xyz = (bool(u_xlatb37)) ? u_xlat4.xyz : vs_TEXCOORD4.xyz;
					        u_xlat4.xyz = u_xlat4.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat4.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat37 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat14.x = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat37, u_xlat14.x);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat37 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat37) * _LightColor0.xyz;
					    u_xlat37 = max(u_xlat15.y, u_xlat15.x);
					    u_xlat37 = max(u_xlat15.z, u_xlat37);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = max(u_xlat36, 0.00100000005);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat12 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat24 = u_xlat12 * u_xlat12;
					    u_xlat13.x = u_xlat24 * u_xlat24;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat24 = u_xlat24 * u_xlat24 + -1.0;
					    u_xlat24 = u_xlat1.x * u_xlat24 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat12 = u_xlat12 * u_xlat12 + 0.5;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat12 = u_xlat24 * u_xlat24;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat13.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat15.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat2.xzw * vec3(u_xlat37) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xyz;
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat36 = u_xlat36 * _ProjectionParams.z;
					    u_xlat36 = max(u_xlat36, 0.0);
					    u_xlat36 = u_xlat36 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat36);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_21[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat27;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat44 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat44 + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat6.x = u_xlat6.w * u_xlat6.x;
					    u_xlat6.xy = u_xlat6.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat6.xy, u_xlat6.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat6.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat6.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat6.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat6.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat6.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat6.xyz;
					    u_xlat6.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat5.y, u_xlat5.x);
					    u_xlat40 = max(u_xlat5.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat40) * u_xlat16.xyz;
					    u_xlat4 = (-u_xlat4.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat0.x * u_xlat0.x;
					    u_xlat13.x = dot(u_xlat13.xx, u_xlat4.xx);
					    u_xlat13.x = u_xlat13.x + -0.5;
					    u_xlat26 = (-u_xlat1.x) + 1.0;
					    u_xlat27 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat27 * u_xlat27;
					    u_xlat26 = u_xlat26 * u_xlat27;
					    u_xlat26 = u_xlat13.x * u_xlat26 + 1.0;
					    u_xlat27 = -abs(u_xlat39) + 1.0;
					    u_xlat40 = u_xlat27 * u_xlat27;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat27 = u_xlat27 * u_xlat40;
					    u_xlat13.x = u_xlat13.x * u_xlat27 + 1.0;
					    u_xlat13.x = u_xlat13.x * u_xlat26;
					    u_xlat26 = u_xlat4.x * u_xlat4.x;
					    u_xlat26 = max(u_xlat26, 0.00200000009);
					    u_xlat27 = (-u_xlat26) + 1.0;
					    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat26;
					    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;
					    u_xlat39 = abs(u_xlat39) * u_xlat27;
					    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;
					    u_xlat39 = u_xlat39 + 9.99999975e-06;
					    u_xlat39 = 0.5 / u_xlat39;
					    u_xlat26 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat14 * u_xlat26 + (-u_xlat14);
					    u_xlat14 = u_xlat27 * u_xlat14 + 1.0;
					    u_xlat26 = u_xlat26 * 0.318309873;
					    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;
					    u_xlat26 = u_xlat26 / u_xlat14;
					    u_xlat26 = u_xlat26 * u_xlat39;
					    u_xlat13.y = u_xlat26 * 3.14159274;
					    u_xlat13.xy = u_xlat1.xx * u_xlat13.xy;
					    u_xlat26 = max(u_xlat13.y, 0.0);
					    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat26 = u_xlat39 * u_xlat26;
					    u_xlat1.xyz = u_xlat13.xxx * u_xlat6.xyz;
					    u_xlat13.xyz = u_xlat6.xyz * vec3(u_xlat26);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat40 = u_xlat0.x * u_xlat0.x;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat0.x = u_xlat0.x * u_xlat40;
					    u_xlat2.xyz = u_xlat4.yzw * u_xlat0.xxx + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat13.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat5 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat5;
					    u_xlat5 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat5;
					    u_xlat5 = u_xlat5 + unity_WorldToLight[3];
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlatb40 = 0.0<u_xlat5.z;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat6.xy = u_xlat5.xy / u_xlat5.ww;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat40 = u_xlat40 * u_xlat6.w;
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTextureB0, vec2(u_xlat41));
					    u_xlat40 = u_xlat40 * u_xlat5.x;
					    u_xlat39 = u_xlat39 * u_xlat40;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat5 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat5;
					    u_xlat5 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat5;
					    u_xlat5 = u_xlat5 + unity_WorldToLight[3];
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlatb41 = 0.0<u_xlat5.z;
					    u_xlat41 = u_xlatb41 ? 1.0 : float(0.0);
					    u_xlat6.xy = u_xlat5.xy / u_xlat5.ww;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat41 = u_xlat41 * u_xlat6.w;
					    u_xlat3.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat5 = texture(_LightTextureB0, u_xlat3.xx);
					    u_xlat41 = u_xlat41 * u_xlat5.x;
					    u_xlat40 = u_xlat40 * u_xlat41;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D _LightTextureB0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7 = vs_TEXCOORD4.yyyy * unity_WorldToLight[1];
					    u_xlat7 = unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat7;
					    u_xlat7 = unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat7;
					    u_xlat7 = u_xlat7 + unity_WorldToLight[3];
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlatb44 = 0.0<u_xlat7.z;
					    u_xlat44 = u_xlatb44 ? 1.0 : float(0.0);
					    u_xlat8.xy = u_xlat7.xy / u_xlat7.ww;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlat8 = texture(_LightTexture0, u_xlat8.xy);
					    u_xlat44 = u_xlat44 * u_xlat8.w;
					    u_xlat45 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat7 = texture(_LightTextureB0, vec2(u_xlat45));
					    u_xlat44 = u_xlat44 * u_xlat7.x;
					    u_xlat43 = u_xlat43 * u_xlat44;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    u_xlat42 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat42 = u_xlat42 * _ProjectionParams.z;
					    u_xlat42 = max(u_xlat42, 0.0);
					    u_xlat42 = u_xlat42 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat42);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat15;
					float u_xlat16;
					float u_xlat28;
					float u_xlat29;
					bool u_xlatb29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat33;
					float u_xlat35;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat39 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat40 = u_xlat40 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat16 = _AnimScale * _Time.y;
					    u_xlat39 = _Time.y * _AnimScale + u_xlat39;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat29 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat29 = u_xlat40 + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat42 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat42 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat42 = u_xlat39 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat4.x = u_xlat42 * 0.5 + u_xlat2.z;
					    u_xlat42 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat40 = u_xlat42 * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat4.y = u_xlat40 * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat29<_Mask;
					    u_xlat4.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat16;
					    u_xlat29 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + 0.5;
					    u_xlat29 = u_xlat29 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat29;
					    u_xlat29 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat42 = u_xlat29 + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat43 = u_xlat40 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat6.x = u_xlat43 * 0.5 + u_xlat5.x;
					    u_xlat43 = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat29 = u_xlat43 * _AnimIntensity + u_xlat29;
					    u_xlat29 = u_xlat40 * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat6.y = u_xlat29 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb29 = u_xlat42<_Mask;
					    u_xlat6.xy = (bool(u_xlatb29)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat29 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat29 = sin(u_xlat29);
					    u_xlat29 = u_xlat29 * 0.5 + u_xlat16;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat29 = u_xlat29 + 0.5;
					    u_xlat29 = u_xlat29 / u_xlat42;
					    u_xlat42 = floor(u_xlat29);
					    u_xlat29 = fract(u_xlat29);
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat5.x = u_xlat29 * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat5.z;
					    u_xlat31.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat42 = u_xlat31.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat29 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat5.y = u_xlat42 * 0.5 + u_xlat5.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat5.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat42 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat16;
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat44 = u_xlat43 + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat45 = u_xlat42 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat8.x = u_xlat45 * 0.5 + u_xlat7.x;
					    u_xlat45 = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat43 = u_xlat45 * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.y = u_xlat43 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat44<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat43 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat16;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat7.x = u_xlat43 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat7.z;
					    u_xlat33 = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat44 = u_xlat33 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat7.y = u_xlat44 * 0.5 + u_xlat7.w;
					    u_xlat7.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat7.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat44 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat16;
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat45 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat10.x = u_xlat47 * 0.5 + u_xlat9.x;
					    u_xlat47 = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat45 = u_xlat47 * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.y = u_xlat45 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat46<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat45 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat16;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat9.x = u_xlat45 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat9.z;
					    u_xlat35 = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat46 = u_xlat35 * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat9.y = u_xlat46 * 0.5 + u_xlat9.w;
					    u_xlat9.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat9.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat46 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat16;
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat3.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.x = u_xlat49 * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat47;
					    u_xlat2.x = u_xlat46 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat11.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat16;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat3.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat15.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat16 = u_xlat16 * _AnimIntensity + u_xlat15.x;
					    u_xlat16 = u_xlat2.x * _BubbleDrift + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat12.x = u_xlat16 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat3.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat39 = log2(u_xlat39);
					    u_xlat39 = u_xlat39 * _BubbleParams.w;
					    u_xlat39 = exp2(u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat4.z = u_xlat39 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat39 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat6.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat29);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat42);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat8.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat43);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat7.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat44);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat10.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat45);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat9.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat46);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat11.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb39)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat39 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat39 = sqrt(u_xlat39);
					    u_xlat40 = log2(u_xlat2.x);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat12.z = u_xlat40 * _BubbleParams.x + u_xlat39;
					    u_xlatb39 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb39)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat39 = u_xlat2.z * _BubbleParams.y;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = (-u_xlat39) * u_xlat39 + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat28 = (-u_xlat39) + 1.0;
					    u_xlat28 = log2(u_xlat28);
					    u_xlat28 = u_xlat28 * _BubbleParams.z;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat28 = min(u_xlat28, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = u_xlat28 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * 3.1415;
					    u_xlat39 = cos(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.600000024 + 0.5;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat39 = float(1.0) / u_xlat39;
					    u_xlat40 = u_xlat40 + (-u_xlat28);
					    u_xlat3.z = u_xlat39 * u_xlat40 + u_xlat28;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat39 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vec2(u_xlat39) * u_xlat2.xy;
					    u_xlat39 = u_xlat3.z * u_xlat3.z;
					    u_xlat40 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat2.xyw = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyw = vec3(u_xlat39) * u_xlat2.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat39 = dot(u_xlat2.xyw, u_xlat2.xyw);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat40 = (-u_xlat28) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat28 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat28 = min(abs(u_xlat28), 1.0);
					    u_xlat28 = _BuildUp * 2.0 + (-u_xlat28);
					    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
					    u_xlat28 = u_xlat28 * 3.1415;
					    u_xlat28 = cos(u_xlat28);
					    u_xlat28 = (-u_xlat28) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat28) + (-vec2(_AlphaThreshold));
					    u_xlat28 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat28);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat28 = log2(u_xlat3.x);
					    u_xlat28 = u_xlat28 * 1.5;
					    u_xlat28 = exp2(u_xlat28);
					    u_xlat3.x = (-u_xlat28) + 1.0;
					    u_xlat5.x = u_xlat40 + (-u_xlat3.x);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat3.xyz = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat40 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb42 = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb42 = u_xlatb4.y || u_xlatb42;
					    u_xlatb42 = u_xlatb30.y || u_xlatb42;
					    u_xlat40 = (u_xlatb42) ? 0.0 : u_xlat40;
					    u_xlat42 = log2(_AlphaThreshold);
					    u_xlat42 = u_xlat42 * 0.300000012;
					    u_xlat42 = exp2(u_xlat42);
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat42) * u_xlat3.xyz;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat42 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat42 + u_xlat40;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat40 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat40 = min(u_xlat40, 1.0);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat5.z = sqrt(u_xlat40);
					    u_xlat2.xyw = u_xlat2.xyw * vec3(u_xlat39) + (-u_xlat5.xyz);
					    u_xlat2.xyz = vec3(u_xlat28) * u_xlat2.xyw + u_xlat5.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xyz = vec3(u_xlat39) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb39 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb39){
					        u_xlatb39 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb39)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat39 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat40 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat39, u_xlat40);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat39 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat6 = texture(_LightTextureB0, vec2(u_xlat40));
					    u_xlat5 = texture(_LightTexture0, u_xlat5.xyz);
					    u_xlat40 = u_xlat5.w * u_xlat6.x;
					    u_xlat39 = u_xlat39 * u_xlat40;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat40 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat39) * _LightColor0.xyz;
					    u_xlat39 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat39 = max(u_xlat4.z, u_xlat39);
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat40 = dot(u_xlat1.xyz, u_xlat2.xyz);
					    u_xlat40 = u_xlat40 + u_xlat40;
					    u_xlat1.xyz = u_xlat2.xyz * (-vec3(u_xlat40)) + u_xlat1.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat2 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat2.x * 16.0;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat3.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat1.xyz = vec3(u_xlat40) * u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					float u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat4.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat5.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat5.x + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat5.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat5.xy, u_xlat5.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat5.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat5.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat5.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat5.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					    u_xlat5.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					    u_xlat5.xyz = u_xlat5.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat6.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat6.xyz;
					        u_xlat6.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat6.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat6.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : vs_TEXCOORD4.xyz;
					        u_xlat6.xyz = u_xlat6.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat6.yzw = u_xlat6.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat6.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat6.x = max(u_xlat40, u_xlat41);
					        u_xlat6 = texture(unity_ProbeVolumeSH, u_xlat6.xzw);
					    } else {
					        u_xlat6.x = float(1.0);
					        u_xlat6.y = float(1.0);
					        u_xlat6.z = float(1.0);
					        u_xlat6.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat6, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat41 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat6 = texture(_LightTextureB0, vec2(u_xlat41));
					    u_xlat5 = texture(_LightTexture0, u_xlat5.xyz);
					    u_xlat41 = u_xlat5.w * u_xlat6.x;
					    u_xlat40 = u_xlat40 * u_xlat41;
					    u_xlat5.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat5.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat5.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat5.xyz;
					    u_xlat5.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat4.y, u_xlat4.x);
					    u_xlat40 = max(u_xlat4.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat39) + u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat1.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat26 = u_xlat13 * u_xlat13;
					    u_xlat1.x = u_xlat26 * u_xlat26;
					    u_xlat14 = u_xlat2.x * u_xlat2.x;
					    u_xlat26 = u_xlat26 * u_xlat26 + -1.0;
					    u_xlat26 = u_xlat14 * u_xlat26 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat13 = u_xlat13 * u_xlat13 + 0.5;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat13 = u_xlat26 * u_xlat26;
					    u_xlat0.x = u_xlat13 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat1.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat16.xyz * vec3(u_xlat40) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat5.xyz * u_xlat0.xyz;
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTextureB0;
					uniform  samplerCube _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  float vs_TEXCOORD6;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec3 u_xlat2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					bvec2 u_xlatb5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec4 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					vec3 u_xlat14;
					float u_xlat15;
					vec3 u_xlat17;
					float u_xlat18;
					float u_xlat28;
					float u_xlat31;
					float u_xlat32;
					bool u_xlatb32;
					vec2 u_xlat33;
					bvec2 u_xlatb33;
					vec2 u_xlat34;
					float u_xlat36;
					float u_xlat38;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					bool u_xlatb49;
					float u_xlat50;
					bool u_xlatb50;
					float u_xlat51;
					bool u_xlatb51;
					float u_xlat52;
					float u_xlat53;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat1.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat2.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat43 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat2.xyz = vec3(u_xlat43) * u_xlat2.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat3 = floor(u_xlat3.xyxy);
					    u_xlat43 = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat44 = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat4.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat44 = u_xlat44 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat18 = _AnimScale * _Time.y;
					    u_xlat43 = _Time.y * _AnimScale + u_xlat43;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat32 = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat32 = u_xlat44 + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat46 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat46 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat46 = u_xlat43 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat5.x = u_xlat46 * 0.5 + u_xlat3.z;
					    u_xlat46 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat44 = u_xlat46 * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat5.y = u_xlat44 * 0.5 + u_xlat3.w;
					    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat32<_Mask;
					    u_xlat5.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat6 = u_xlat3.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat44 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat18;
					    u_xlat32 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + 0.5;
					    u_xlat32 = u_xlat32 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat32;
					    u_xlat32 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat46 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat46 = u_xlat32 + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat47 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat47 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat47 = u_xlat44 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat7.x = u_xlat47 * 0.5 + u_xlat6.x;
					    u_xlat47 = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat32 = u_xlat47 * _AnimIntensity + u_xlat32;
					    u_xlat32 = u_xlat44 * _BubbleDrift + u_xlat32;
					    u_xlat32 = sin(u_xlat32);
					    u_xlat7.y = u_xlat32 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb32 = u_xlat46<_Mask;
					    u_xlat7.xy = (bool(u_xlatb32)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat32 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat32 = sin(u_xlat32);
					    u_xlat32 = u_xlat32 * 0.5 + u_xlat18;
					    u_xlat46 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat32 = u_xlat32 + 0.5;
					    u_xlat32 = u_xlat32 / u_xlat46;
					    u_xlat46 = floor(u_xlat32);
					    u_xlat32 = fract(u_xlat32);
					    u_xlat47 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat46;
					    u_xlat6.x = u_xlat32 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat6.z;
					    u_xlat34.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat46 = u_xlat34.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat32 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat6.y = u_xlat46 * 0.5 + u_xlat6.w;
					    u_xlat6.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat6.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat8 = u_xlat3.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat46 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat18;
					    u_xlat47 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat48 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat48 = u_xlat47 + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat49 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat49 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat49 = u_xlat46 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat9.x = u_xlat49 * 0.5 + u_xlat8.x;
					    u_xlat49 = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat47 = u_xlat49 * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat9.y = u_xlat47 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat48<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat47 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat18;
					    u_xlat48 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat48;
					    u_xlat8.x = u_xlat47 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat8.z;
					    u_xlat36 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat48 = u_xlat36 * _AnimIntensity + u_xlat48;
					    u_xlat48 = u_xlat47 * _BubbleDrift + u_xlat48;
					    u_xlat48 = sin(u_xlat48);
					    u_xlat8.y = u_xlat48 * 0.5 + u_xlat8.w;
					    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat8.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat10 = u_xlat3.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat48 = dot(u_xlat10.xy, _RandomizationPhase.xy);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + u_xlat18;
					    u_xlat49 = dot(u_xlat10.xy, _RandomizationPhase.zw);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat49 = u_xlat49 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat48 = u_xlat48 + 0.5;
					    u_xlat48 = u_xlat48 / u_xlat49;
					    u_xlat49 = floor(u_xlat48);
					    u_xlat48 = fract(u_xlat48);
					    u_xlat50 = dot(u_xlat10.xy, _RandomizationMask.xy);
					    u_xlat50 = u_xlat49 + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat51 = dot(u_xlat10.xy, _Randomization.xy);
					    u_xlat51 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat51 = u_xlat48 * _BubbleDrift + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat11.x = u_xlat51 * 0.5 + u_xlat10.x;
					    u_xlat51 = dot(u_xlat10.yx, _Randomization.zw);
					    u_xlat49 = u_xlat51 * _AnimIntensity + u_xlat49;
					    u_xlat49 = u_xlat48 * _BubbleDrift + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat11.y = u_xlat49 * 0.5 + u_xlat10.y;
					    u_xlat10.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb49 = u_xlat50<_Mask;
					    u_xlat11.xy = (bool(u_xlatb49)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat49 = dot(u_xlat10.zw, _RandomizationPhase.xy);
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + u_xlat18;
					    u_xlat50 = dot(u_xlat10.zw, _RandomizationPhase.zw);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + 0.5;
					    u_xlat50 = u_xlat50 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat49 = u_xlat49 + 0.5;
					    u_xlat49 = u_xlat49 / u_xlat50;
					    u_xlat50 = floor(u_xlat49);
					    u_xlat49 = fract(u_xlat49);
					    u_xlat51 = dot(u_xlat10.zw, _RandomizationMask.xy);
					    u_xlat51 = u_xlat50 + u_xlat51;
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat10.zw, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat50;
					    u_xlat10.x = u_xlat49 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat10.z;
					    u_xlat38 = dot(u_xlat10.wz, _Randomization.zw);
					    u_xlat50 = u_xlat38 * _AnimIntensity + u_xlat50;
					    u_xlat50 = u_xlat49 * _BubbleDrift + u_xlat50;
					    u_xlat50 = sin(u_xlat50);
					    u_xlat10.y = u_xlat50 * 0.5 + u_xlat10.w;
					    u_xlat10.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb50 = u_xlat51<_Mask;
					    u_xlat10.xy = (bool(u_xlatb50)) ? vec2(9999999.0, 9999999.0) : u_xlat10.xy;
					    u_xlat3 = u_xlat3 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat50 = dot(u_xlat3.xy, _RandomizationPhase.xy);
					    u_xlat50 = sin(u_xlat50);
					    u_xlat50 = u_xlat50 * 0.5 + u_xlat18;
					    u_xlat51 = dot(u_xlat3.xy, _RandomizationPhase.zw);
					    u_xlat51 = sin(u_xlat51);
					    u_xlat51 = u_xlat51 * 0.5 + 0.5;
					    u_xlat51 = u_xlat51 * u_xlat4.x + _BubbleDurationMin;
					    u_xlat50 = u_xlat50 + 0.5;
					    u_xlat50 = u_xlat50 / u_xlat51;
					    u_xlat51 = floor(u_xlat50);
					    u_xlat50 = fract(u_xlat50);
					    u_xlat52 = dot(u_xlat3.xy, _RandomizationMask.xy);
					    u_xlat52 = u_xlat51 + u_xlat52;
					    u_xlat52 = sin(u_xlat52);
					    u_xlat52 = u_xlat52 * 0.5 + 0.5;
					    u_xlat53 = dot(u_xlat3.xy, _Randomization.xy);
					    u_xlat53 = u_xlat53 * _AnimIntensity + u_xlat51;
					    u_xlat53 = u_xlat50 * _BubbleDrift + u_xlat53;
					    u_xlat53 = sin(u_xlat53);
					    u_xlat12.x = u_xlat53 * 0.5 + u_xlat3.x;
					    u_xlat3.x = dot(u_xlat3.yx, _Randomization.zw);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat51;
					    u_xlat3.x = u_xlat50 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat12.y = u_xlat3.x * 0.5 + u_xlat3.y;
					    u_xlat3.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb51 = u_xlat52<_Mask;
					    u_xlat12.xy = (bool(u_xlatb51)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat3.x = dot(u_xlat3.zw, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat18;
					    u_xlat17.x = dot(u_xlat3.zw, _RandomizationPhase.zw);
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat17.x = u_xlat17.x * 0.5 + 0.5;
					    u_xlat17.x = u_xlat17.x * u_xlat4.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat17.x;
					    u_xlat17.x = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat4.x = dot(u_xlat3.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat17.x + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat18 = dot(u_xlat3.zw, _Randomization.xy);
					    u_xlat18 = u_xlat18 * _AnimIntensity + u_xlat17.x;
					    u_xlat18 = u_xlat3.x * _BubbleDrift + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat13.x = u_xlat18 * 0.5 + u_xlat3.z;
					    u_xlat31 = dot(u_xlat3.wz, _Randomization.zw);
					    u_xlat17.x = u_xlat31 * _AnimIntensity + u_xlat17.x;
					    u_xlat17.x = u_xlat3.x * _BubbleDrift + u_xlat17.x;
					    u_xlat17.x = sin(u_xlat17.x);
					    u_xlat13.y = u_xlat17.x * 0.5 + u_xlat3.w;
					    u_xlat17.xy = u_xlat13.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat4.x<_Mask;
					    u_xlat13.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat17.xy;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat17.x = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat17.x = sqrt(u_xlat17.x);
					    u_xlat43 = log2(u_xlat43);
					    u_xlat43 = u_xlat43 * _BubbleParams.w;
					    u_xlat43 = exp2(u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat5.z = u_xlat43 * _BubbleParams.x + u_xlat17.x;
					    u_xlat17.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat43 = dot(u_xlat17.xy, u_xlat17.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat44);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat7.z<u_xlat5.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat7.xyz : u_xlat5.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat32);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat6.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat6.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat6.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat46);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat9.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat9.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat9.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat47);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat8.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat8.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat48);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat11.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat11.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat11.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat49);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat10.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat10.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat10.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat50);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat12.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat12.z<u_xlat17.z;
					    u_xlat17.xyz = (bool(u_xlatb43)) ? u_xlat12.xyz : u_xlat17.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat13.xy);
					    u_xlat43 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat43 = sqrt(u_xlat43);
					    u_xlat44 = log2(u_xlat3.x);
					    u_xlat44 = u_xlat44 * _BubbleParams.w;
					    u_xlat44 = exp2(u_xlat44);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat13.z = u_xlat44 * _BubbleParams.x + u_xlat43;
					    u_xlatb43 = u_xlat13.z<u_xlat17.z;
					    u_xlat3.xyz = (bool(u_xlatb43)) ? u_xlat13.xyz : u_xlat17.xyz;
					    u_xlat43 = u_xlat3.z * _BubbleParams.y;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = (-u_xlat43) * u_xlat43 + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat31 = (-u_xlat43) + 1.0;
					    u_xlat31 = log2(u_xlat31);
					    u_xlat31 = u_xlat31 * _BubbleParams.z;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat31 = min(u_xlat31, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = u_xlat31 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * 3.1415;
					    u_xlat43 = cos(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.600000024 + 0.5;
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat43 = float(1.0) / u_xlat43;
					    u_xlat44 = u_xlat44 + (-u_xlat31);
					    u_xlat4.z = u_xlat43 * u_xlat44 + u_xlat31;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat43 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xy = vec2(u_xlat43) * u_xlat3.xy;
					    u_xlat43 = u_xlat4.z * u_xlat4.z;
					    u_xlat44 = (-u_xlat4.z) * u_xlat4.z + 1.0;
					    u_xlat44 = sqrt(u_xlat44);
					    u_xlat4.xy = vec2(u_xlat44) * u_xlat3.xy;
					    u_xlatb43 = u_xlat43!=0.0;
					    u_xlat43 = u_xlatb43 ? 1.0 : float(0.0);
					    u_xlat3.xyw = u_xlat4.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat3.xyw = vec3(u_xlat43) * u_xlat3.xyw + vec3(0.0, 0.0, 1.0);
					    u_xlat43 = dot(u_xlat3.xyw, u_xlat3.xyw);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat44 = (-u_xlat31) + 1.0;
					    u_xlat4 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat31 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat31 = min(abs(u_xlat31), 1.0);
					    u_xlat31 = _BuildUp * 2.0 + (-u_xlat31);
					    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
					    u_xlat31 = u_xlat31 * 3.1415;
					    u_xlat31 = cos(u_xlat31);
					    u_xlat31 = (-u_xlat31) * 0.5 + 0.5;
					    u_xlat4.xy = u_xlat4.xy * vec2(u_xlat31) + (-vec2(_AlphaThreshold));
					    u_xlat31 = (-_AlphaThreshold) + 1.0;
					    u_xlat4.xy = u_xlat4.xy / vec2(u_xlat31);
					    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
					    u_xlat4.z = 0.0;
					    u_xlat5 = texture(_AlbedoRampTex, u_xlat4.xz);
					    u_xlat31 = log2(u_xlat4.x);
					    u_xlat31 = u_xlat31 * 1.5;
					    u_xlat31 = exp2(u_xlat31);
					    u_xlat4.x = (-u_xlat31) + 1.0;
					    u_xlat6.x = u_xlat44 + (-u_xlat4.x);
					    u_xlat6.y = float(0.0);
					    u_xlat34.y = float(0.0);
					    u_xlat7 = texture(_ColorRampTex, u_xlat6.xy);
					    u_xlat7 = u_xlat7 * _Color;
					    u_xlat34.x = _AlphaThreshold * 0.200000003 + u_xlat4.y;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat34.xy);
					    u_xlat4.xyz = u_xlat4.xyz * u_xlat7.xyz;
					    u_xlat44 = u_xlat5.w * u_xlat7.w;
					    u_xlat5.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb5.xy = lessThan(u_xlat5.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat33.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb33.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat33.xyxy).xy;
					    u_xlatb46 = u_xlatb33.x || u_xlatb5.x;
					    u_xlatb46 = u_xlatb5.y || u_xlatb46;
					    u_xlatb46 = u_xlatb33.y || u_xlatb46;
					    u_xlat44 = (u_xlatb46) ? 0.0 : u_xlat44;
					    u_xlat46 = log2(_AlphaThreshold);
					    u_xlat46 = u_xlat46 * 0.300000012;
					    u_xlat46 = exp2(u_xlat46);
					    u_xlat46 = (-u_xlat46) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat46) * u_xlat4.xyz;
					    u_xlat5 = texture(_Specular, u_xlat6.xy);
					    u_xlat6.xyz = u_xlat5.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat46 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat46 + u_xlat44;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat7 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat7.x = u_xlat7.w * u_xlat7.x;
					    u_xlat7.xy = u_xlat7.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat44 = dot(u_xlat7.xy, u_xlat7.xy);
					    u_xlat44 = min(u_xlat44, 1.0);
					    u_xlat44 = (-u_xlat44) + 1.0;
					    u_xlat7.z = sqrt(u_xlat44);
					    u_xlat3.xyw = u_xlat3.xyw * vec3(u_xlat43) + (-u_xlat7.xyz);
					    u_xlat3.xyz = vec3(u_xlat31) * u_xlat3.xyw + u_xlat7.xyz;
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat3.xyz);
					    u_xlat43 = inversesqrt(u_xlat43);
					    u_xlat3.xyz = vec3(u_xlat43) * u_xlat3.xyz;
					    u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_WorldToLight[1].xyz;
					    u_xlat7.xyz = unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					    u_xlat7.xyz = unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					    u_xlat7.xyz = u_xlat7.xyz + unity_WorldToLight[3].xyz;
					    u_xlatb43 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb43){
					        u_xlatb43 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat8.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat8.xyz;
					        u_xlat8.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat8.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat8.xyz = (bool(u_xlatb43)) ? u_xlat8.xyz : vs_TEXCOORD4.xyz;
					        u_xlat8.xyz = u_xlat8.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat8.yzw = u_xlat8.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat43 = u_xlat8.y * 0.25 + 0.75;
					        u_xlat44 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat8.x = max(u_xlat43, u_xlat44);
					        u_xlat8 = texture(unity_ProbeVolumeSH, u_xlat8.xzw);
					    } else {
					        u_xlat8.x = float(1.0);
					        u_xlat8.y = float(1.0);
					        u_xlat8.z = float(1.0);
					        u_xlat8.w = float(1.0);
					    }
					    u_xlat43 = dot(u_xlat8, unity_OcclusionMaskSelector);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat8 = texture(_LightTextureB0, vec2(u_xlat44));
					    u_xlat7 = texture(_LightTexture0, u_xlat7.xyz);
					    u_xlat44 = u_xlat7.w * u_xlat8.x;
					    u_xlat43 = u_xlat43 * u_xlat44;
					    u_xlat7.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);
					    u_xlat7.y = dot(vs_TEXCOORD2.xyz, u_xlat3.xyz);
					    u_xlat7.z = dot(vs_TEXCOORD3.xyz, u_xlat3.xyz);
					    u_xlat44 = dot(u_xlat7.xyz, u_xlat7.xyz);
					    u_xlat44 = inversesqrt(u_xlat44);
					    u_xlat3.xyz = vec3(u_xlat44) * u_xlat7.xyz;
					    u_xlat7.xyz = vec3(u_xlat43) * _LightColor0.xyz;
					    u_xlat43 = max(u_xlat6.y, u_xlat6.x);
					    u_xlat43 = max(u_xlat6.z, u_xlat43);
					    u_xlat43 = (-u_xlat43) + 1.0;
					    u_xlat4.xyz = vec3(u_xlat43) * u_xlat4.xyz;
					    u_xlat5 = (-u_xlat5.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat42) + u_xlat2.xyz;
					    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat42 = max(u_xlat42, 0.00100000005);
					    u_xlat42 = inversesqrt(u_xlat42);
					    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
					    u_xlat42 = dot(u_xlat3.xyz, u_xlat2.xyz);
					    u_xlat43 = dot(u_xlat3.xyz, u_xlat1.xyz);
					    u_xlat43 = clamp(u_xlat43, 0.0, 1.0);
					    u_xlat2.x = dot(u_xlat3.xyz, u_xlat0.xyz);
					    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat0.x * u_xlat0.x;
					    u_xlat14.x = dot(u_xlat14.xx, u_xlat5.xx);
					    u_xlat14.x = u_xlat14.x + -0.5;
					    u_xlat28 = (-u_xlat43) + 1.0;
					    u_xlat1.x = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat1.x;
					    u_xlat28 = u_xlat14.x * u_xlat28 + 1.0;
					    u_xlat1.x = -abs(u_xlat42) + 1.0;
					    u_xlat15 = u_xlat1.x * u_xlat1.x;
					    u_xlat15 = u_xlat15 * u_xlat15;
					    u_xlat1.x = u_xlat1.x * u_xlat15;
					    u_xlat14.x = u_xlat14.x * u_xlat1.x + 1.0;
					    u_xlat14.x = u_xlat14.x * u_xlat28;
					    u_xlat28 = u_xlat5.x * u_xlat5.x;
					    u_xlat28 = max(u_xlat28, 0.00200000009);
					    u_xlat1.x = (-u_xlat28) + 1.0;
					    u_xlat15 = abs(u_xlat42) * u_xlat1.x + u_xlat28;
					    u_xlat1.x = u_xlat43 * u_xlat1.x + u_xlat28;
					    u_xlat42 = abs(u_xlat42) * u_xlat1.x;
					    u_xlat42 = u_xlat43 * u_xlat15 + u_xlat42;
					    u_xlat42 = u_xlat42 + 9.99999975e-06;
					    u_xlat42 = 0.5 / u_xlat42;
					    u_xlat28 = u_xlat28 * u_xlat28;
					    u_xlat1.x = u_xlat2.x * u_xlat28 + (-u_xlat2.x);
					    u_xlat1.x = u_xlat1.x * u_xlat2.x + 1.0;
					    u_xlat28 = u_xlat28 * 0.318309873;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;
					    u_xlat28 = u_xlat28 / u_xlat1.x;
					    u_xlat28 = u_xlat28 * u_xlat42;
					    u_xlat14.y = u_xlat28 * 3.14159274;
					    u_xlat14.xy = vec2(u_xlat43) * u_xlat14.xy;
					    u_xlat28 = max(u_xlat14.y, 0.0);
					    u_xlat42 = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlatb42 = u_xlat42!=0.0;
					    u_xlat42 = u_xlatb42 ? 1.0 : float(0.0);
					    u_xlat28 = u_xlat42 * u_xlat28;
					    u_xlat1.xyz = u_xlat14.xxx * u_xlat7.xyz;
					    u_xlat14.xyz = u_xlat7.xyz * vec3(u_xlat28);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat43 = u_xlat0.x * u_xlat0.x;
					    u_xlat43 = u_xlat43 * u_xlat43;
					    u_xlat0.x = u_xlat0.x * u_xlat43;
					    u_xlat2.xyz = u_xlat5.yzw * u_xlat0.xxx + u_xlat6.xyz;
					    u_xlat0.xyz = u_xlat14.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    u_xlat42 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat42 = (-u_xlat42) + 1.0;
					    u_xlat42 = u_xlat42 * _ProjectionParams.z;
					    u_xlat42 = max(u_xlat42, 0.0);
					    u_xlat42 = u_xlat42 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat42 = clamp(u_xlat42, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat42);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler2D unity_NHxRoughness;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD6;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					bvec2 u_xlatb3;
					vec4 u_xlat4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat13;
					vec3 u_xlat14;
					vec2 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					float u_xlat25;
					float u_xlat26;
					vec2 u_xlat27;
					bvec2 u_xlatb27;
					vec2 u_xlat28;
					float u_xlat36;
					bool u_xlatb36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					bool u_xlatb38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat36 = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat36 = sin(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.5 + 0.5;
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat2.x = u_xlat2.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat26 = _AnimScale * _Time.y;
					    u_xlat36 = _Time.y * _AnimScale + u_xlat36;
					    u_xlat36 = u_xlat36 / u_xlat2.x;
					    u_xlat2.x = floor(u_xlat36);
					    u_xlat36 = fract(u_xlat36);
					    u_xlat38 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat38 = u_xlat2.x + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat3.x = u_xlat3.x * _AnimIntensity + u_xlat2.x;
					    u_xlat3.x = u_xlat36 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat1.z;
					    u_xlat27.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat2.x = u_xlat27.x * _AnimIntensity + u_xlat2.x;
					    u_xlat2.x = u_xlat36 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat3.y = u_xlat2.x * 0.5 + u_xlat1.w;
					    u_xlat3.xy = u_xlat3.xy + vec2(0.5, 0.5);
					    u_xlatb2 = u_xlat38<_Mask;
					    u_xlat3.xy = (bool(u_xlatb2)) ? vec2(9999999.0, 9999999.0) : u_xlat3.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat2.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat26;
					    u_xlat38 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + 0.5;
					    u_xlat38 = u_xlat38 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat38;
					    u_xlat38 = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat39 = u_xlat38 + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat5.x = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat5.x = u_xlat5.x * _AnimIntensity + u_xlat38;
					    u_xlat5.x = u_xlat2.x * _BubbleDrift + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat38 = u_xlat4.x * _AnimIntensity + u_xlat38;
					    u_xlat38 = u_xlat2.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat5.y = u_xlat38 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat5.xy + vec2(0.5, 0.5);
					    u_xlatb38 = u_xlat39<_Mask;
					    u_xlat5.xy = (bool(u_xlatb38)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat38 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat38 = sin(u_xlat38);
					    u_xlat38 = u_xlat38 * 0.5 + u_xlat26;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat38 = u_xlat38 + 0.5;
					    u_xlat38 = u_xlat38 / u_xlat39;
					    u_xlat39 = floor(u_xlat38);
					    u_xlat38 = fract(u_xlat38);
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat4.x = u_xlat39 + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat16.x = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat16.x = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat16.x = u_xlat38 * _BubbleDrift + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat6.x = u_xlat16.x * 0.5 + u_xlat4.z;
					    u_xlat16.x = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat39 = u_xlat16.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat38 * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.w;
					    u_xlat16.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat4.x<_Mask;
					    u_xlat4.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat16.xy;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat39 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat26;
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat40;
					    u_xlat40 = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat41 = u_xlat40 + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat7.x = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat7.x = u_xlat7.x * _AnimIntensity + u_xlat40;
					    u_xlat7.x = u_xlat39 * _BubbleDrift + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat40 = u_xlat6.x * _AnimIntensity + u_xlat40;
					    u_xlat40 = u_xlat39 * _BubbleDrift + u_xlat40;
					    u_xlat40 = sin(u_xlat40);
					    u_xlat7.y = u_xlat40 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb40 = u_xlat41<_Mask;
					    u_xlat7.xy = (bool(u_xlatb40)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat40 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat26;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat6.x = u_xlat41 + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat18.x = u_xlat40 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat8.x = u_xlat18.x * 0.5 + u_xlat6.z;
					    u_xlat18.x = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat41 = u_xlat18.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.w;
					    u_xlat18.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat6.x<_Mask;
					    u_xlat6.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat41 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat26;
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat42;
					    u_xlat42 = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat9.x = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat9.x = u_xlat9.x * _AnimIntensity + u_xlat42;
					    u_xlat9.x = u_xlat41 * _BubbleDrift + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat42 = u_xlat8.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat41 * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat9.y = u_xlat42 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat9.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat42 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat26;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat8.x = u_xlat43 + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat20.x = u_xlat42 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat10.x = u_xlat20.x * 0.5 + u_xlat8.z;
					    u_xlat20.x = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat43 = u_xlat20.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.w;
					    u_xlat20.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat8.x<_Mask;
					    u_xlat8.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat43 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat26;
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat14.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat44;
					    u_xlat10.x = u_xlat43 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat44;
					    u_xlat1.x = u_xlat43 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat10.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat10.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat26;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat14.x + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat14.x = u_xlat13.x + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat26 = u_xlat26 * _AnimIntensity + u_xlat13.x;
					    u_xlat26 = u_xlat1.x * _BubbleDrift + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat11.x = u_xlat26 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat14.x<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat36 = log2(u_xlat36);
					    u_xlat36 = u_xlat36 * _BubbleParams.w;
					    u_xlat36 = exp2(u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat3.z = u_xlat36 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat36 = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat13.x = log2(u_xlat2.x);
					    u_xlat13.x = u_xlat13.x * _BubbleParams.w;
					    u_xlat13.x = exp2(u_xlat13.x);
					    u_xlat13.x = (-u_xlat13.x) + 1.0;
					    u_xlat5.z = u_xlat13.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat38);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat4.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat39);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat7.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat40);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat6.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat41);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat9.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat42);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat8.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat2.x = log2(u_xlat43);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat10.z = u_xlat2.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb36)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat36 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat36 = sqrt(u_xlat36);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat36;
					    u_xlatb36 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb36)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat36 = u_xlat1.z * _BubbleParams.y;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat25 = (-u_xlat36) * u_xlat36 + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat37 = (-u_xlat36) + 1.0;
					    u_xlat37 = log2(u_xlat37);
					    u_xlat37 = u_xlat37 * _BubbleParams.z;
					    u_xlat37 = exp2(u_xlat37);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = u_xlat37 * 3.1415;
					    u_xlat37 = cos(u_xlat37);
					    u_xlat37 = u_xlat37 * 0.5 + 0.5;
					    u_xlat36 = u_xlat36 * 3.1415;
					    u_xlat36 = cos(u_xlat36);
					    u_xlat36 = u_xlat36 * 0.600000024 + 0.5;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat36 = float(1.0) / u_xlat36;
					    u_xlat25 = (-u_xlat37) + u_xlat25;
					    u_xlat2.z = u_xlat36 * u_xlat25 + u_xlat37;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat36 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vec2(u_xlat36) * u_xlat1.xy;
					    u_xlat36 = u_xlat2.z * u_xlat2.z;
					    u_xlat25 = (-u_xlat2.z) * u_xlat2.z + 1.0;
					    u_xlat25 = sqrt(u_xlat25);
					    u_xlat2.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlatb36 = u_xlat36!=0.0;
					    u_xlat36 = u_xlatb36 ? 1.0 : float(0.0);
					    u_xlat1.xyz = u_xlat2.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat2 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat26 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat26 = min(abs(u_xlat26), 1.0);
					    u_xlat26 = _BuildUp * 2.0 + (-u_xlat26);
					    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
					    u_xlat26 = u_xlat26 * 3.1415;
					    u_xlat26 = cos(u_xlat26);
					    u_xlat26 = (-u_xlat26) * 0.5 + 0.5;
					    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat26) + (-vec2(_AlphaThreshold));
					    u_xlat26 = (-_AlphaThreshold) + 1.0;
					    u_xlat2.xy = u_xlat2.xy / vec2(u_xlat26);
					    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
					    u_xlat2.z = 0.0;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat2.xz);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 1.5;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat26 = (-u_xlat2.x) + 1.0;
					    u_xlat4.x = u_xlat37 + (-u_xlat26);
					    u_xlat4.y = float(0.0);
					    u_xlat28.y = float(0.0);
					    u_xlat5 = texture(_ColorRampTex, u_xlat4.xy);
					    u_xlat5 = u_xlat5 * _Color;
					    u_xlat28.x = _AlphaThreshold * 0.200000003 + u_xlat2.y;
					    u_xlat6 = texture(_AlbedoRampTex, u_xlat28.xy);
					    u_xlat14.xyz = u_xlat5.xyz * u_xlat6.xyz;
					    u_xlat37 = u_xlat3.w * u_xlat5.w;
					    u_xlat3.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb3.xy = lessThan(u_xlat3.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat27.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb27.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat27.xyxy).xy;
					    u_xlatb3.x = u_xlatb27.x || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb3.y || u_xlatb3.x;
					    u_xlatb3.x = u_xlatb27.y || u_xlatb3.x;
					    u_xlat37 = (u_xlatb3.x) ? 0.0 : u_xlat37;
					    u_xlat3.x = log2(_AlphaThreshold);
					    u_xlat3.x = u_xlat3.x * 0.300000012;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat14.xyz = u_xlat14.xyz * u_xlat3.xxx;
					    u_xlat3 = texture(_Specular, u_xlat4.xy);
					    u_xlat3.xyz = u_xlat3.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat37;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat4 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat4.x = u_xlat4.w * u_xlat4.x;
					    u_xlat4.xy = u_xlat4.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat37 = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat37 = min(u_xlat37, 1.0);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat4.z = sqrt(u_xlat37);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat36) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.xxx * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat4.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat4.xy;
					    u_xlat4.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat4.xy;
					    u_xlat4.xy = u_xlat4.xy + unity_WorldToLight[3].xy;
					    u_xlatb36 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb36){
					        u_xlatb36 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat5.xyz = (bool(u_xlatb36)) ? u_xlat5.xyz : vs_TEXCOORD4.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat5.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat36 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat37 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat36, u_xlat37);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat36 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat4 = texture(_LightTexture0, u_xlat4.xy);
					    u_xlat36 = u_xlat36 * u_xlat4.w;
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat36) * _LightColor0.xyz;
					    u_xlat36 = max(u_xlat3.y, u_xlat3.x);
					    u_xlat36 = max(u_xlat3.z, u_xlat36);
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat37 = dot(u_xlat0.xyz, u_xlat1.xyz);
					    u_xlat37 = u_xlat37 + u_xlat37;
					    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat37)) + u_xlat0.xyz;
					    u_xlat1.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.y = (-u_xlat3.w) * _Glossiness + 1.0;
					    u_xlat5 = texture(unity_NHxRoughness, u_xlat0.xy);
					    u_xlat0.x = u_xlat5.x * 16.0;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat14.xyz * vec3(u_xlat36) + u_xlat0.xyz;
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat0.xyz = u_xlat0.xyz * u_xlat1.xyz;
					    u_xlat36 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat36 = u_xlat36 * _ProjectionParams.z;
					    u_xlat36 = max(u_xlat36, 0.0);
					    u_xlat36 = u_xlat36 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat36);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD6;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat1;
					bool u_xlatb1;
					vec4 u_xlat2;
					bool u_xlatb2;
					vec4 u_xlat3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec3 u_xlat7;
					vec4 u_xlat8;
					vec3 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					float u_xlat12;
					vec3 u_xlat13;
					bool u_xlatb13;
					vec2 u_xlat14;
					bool u_xlatb14;
					vec3 u_xlat15;
					bvec2 u_xlatb15;
					float u_xlat16;
					bool u_xlatb16;
					float u_xlat17;
					float u_xlat18;
					bool u_xlatb18;
					float u_xlat19;
					float u_xlat20;
					bool u_xlatb20;
					float u_xlat21;
					float u_xlat22;
					float u_xlat24;
					float u_xlat25;
					float u_xlat26;
					float u_xlat28;
					vec2 u_xlat29;
					float u_xlat30;
					float u_xlat32;
					float u_xlat36;
					float u_xlat37;
					bool u_xlatb37;
					float u_xlat38;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					float u_xlat45;
					bool u_xlatb45;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat1 = floor(u_xlat1.xyxy);
					    u_xlat2.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat14.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + 0.5;
					    u_xlat26 = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat14.x = u_xlat14.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat38 = _AnimScale * _Time.y;
					    u_xlat2.x = _Time.y * _AnimScale + u_xlat2.x;
					    u_xlat2.x = u_xlat2.x / u_xlat14.x;
					    u_xlat14.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat3.x = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat3.x = u_xlat14.x + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat15.x = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat15.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat4.x = u_xlat15.x * 0.5 + u_xlat1.z;
					    u_xlat15.x = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat14.x = u_xlat15.x * _AnimIntensity + u_xlat14.x;
					    u_xlat14.x = u_xlat2.x * _BubbleDrift + u_xlat14.x;
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat4.y = u_xlat14.x * 0.5 + u_xlat1.w;
					    u_xlat15.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb14 = u_xlat3.x<_Mask;
					    u_xlat3.xy = (bool(u_xlatb14)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat4 = u_xlat1.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat14.x = dot(u_xlat4.xy, _RandomizationPhase.xy);
					    u_xlat14.x = sin(u_xlat14.x);
					    u_xlat14.x = u_xlat14.x * 0.5 + u_xlat38;
					    u_xlat39 = dot(u_xlat4.xy, _RandomizationPhase.zw);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + 0.5;
					    u_xlat39 = u_xlat39 * u_xlat26 + _BubbleDurationMin;
					    u_xlat14.x = u_xlat14.x + 0.5;
					    u_xlat14.x = u_xlat14.x / u_xlat39;
					    u_xlat39 = floor(u_xlat14.x);
					    u_xlat14.x = fract(u_xlat14.x);
					    u_xlat5.x = dot(u_xlat4.xy, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat39 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat17 = dot(u_xlat4.xy, _Randomization.xy);
					    u_xlat17 = u_xlat17 * _AnimIntensity + u_xlat39;
					    u_xlat17 = u_xlat14.x * _BubbleDrift + u_xlat17;
					    u_xlat17 = sin(u_xlat17);
					    u_xlat6.x = u_xlat17 * 0.5 + u_xlat4.x;
					    u_xlat4.x = dot(u_xlat4.yx, _Randomization.zw);
					    u_xlat39 = u_xlat4.x * _AnimIntensity + u_xlat39;
					    u_xlat39 = u_xlat14.x * _BubbleDrift + u_xlat39;
					    u_xlat39 = sin(u_xlat39);
					    u_xlat6.y = u_xlat39 * 0.5 + u_xlat4.y;
					    u_xlat4.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb39 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb39)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat39 = dot(u_xlat4.zw, _RandomizationPhase.xy);
					    u_xlat39 = sin(u_xlat39);
					    u_xlat39 = u_xlat39 * 0.5 + u_xlat38;
					    u_xlat4.x = dot(u_xlat4.zw, _RandomizationPhase.zw);
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + 0.5;
					    u_xlat4.x = u_xlat4.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat39 = u_xlat39 + 0.5;
					    u_xlat39 = u_xlat39 / u_xlat4.x;
					    u_xlat4.x = floor(u_xlat39);
					    u_xlat39 = fract(u_xlat39);
					    u_xlat16 = dot(u_xlat4.zw, _RandomizationMask.xy);
					    u_xlat16 = u_xlat4.x + u_xlat16;
					    u_xlat16 = sin(u_xlat16);
					    u_xlat16 = u_xlat16 * 0.5 + 0.5;
					    u_xlat41 = dot(u_xlat4.zw, _Randomization.xy);
					    u_xlat41 = u_xlat41 * _AnimIntensity + u_xlat4.x;
					    u_xlat41 = u_xlat39 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat6.x = u_xlat41 * 0.5 + u_xlat4.z;
					    u_xlat28 = dot(u_xlat4.wz, _Randomization.zw);
					    u_xlat4.x = u_xlat28 * _AnimIntensity + u_xlat4.x;
					    u_xlat4.x = u_xlat39 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat6.y = u_xlat4.x * 0.5 + u_xlat4.w;
					    u_xlat4.xz = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb16 = u_xlat16<_Mask;
					    u_xlat4.xy = (bool(u_xlatb16)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xz;
					    u_xlat6 = u_xlat1.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat40 = dot(u_xlat6.xy, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + u_xlat38;
					    u_xlat41 = dot(u_xlat6.xy, _RandomizationPhase.zw);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat41 = u_xlat41 * u_xlat26 + _BubbleDurationMin;
					    u_xlat40 = u_xlat40 + 0.5;
					    u_xlat40 = u_xlat40 / u_xlat41;
					    u_xlat41 = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat7.x = dot(u_xlat6.xy, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat41 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat19 = dot(u_xlat6.xy, _Randomization.xy);
					    u_xlat19 = u_xlat19 * _AnimIntensity + u_xlat41;
					    u_xlat19 = u_xlat40 * _BubbleDrift + u_xlat19;
					    u_xlat19 = sin(u_xlat19);
					    u_xlat8.x = u_xlat19 * 0.5 + u_xlat6.x;
					    u_xlat6.x = dot(u_xlat6.yx, _Randomization.zw);
					    u_xlat41 = u_xlat6.x * _AnimIntensity + u_xlat41;
					    u_xlat41 = u_xlat40 * _BubbleDrift + u_xlat41;
					    u_xlat41 = sin(u_xlat41);
					    u_xlat8.y = u_xlat41 * 0.5 + u_xlat6.y;
					    u_xlat6.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xy;
					    u_xlat41 = dot(u_xlat6.zw, _RandomizationPhase.xy);
					    u_xlat41 = sin(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + u_xlat38;
					    u_xlat6.x = dot(u_xlat6.zw, _RandomizationPhase.zw);
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + 0.5;
					    u_xlat6.x = u_xlat6.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat41 = u_xlat41 + 0.5;
					    u_xlat41 = u_xlat41 / u_xlat6.x;
					    u_xlat6.x = floor(u_xlat41);
					    u_xlat41 = fract(u_xlat41);
					    u_xlat18 = dot(u_xlat6.zw, _RandomizationMask.xy);
					    u_xlat18 = u_xlat6.x + u_xlat18;
					    u_xlat18 = sin(u_xlat18);
					    u_xlat18 = u_xlat18 * 0.5 + 0.5;
					    u_xlat43 = dot(u_xlat6.zw, _Randomization.xy);
					    u_xlat43 = u_xlat43 * _AnimIntensity + u_xlat6.x;
					    u_xlat43 = u_xlat41 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat8.x = u_xlat43 * 0.5 + u_xlat6.z;
					    u_xlat30 = dot(u_xlat6.wz, _Randomization.zw);
					    u_xlat6.x = u_xlat30 * _AnimIntensity + u_xlat6.x;
					    u_xlat6.x = u_xlat41 * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat8.y = u_xlat6.x * 0.5 + u_xlat6.w;
					    u_xlat6.xz = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb18 = u_xlat18<_Mask;
					    u_xlat6.xy = (bool(u_xlatb18)) ? vec2(9999999.0, 9999999.0) : u_xlat6.xz;
					    u_xlat8 = u_xlat1.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat42 = dot(u_xlat8.xy, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat38;
					    u_xlat43 = dot(u_xlat8.xy, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat26 + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat9.x = dot(u_xlat8.xy, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat43 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat21 = dot(u_xlat8.xy, _Randomization.xy);
					    u_xlat21 = u_xlat21 * _AnimIntensity + u_xlat43;
					    u_xlat21 = u_xlat42 * _BubbleDrift + u_xlat21;
					    u_xlat21 = sin(u_xlat21);
					    u_xlat10.x = u_xlat21 * 0.5 + u_xlat8.x;
					    u_xlat8.x = dot(u_xlat8.yx, _Randomization.zw);
					    u_xlat43 = u_xlat8.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat10.y = u_xlat43 * 0.5 + u_xlat8.y;
					    u_xlat8.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xy;
					    u_xlat43 = dot(u_xlat8.zw, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat38;
					    u_xlat8.x = dot(u_xlat8.zw, _RandomizationPhase.zw);
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + 0.5;
					    u_xlat8.x = u_xlat8.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat8.x;
					    u_xlat8.x = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat20 = dot(u_xlat8.zw, _RandomizationMask.xy);
					    u_xlat20 = u_xlat8.x + u_xlat20;
					    u_xlat20 = sin(u_xlat20);
					    u_xlat20 = u_xlat20 * 0.5 + 0.5;
					    u_xlat45 = dot(u_xlat8.zw, _Randomization.xy);
					    u_xlat45 = u_xlat45 * _AnimIntensity + u_xlat8.x;
					    u_xlat45 = u_xlat43 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat10.x = u_xlat45 * 0.5 + u_xlat8.z;
					    u_xlat32 = dot(u_xlat8.wz, _Randomization.zw);
					    u_xlat8.x = u_xlat32 * _AnimIntensity + u_xlat8.x;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat10.y = u_xlat8.x * 0.5 + u_xlat8.w;
					    u_xlat8.xz = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb20 = u_xlat20<_Mask;
					    u_xlat8.xy = (bool(u_xlatb20)) ? vec2(9999999.0, 9999999.0) : u_xlat8.xz;
					    u_xlat1 = u_xlat1 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat44 = dot(u_xlat1.xy, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat38;
					    u_xlat45 = dot(u_xlat1.xy, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat26 + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat10.x = dot(u_xlat1.xy, _RandomizationMask.xy);
					    u_xlat10.x = u_xlat45 + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + 0.5;
					    u_xlat22 = dot(u_xlat1.xy, _Randomization.xy);
					    u_xlat22 = u_xlat22 * _AnimIntensity + u_xlat45;
					    u_xlat22 = u_xlat44 * _BubbleDrift + u_xlat22;
					    u_xlat22 = sin(u_xlat22);
					    u_xlat11.x = u_xlat22 * 0.5 + u_xlat1.x;
					    u_xlat1.x = dot(u_xlat1.yx, _Randomization.zw);
					    u_xlat1.x = u_xlat1.x * _AnimIntensity + u_xlat45;
					    u_xlat1.x = u_xlat44 * _BubbleDrift + u_xlat1.x;
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat11.y = u_xlat1.x * 0.5 + u_xlat1.y;
					    u_xlat1.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat10.x<_Mask;
					    u_xlat10.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat1.xy;
					    u_xlat1.x = dot(u_xlat1.zw, _RandomizationPhase.xy);
					    u_xlat1.x = sin(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * 0.5 + u_xlat38;
					    u_xlat13.x = dot(u_xlat1.zw, _RandomizationPhase.zw);
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat13.x = u_xlat13.x * 0.5 + 0.5;
					    u_xlat13.x = u_xlat13.x * u_xlat26 + _BubbleDurationMin;
					    u_xlat1.x = u_xlat1.x + 0.5;
					    u_xlat1.x = u_xlat1.x / u_xlat13.x;
					    u_xlat13.x = floor(u_xlat1.x);
					    u_xlat1.x = fract(u_xlat1.x);
					    u_xlat26 = dot(u_xlat1.zw, _RandomizationMask.xy);
					    u_xlat26 = u_xlat13.x + u_xlat26;
					    u_xlat26 = sin(u_xlat26);
					    u_xlat26 = u_xlat26 * 0.5 + 0.5;
					    u_xlat38 = dot(u_xlat1.zw, _Randomization.xy);
					    u_xlat38 = u_xlat38 * _AnimIntensity + u_xlat13.x;
					    u_xlat38 = u_xlat1.x * _BubbleDrift + u_xlat38;
					    u_xlat38 = sin(u_xlat38);
					    u_xlat11.x = u_xlat38 * 0.5 + u_xlat1.z;
					    u_xlat25 = dot(u_xlat1.wz, _Randomization.zw);
					    u_xlat13.x = u_xlat25 * _AnimIntensity + u_xlat13.x;
					    u_xlat13.x = u_xlat1.x * _BubbleDrift + u_xlat13.x;
					    u_xlat13.x = sin(u_xlat13.x);
					    u_xlat11.y = u_xlat13.x * 0.5 + u_xlat1.w;
					    u_xlat13.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb37 = u_xlat26<_Mask;
					    u_xlat11.xy = (bool(u_xlatb37)) ? vec2(9999999.0, 9999999.0) : u_xlat13.xy;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat3.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat2.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat3.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlat13.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat13.x = dot(u_xlat13.xy, u_xlat13.xy);
					    u_xlat13.x = sqrt(u_xlat13.x);
					    u_xlat25 = log2(u_xlat14.x);
					    u_xlat25 = u_xlat25 * _BubbleParams.w;
					    u_xlat25 = exp2(u_xlat25);
					    u_xlat25 = (-u_xlat25) + 1.0;
					    u_xlat5.z = u_xlat25 * _BubbleParams.x + u_xlat13.x;
					    u_xlatb13 = u_xlat5.z<u_xlat3.z;
					    u_xlat13.xyz = (bool(u_xlatb13)) ? u_xlat5.xyz : u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat39);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat4.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat4.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat4.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat40);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat7.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat7.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat7.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat41);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat6.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat6.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat6.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat42);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat9.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat9.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat9.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat43);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat8.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat8.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat8.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat14.x = log2(u_xlat44);
					    u_xlat14.x = u_xlat14.x * _BubbleParams.w;
					    u_xlat14.x = exp2(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) + 1.0;
					    u_xlat10.z = u_xlat14.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb2 = u_xlat10.z<u_xlat13.z;
					    u_xlat13.xyz = (bool(u_xlatb2)) ? u_xlat10.xyz : u_xlat13.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat2.x = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat2.x = sqrt(u_xlat2.x);
					    u_xlat1.x = log2(u_xlat1.x);
					    u_xlat1.x = u_xlat1.x * _BubbleParams.w;
					    u_xlat1.x = exp2(u_xlat1.x);
					    u_xlat1.x = (-u_xlat1.x) + 1.0;
					    u_xlat11.z = u_xlat1.x * _BubbleParams.x + u_xlat2.x;
					    u_xlatb1 = u_xlat11.z<u_xlat13.z;
					    u_xlat1.xyz = (bool(u_xlatb1)) ? u_xlat11.xyz : u_xlat13.xyz;
					    u_xlat25 = u_xlat1.z * _BubbleParams.y;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat37 = (-u_xlat25) * u_xlat25 + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat2.x = (-u_xlat25) + 1.0;
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.z;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = min(u_xlat2.x, 1.0);
					    u_xlat2.x = u_xlat2.x * 3.1415;
					    u_xlat2.x = cos(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + 0.5;
					    u_xlat25 = u_xlat25 * 3.1415;
					    u_xlat25 = cos(u_xlat25);
					    u_xlat25 = u_xlat25 * 0.600000024 + 0.5;
					    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat25 = float(1.0) / u_xlat25;
					    u_xlat37 = u_xlat37 + (-u_xlat2.x);
					    u_xlat3.z = u_xlat25 * u_xlat37 + u_xlat2.x;
					    u_xlat1.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat1.xy);
					    u_xlat25 = dot(u_xlat1.xy, u_xlat1.xy);
					    u_xlat25 = inversesqrt(u_xlat25);
					    u_xlat1.xy = vec2(u_xlat25) * u_xlat1.xy;
					    u_xlat25 = u_xlat3.z * u_xlat3.z;
					    u_xlat37 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat37 = sqrt(u_xlat37);
					    u_xlat3.xy = vec2(u_xlat37) * u_xlat1.xy;
					    u_xlatb1 = u_xlat25!=0.0;
					    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);
					    u_xlat13.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat13.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat14.x = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat14.x = min(abs(u_xlat14.x), 1.0);
					    u_xlat14.x = _BuildUp * 2.0 + (-u_xlat14.x);
					    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
					    u_xlat14.x = u_xlat14.x * 3.1415;
					    u_xlat14.x = cos(u_xlat14.x);
					    u_xlat14.x = (-u_xlat14.x) * 0.5 + 0.5;
					    u_xlat14.xy = u_xlat3.xy * u_xlat14.xx + (-vec2(_AlphaThreshold));
					    u_xlat38 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat14.xy / vec2(u_xlat38);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat14.x = log2(u_xlat3.x);
					    u_xlat14.x = u_xlat14.x * 1.5;
					    u_xlat2.y = exp2(u_xlat14.x);
					    u_xlat2.xz = (-u_xlat2.xy) + vec2(1.0, 1.0);
					    u_xlat5.x = (-u_xlat2.z) + u_xlat2.x;
					    u_xlat5.y = float(0.0);
					    u_xlat29.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat29.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat3 = texture(_AlbedoRampTex, u_xlat29.xy);
					    u_xlat2.xzw = u_xlat3.xyz * u_xlat6.xyz;
					    u_xlat3.x = u_xlat4.w * u_xlat6.w;
					    u_xlat15.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb15.xy = lessThan(u_xlat15.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat4.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(vs_TEXCOORD4.xzxx, u_xlat4.xyxx).xy;
					    u_xlatb15.x = u_xlatb15.x || u_xlatb4.x;
					    u_xlatb15.x = u_xlatb15.y || u_xlatb15.x;
					    u_xlatb15.x = u_xlatb4.y || u_xlatb15.x;
					    u_xlat3.x = (u_xlatb15.x) ? 0.0 : u_xlat3.x;
					    u_xlat15.x = log2(_AlphaThreshold);
					    u_xlat15.x = u_xlat15.x * 0.300000012;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat2.xzw = u_xlat2.xzw * u_xlat15.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat15.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat4.x = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat4.x + u_xlat3.x;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat5 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat5.x = u_xlat5.w * u_xlat5.x;
					    u_xlat4.xy = u_xlat5.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat3.x = dot(u_xlat4.xy, u_xlat4.xy);
					    u_xlat3.x = min(u_xlat3.x, 1.0);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat4.z = sqrt(u_xlat3.x);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat37) + (-u_xlat4.xyz);
					    u_xlat1.xyz = u_xlat2.yyy * u_xlat1.xyz + u_xlat4.xyz;
					    u_xlat37 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat37 = inversesqrt(u_xlat37);
					    u_xlat1.xyz = vec3(u_xlat37) * u_xlat1.xyz;
					    u_xlat4.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat4.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat4.xy;
					    u_xlat4.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat4.xy;
					    u_xlat4.xy = u_xlat4.xy + unity_WorldToLight[3].xy;
					    u_xlatb37 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb37){
					        u_xlatb37 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat5.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat5.xyz;
					        u_xlat5.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat5.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat5.xyz = (bool(u_xlatb37)) ? u_xlat5.xyz : vs_TEXCOORD4.xyz;
					        u_xlat5.xyz = u_xlat5.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat5.yzw = u_xlat5.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat37 = u_xlat5.y * 0.25 + 0.75;
					        u_xlat14.x = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat5.x = max(u_xlat37, u_xlat14.x);
					        u_xlat5 = texture(unity_ProbeVolumeSH, u_xlat5.xzw);
					    } else {
					        u_xlat5.x = float(1.0);
					        u_xlat5.y = float(1.0);
					        u_xlat5.z = float(1.0);
					        u_xlat5.w = float(1.0);
					    }
					    u_xlat37 = dot(u_xlat5, unity_OcclusionMaskSelector);
					    u_xlat37 = clamp(u_xlat37, 0.0, 1.0);
					    u_xlat5 = texture(_LightTexture0, u_xlat4.xy);
					    u_xlat37 = u_xlat37 * u_xlat5.w;
					    u_xlat4.x = dot(vs_TEXCOORD1.xyz, u_xlat1.xyz);
					    u_xlat4.y = dot(vs_TEXCOORD2.xyz, u_xlat1.xyz);
					    u_xlat4.z = dot(vs_TEXCOORD3.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat4.xyz, u_xlat4.xyz);
					    u_xlat1.x = inversesqrt(u_xlat1.x);
					    u_xlat1.xyz = u_xlat1.xxx * u_xlat4.xyz;
					    u_xlat4.xyz = vec3(u_xlat37) * _LightColor0.xyz;
					    u_xlat37 = max(u_xlat15.y, u_xlat15.x);
					    u_xlat37 = max(u_xlat15.z, u_xlat37);
					    u_xlat37 = (-u_xlat37) + 1.0;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat36) + _WorldSpaceLightPos0.xyz;
					    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat36 = max(u_xlat36, 0.00100000005);
					    u_xlat36 = inversesqrt(u_xlat36);
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    u_xlat1.x = dot(u_xlat1.xyz, u_xlat0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat12 = (-u_xlat4.w) * _Glossiness + 1.0;
					    u_xlat24 = u_xlat12 * u_xlat12;
					    u_xlat13.x = u_xlat24 * u_xlat24;
					    u_xlat1.x = u_xlat1.x * u_xlat1.x;
					    u_xlat24 = u_xlat24 * u_xlat24 + -1.0;
					    u_xlat24 = u_xlat1.x * u_xlat24 + 1.00001001;
					    u_xlat0.x = u_xlat0.x * u_xlat0.x;
					    u_xlat0.x = max(u_xlat0.x, 0.100000001);
					    u_xlat12 = u_xlat12 * u_xlat12 + 0.5;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat12 = u_xlat24 * u_xlat24;
					    u_xlat0.x = u_xlat12 * u_xlat0.x;
					    u_xlat0.x = u_xlat0.x * 4.0;
					    u_xlat0.x = u_xlat13.x / u_xlat0.x;
					    u_xlat0.xyz = u_xlat15.xyz * u_xlat0.xxx;
					    u_xlat0.xyz = u_xlat2.xzw * vec3(u_xlat37) + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat4.xyz * u_xlat0.xyz;
					    u_xlat0.xyz = vec3(u_xlat36) * u_xlat0.xyz;
					    u_xlat36 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat36 = (-u_xlat36) + 1.0;
					    u_xlat36 = u_xlat36 * _ProjectionParams.z;
					    u_xlat36 = max(u_xlat36, 0.0);
					    u_xlat36 = u_xlat36 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat36 = clamp(u_xlat36, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat36);
					    return;
					}"
				}
				SubProgram "d3d11 hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[2];
						vec4 _LightColor0;
						vec4 unused_0_2;
						mat4x4 unity_WorldToLight;
						float _Glossiness;
						float _SpecScale;
						vec4 _Color;
						float _AlphaThreshold;
						float _BuildUp;
						vec4 _FloorDim;
						float _NumTilesU;
						float _NumTilesV;
						float _AnimIntensity;
						float _BubbleDurationMin;
						float _BubbleDurationMax;
						float _AnimScale;
						float _Mask;
						float _BubbleDrift;
						vec4 _Randomization;
						vec4 _RandomizationPhase;
						vec4 _BubbleParams;
						vec4 _RandomizationMask;
						vec4 unused_0_22[2];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[3];
						vec3 _WorldSpaceCameraPos;
						vec4 _ProjectionParams;
						vec4 unused_1_4[3];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[45];
						vec4 unity_OcclusionMaskSelector;
						vec4 unused_2_3;
					};
					layout(std140) uniform UnityFog {
						vec4 unused_3_0;
						vec4 unity_FogParams;
					};
					layout(std140) uniform UnityProbeVolume {
						vec4 unity_ProbeVolumeParams;
						mat4x4 unity_ProbeVolumeWorldToObject;
						vec3 unity_ProbeVolumeSizeInv;
						vec3 unity_ProbeVolumeMin;
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _AlbedoRampTex;
					uniform  sampler2D _ColorRampTex;
					uniform  sampler2D _Specular;
					uniform  sampler2D _NormalMap;
					uniform  sampler2D _LightTexture0;
					uniform  sampler3D unity_ProbeVolumeSH;
					in  vec4 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec3 vs_TEXCOORD2;
					in  vec3 vs_TEXCOORD3;
					in  vec3 vs_TEXCOORD4;
					in  float vs_TEXCOORD6;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat2;
					vec4 u_xlat3;
					bool u_xlatb3;
					vec4 u_xlat4;
					bvec2 u_xlatb4;
					vec4 u_xlat5;
					vec4 u_xlat6;
					vec4 u_xlat7;
					vec3 u_xlat8;
					vec4 u_xlat9;
					vec3 u_xlat10;
					vec3 u_xlat11;
					vec3 u_xlat12;
					vec3 u_xlat13;
					float u_xlat14;
					vec3 u_xlat15;
					vec3 u_xlat16;
					vec2 u_xlat18;
					vec2 u_xlat20;
					vec2 u_xlat22;
					float u_xlat26;
					float u_xlat27;
					float u_xlat28;
					float u_xlat29;
					vec2 u_xlat30;
					bvec2 u_xlatb30;
					vec2 u_xlat31;
					float u_xlat39;
					bool u_xlatb39;
					float u_xlat40;
					bool u_xlatb40;
					float u_xlat41;
					bool u_xlatb41;
					float u_xlat42;
					bool u_xlatb42;
					float u_xlat43;
					bool u_xlatb43;
					float u_xlat44;
					bool u_xlatb44;
					float u_xlat45;
					bool u_xlatb45;
					float u_xlat46;
					bool u_xlatb46;
					float u_xlat47;
					bool u_xlatb47;
					float u_xlat48;
					bool u_xlatb48;
					float u_xlat49;
					void main()
					{
					    u_xlat0.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat1.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV);
					    u_xlat2 = floor(u_xlat2.xyxy);
					    u_xlat40 = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat40 = sin(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.5 + 0.5;
					    u_xlat3.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + 0.5;
					    u_xlat16.x = (-_BubbleDurationMin) + _BubbleDurationMax;
					    u_xlat3.x = u_xlat3.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat29 = _AnimScale * _Time.y;
					    u_xlat40 = _Time.y * _AnimScale + u_xlat40;
					    u_xlat40 = u_xlat40 / u_xlat3.x;
					    u_xlat3.x = floor(u_xlat40);
					    u_xlat40 = fract(u_xlat40);
					    u_xlat42 = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat42 = u_xlat3.x + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat4.x = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat4.x = u_xlat4.x * _AnimIntensity + u_xlat3.x;
					    u_xlat4.x = u_xlat40 * _BubbleDrift + u_xlat4.x;
					    u_xlat4.x = sin(u_xlat4.x);
					    u_xlat4.x = u_xlat4.x * 0.5 + u_xlat2.z;
					    u_xlat30.x = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat3.x = u_xlat30.x * _AnimIntensity + u_xlat3.x;
					    u_xlat3.x = u_xlat40 * _BubbleDrift + u_xlat3.x;
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat4.y = u_xlat3.x * 0.5 + u_xlat2.w;
					    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
					    u_xlatb3 = u_xlat42<_Mask;
					    u_xlat4.xy = (bool(u_xlatb3)) ? vec2(9999999.0, 9999999.0) : u_xlat4.xy;
					    u_xlat5 = u_xlat2.zwzw + vec4(-1.0, 0.0, 0.0, -1.0);
					    u_xlat3.x = dot(u_xlat5.xy, _RandomizationPhase.xy);
					    u_xlat3.x = sin(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 0.5 + u_xlat29;
					    u_xlat42 = dot(u_xlat5.xy, _RandomizationPhase.zw);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + 0.5;
					    u_xlat42 = u_xlat42 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat3.x = u_xlat3.x + 0.5;
					    u_xlat3.x = u_xlat3.x / u_xlat42;
					    u_xlat42 = floor(u_xlat3.x);
					    u_xlat3.x = fract(u_xlat3.x);
					    u_xlat43 = dot(u_xlat5.xy, _RandomizationMask.xy);
					    u_xlat43 = u_xlat42 + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat6.x = dot(u_xlat5.xy, _Randomization.xy);
					    u_xlat6.x = u_xlat6.x * _AnimIntensity + u_xlat42;
					    u_xlat6.x = u_xlat3.x * _BubbleDrift + u_xlat6.x;
					    u_xlat6.x = sin(u_xlat6.x);
					    u_xlat6.x = u_xlat6.x * 0.5 + u_xlat5.x;
					    u_xlat5.x = dot(u_xlat5.yx, _Randomization.zw);
					    u_xlat42 = u_xlat5.x * _AnimIntensity + u_xlat42;
					    u_xlat42 = u_xlat3.x * _BubbleDrift + u_xlat42;
					    u_xlat42 = sin(u_xlat42);
					    u_xlat6.y = u_xlat42 * 0.5 + u_xlat5.y;
					    u_xlat5.xy = u_xlat6.xy + vec2(0.5, 0.5);
					    u_xlatb42 = u_xlat43<_Mask;
					    u_xlat6.xy = (bool(u_xlatb42)) ? vec2(9999999.0, 9999999.0) : u_xlat5.xy;
					    u_xlat42 = dot(u_xlat5.zw, _RandomizationPhase.xy);
					    u_xlat42 = sin(u_xlat42);
					    u_xlat42 = u_xlat42 * 0.5 + u_xlat29;
					    u_xlat43 = dot(u_xlat5.zw, _RandomizationPhase.zw);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + 0.5;
					    u_xlat43 = u_xlat43 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat42 = u_xlat42 + 0.5;
					    u_xlat42 = u_xlat42 / u_xlat43;
					    u_xlat43 = floor(u_xlat42);
					    u_xlat42 = fract(u_xlat42);
					    u_xlat5.x = dot(u_xlat5.zw, _RandomizationMask.xy);
					    u_xlat5.x = u_xlat43 + u_xlat5.x;
					    u_xlat5.x = sin(u_xlat5.x);
					    u_xlat5.x = u_xlat5.x * 0.5 + 0.5;
					    u_xlat18.x = dot(u_xlat5.zw, _Randomization.xy);
					    u_xlat18.x = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat18.x = u_xlat42 * _BubbleDrift + u_xlat18.x;
					    u_xlat18.x = sin(u_xlat18.x);
					    u_xlat7.x = u_xlat18.x * 0.5 + u_xlat5.z;
					    u_xlat18.x = dot(u_xlat5.wz, _Randomization.zw);
					    u_xlat43 = u_xlat18.x * _AnimIntensity + u_xlat43;
					    u_xlat43 = u_xlat42 * _BubbleDrift + u_xlat43;
					    u_xlat43 = sin(u_xlat43);
					    u_xlat7.y = u_xlat43 * 0.5 + u_xlat5.w;
					    u_xlat18.xy = u_xlat7.xy + vec2(0.5, 0.5);
					    u_xlatb43 = u_xlat5.x<_Mask;
					    u_xlat5.xy = (bool(u_xlatb43)) ? vec2(9999999.0, 9999999.0) : u_xlat18.xy;
					    u_xlat7 = u_xlat2.zwzw + vec4(-1.0, -1.0, 1.0, 0.0);
					    u_xlat43 = dot(u_xlat7.xy, _RandomizationPhase.xy);
					    u_xlat43 = sin(u_xlat43);
					    u_xlat43 = u_xlat43 * 0.5 + u_xlat29;
					    u_xlat44 = dot(u_xlat7.xy, _RandomizationPhase.zw);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + 0.5;
					    u_xlat44 = u_xlat44 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat43 = u_xlat43 + 0.5;
					    u_xlat43 = u_xlat43 / u_xlat44;
					    u_xlat44 = floor(u_xlat43);
					    u_xlat43 = fract(u_xlat43);
					    u_xlat45 = dot(u_xlat7.xy, _RandomizationMask.xy);
					    u_xlat45 = u_xlat44 + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat8.x = dot(u_xlat7.xy, _Randomization.xy);
					    u_xlat8.x = u_xlat8.x * _AnimIntensity + u_xlat44;
					    u_xlat8.x = u_xlat43 * _BubbleDrift + u_xlat8.x;
					    u_xlat8.x = sin(u_xlat8.x);
					    u_xlat8.x = u_xlat8.x * 0.5 + u_xlat7.x;
					    u_xlat7.x = dot(u_xlat7.yx, _Randomization.zw);
					    u_xlat44 = u_xlat7.x * _AnimIntensity + u_xlat44;
					    u_xlat44 = u_xlat43 * _BubbleDrift + u_xlat44;
					    u_xlat44 = sin(u_xlat44);
					    u_xlat8.y = u_xlat44 * 0.5 + u_xlat7.y;
					    u_xlat7.xy = u_xlat8.xy + vec2(0.5, 0.5);
					    u_xlatb44 = u_xlat45<_Mask;
					    u_xlat8.xy = (bool(u_xlatb44)) ? vec2(9999999.0, 9999999.0) : u_xlat7.xy;
					    u_xlat44 = dot(u_xlat7.zw, _RandomizationPhase.xy);
					    u_xlat44 = sin(u_xlat44);
					    u_xlat44 = u_xlat44 * 0.5 + u_xlat29;
					    u_xlat45 = dot(u_xlat7.zw, _RandomizationPhase.zw);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + 0.5;
					    u_xlat45 = u_xlat45 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat44 = u_xlat44 + 0.5;
					    u_xlat44 = u_xlat44 / u_xlat45;
					    u_xlat45 = floor(u_xlat44);
					    u_xlat44 = fract(u_xlat44);
					    u_xlat7.x = dot(u_xlat7.zw, _RandomizationMask.xy);
					    u_xlat7.x = u_xlat45 + u_xlat7.x;
					    u_xlat7.x = sin(u_xlat7.x);
					    u_xlat7.x = u_xlat7.x * 0.5 + 0.5;
					    u_xlat20.x = dot(u_xlat7.zw, _Randomization.xy);
					    u_xlat20.x = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat20.x = u_xlat44 * _BubbleDrift + u_xlat20.x;
					    u_xlat20.x = sin(u_xlat20.x);
					    u_xlat9.x = u_xlat20.x * 0.5 + u_xlat7.z;
					    u_xlat20.x = dot(u_xlat7.wz, _Randomization.zw);
					    u_xlat45 = u_xlat20.x * _AnimIntensity + u_xlat45;
					    u_xlat45 = u_xlat44 * _BubbleDrift + u_xlat45;
					    u_xlat45 = sin(u_xlat45);
					    u_xlat9.y = u_xlat45 * 0.5 + u_xlat7.w;
					    u_xlat20.xy = u_xlat9.xy + vec2(0.5, 0.5);
					    u_xlatb45 = u_xlat7.x<_Mask;
					    u_xlat7.xy = (bool(u_xlatb45)) ? vec2(9999999.0, 9999999.0) : u_xlat20.xy;
					    u_xlat9 = u_xlat2.zwzw + vec4(0.0, 1.0, 1.0, 1.0);
					    u_xlat45 = dot(u_xlat9.xy, _RandomizationPhase.xy);
					    u_xlat45 = sin(u_xlat45);
					    u_xlat45 = u_xlat45 * 0.5 + u_xlat29;
					    u_xlat46 = dot(u_xlat9.xy, _RandomizationPhase.zw);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + 0.5;
					    u_xlat46 = u_xlat46 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat45 = u_xlat45 + 0.5;
					    u_xlat45 = u_xlat45 / u_xlat46;
					    u_xlat46 = floor(u_xlat45);
					    u_xlat45 = fract(u_xlat45);
					    u_xlat47 = dot(u_xlat9.xy, _RandomizationMask.xy);
					    u_xlat47 = u_xlat46 + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat10.x = dot(u_xlat9.xy, _Randomization.xy);
					    u_xlat10.x = u_xlat10.x * _AnimIntensity + u_xlat46;
					    u_xlat10.x = u_xlat45 * _BubbleDrift + u_xlat10.x;
					    u_xlat10.x = sin(u_xlat10.x);
					    u_xlat10.x = u_xlat10.x * 0.5 + u_xlat9.x;
					    u_xlat9.x = dot(u_xlat9.yx, _Randomization.zw);
					    u_xlat46 = u_xlat9.x * _AnimIntensity + u_xlat46;
					    u_xlat46 = u_xlat45 * _BubbleDrift + u_xlat46;
					    u_xlat46 = sin(u_xlat46);
					    u_xlat10.y = u_xlat46 * 0.5 + u_xlat9.y;
					    u_xlat9.xy = u_xlat10.xy + vec2(0.5, 0.5);
					    u_xlatb46 = u_xlat47<_Mask;
					    u_xlat10.xy = (bool(u_xlatb46)) ? vec2(9999999.0, 9999999.0) : u_xlat9.xy;
					    u_xlat46 = dot(u_xlat9.zw, _RandomizationPhase.xy);
					    u_xlat46 = sin(u_xlat46);
					    u_xlat46 = u_xlat46 * 0.5 + u_xlat29;
					    u_xlat47 = dot(u_xlat9.zw, _RandomizationPhase.zw);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + 0.5;
					    u_xlat47 = u_xlat47 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat46 = u_xlat46 + 0.5;
					    u_xlat46 = u_xlat46 / u_xlat47;
					    u_xlat47 = floor(u_xlat46);
					    u_xlat46 = fract(u_xlat46);
					    u_xlat9.x = dot(u_xlat9.zw, _RandomizationMask.xy);
					    u_xlat9.x = u_xlat47 + u_xlat9.x;
					    u_xlat9.x = sin(u_xlat9.x);
					    u_xlat9.x = u_xlat9.x * 0.5 + 0.5;
					    u_xlat22.x = dot(u_xlat9.zw, _Randomization.xy);
					    u_xlat22.x = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat22.x = u_xlat46 * _BubbleDrift + u_xlat22.x;
					    u_xlat22.x = sin(u_xlat22.x);
					    u_xlat11.x = u_xlat22.x * 0.5 + u_xlat9.z;
					    u_xlat22.x = dot(u_xlat9.wz, _Randomization.zw);
					    u_xlat47 = u_xlat22.x * _AnimIntensity + u_xlat47;
					    u_xlat47 = u_xlat46 * _BubbleDrift + u_xlat47;
					    u_xlat47 = sin(u_xlat47);
					    u_xlat11.y = u_xlat47 * 0.5 + u_xlat9.w;
					    u_xlat22.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb47 = u_xlat9.x<_Mask;
					    u_xlat9.xy = (bool(u_xlatb47)) ? vec2(9999999.0, 9999999.0) : u_xlat22.xy;
					    u_xlat2 = u_xlat2 + vec4(-1.0, 1.0, 1.0, -1.0);
					    u_xlat47 = dot(u_xlat2.xy, _RandomizationPhase.xy);
					    u_xlat47 = sin(u_xlat47);
					    u_xlat47 = u_xlat47 * 0.5 + u_xlat29;
					    u_xlat48 = dot(u_xlat2.xy, _RandomizationPhase.zw);
					    u_xlat48 = sin(u_xlat48);
					    u_xlat48 = u_xlat48 * 0.5 + 0.5;
					    u_xlat48 = u_xlat48 * u_xlat16.x + _BubbleDurationMin;
					    u_xlat47 = u_xlat47 + 0.5;
					    u_xlat47 = u_xlat47 / u_xlat48;
					    u_xlat48 = floor(u_xlat47);
					    u_xlat47 = fract(u_xlat47);
					    u_xlat49 = dot(u_xlat2.xy, _RandomizationMask.xy);
					    u_xlat49 = u_xlat48 + u_xlat49;
					    u_xlat49 = sin(u_xlat49);
					    u_xlat49 = u_xlat49 * 0.5 + 0.5;
					    u_xlat11.x = dot(u_xlat2.xy, _Randomization.xy);
					    u_xlat11.x = u_xlat11.x * _AnimIntensity + u_xlat48;
					    u_xlat11.x = u_xlat47 * _BubbleDrift + u_xlat11.x;
					    u_xlat11.x = sin(u_xlat11.x);
					    u_xlat11.x = u_xlat11.x * 0.5 + u_xlat2.x;
					    u_xlat2.x = dot(u_xlat2.yx, _Randomization.zw);
					    u_xlat2.x = u_xlat2.x * _AnimIntensity + u_xlat48;
					    u_xlat2.x = u_xlat47 * _BubbleDrift + u_xlat2.x;
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat11.y = u_xlat2.x * 0.5 + u_xlat2.y;
					    u_xlat2.xy = u_xlat11.xy + vec2(0.5, 0.5);
					    u_xlatb48 = u_xlat49<_Mask;
					    u_xlat11.xy = (bool(u_xlatb48)) ? vec2(9999999.0, 9999999.0) : u_xlat2.xy;
					    u_xlat2.x = dot(u_xlat2.zw, _RandomizationPhase.xy);
					    u_xlat2.x = sin(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * 0.5 + u_xlat29;
					    u_xlat15.x = dot(u_xlat2.zw, _RandomizationPhase.zw);
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat15.x = u_xlat15.x * 0.5 + 0.5;
					    u_xlat15.x = u_xlat15.x * u_xlat16.x + _BubbleDurationMin;
					    u_xlat2.x = u_xlat2.x + 0.5;
					    u_xlat2.x = u_xlat2.x / u_xlat15.x;
					    u_xlat15.x = floor(u_xlat2.x);
					    u_xlat2.x = fract(u_xlat2.x);
					    u_xlat16.x = dot(u_xlat2.zw, _RandomizationMask.xy);
					    u_xlat16.x = u_xlat15.x + u_xlat16.x;
					    u_xlat16.x = sin(u_xlat16.x);
					    u_xlat16.x = u_xlat16.x * 0.5 + 0.5;
					    u_xlat29 = dot(u_xlat2.zw, _Randomization.xy);
					    u_xlat29 = u_xlat29 * _AnimIntensity + u_xlat15.x;
					    u_xlat29 = u_xlat2.x * _BubbleDrift + u_xlat29;
					    u_xlat29 = sin(u_xlat29);
					    u_xlat12.x = u_xlat29 * 0.5 + u_xlat2.z;
					    u_xlat28 = dot(u_xlat2.wz, _Randomization.zw);
					    u_xlat15.x = u_xlat28 * _AnimIntensity + u_xlat15.x;
					    u_xlat15.x = u_xlat2.x * _BubbleDrift + u_xlat15.x;
					    u_xlat15.x = sin(u_xlat15.x);
					    u_xlat12.y = u_xlat15.x * 0.5 + u_xlat2.w;
					    u_xlat15.xy = u_xlat12.xy + vec2(0.5, 0.5);
					    u_xlatb41 = u_xlat16.x<_Mask;
					    u_xlat12.xy = (bool(u_xlatb41)) ? vec2(9999999.0, 9999999.0) : u_xlat15.xy;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat4.xy);
					    u_xlat15.x = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat15.x = sqrt(u_xlat15.x);
					    u_xlat40 = log2(u_xlat40);
					    u_xlat40 = u_xlat40 * _BubbleParams.w;
					    u_xlat40 = exp2(u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat4.z = u_xlat40 * _BubbleParams.x + u_xlat15.x;
					    u_xlat15.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat6.xy);
					    u_xlat40 = dot(u_xlat15.xy, u_xlat15.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat15.x = log2(u_xlat3.x);
					    u_xlat15.x = u_xlat15.x * _BubbleParams.w;
					    u_xlat15.x = exp2(u_xlat15.x);
					    u_xlat15.x = (-u_xlat15.x) + 1.0;
					    u_xlat6.z = u_xlat15.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat6.z<u_xlat4.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat6.xyz : u_xlat4.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat5.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat42);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat5.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat5.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat5.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat8.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat43);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat8.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat8.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat8.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat7.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat44);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat7.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat7.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat10.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat45);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat10.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat10.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat10.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat9.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat46);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat9.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat9.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat9.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat11.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat3.x = log2(u_xlat47);
					    u_xlat3.x = u_xlat3.x * _BubbleParams.w;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat3.x = (-u_xlat3.x) + 1.0;
					    u_xlat11.z = u_xlat3.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat11.z<u_xlat15.z;
					    u_xlat15.xyz = (bool(u_xlatb40)) ? u_xlat11.xyz : u_xlat15.xyz;
					    u_xlat3.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat12.xy);
					    u_xlat40 = dot(u_xlat3.xy, u_xlat3.xy);
					    u_xlat40 = sqrt(u_xlat40);
					    u_xlat2.x = log2(u_xlat2.x);
					    u_xlat2.x = u_xlat2.x * _BubbleParams.w;
					    u_xlat2.x = exp2(u_xlat2.x);
					    u_xlat2.x = (-u_xlat2.x) + 1.0;
					    u_xlat12.z = u_xlat2.x * _BubbleParams.x + u_xlat40;
					    u_xlatb40 = u_xlat12.z<u_xlat15.z;
					    u_xlat2.xyz = (bool(u_xlatb40)) ? u_xlat12.xyz : u_xlat15.xyz;
					    u_xlat40 = u_xlat2.z * _BubbleParams.y;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat28 = (-u_xlat40) * u_xlat40 + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat41 = (-u_xlat40) + 1.0;
					    u_xlat41 = log2(u_xlat41);
					    u_xlat41 = u_xlat41 * _BubbleParams.z;
					    u_xlat41 = exp2(u_xlat41);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = u_xlat41 * 3.1415;
					    u_xlat41 = cos(u_xlat41);
					    u_xlat41 = u_xlat41 * 0.5 + 0.5;
					    u_xlat40 = u_xlat40 * 3.1415;
					    u_xlat40 = cos(u_xlat40);
					    u_xlat40 = u_xlat40 * 0.600000024 + 0.5;
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat40 = float(1.0) / u_xlat40;
					    u_xlat28 = (-u_xlat41) + u_xlat28;
					    u_xlat3.z = u_xlat40 * u_xlat28 + u_xlat41;
					    u_xlat2.xy = vs_TEXCOORD4.xz * vec2(_NumTilesU, _NumTilesV) + (-u_xlat2.xy);
					    u_xlat40 = dot(u_xlat2.xy, u_xlat2.xy);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xy = vec2(u_xlat40) * u_xlat2.xy;
					    u_xlat40 = u_xlat3.z * u_xlat3.z;
					    u_xlat28 = (-u_xlat3.z) * u_xlat3.z + 1.0;
					    u_xlat28 = sqrt(u_xlat28);
					    u_xlat3.xy = vec2(u_xlat28) * u_xlat2.xy;
					    u_xlatb40 = u_xlat40!=0.0;
					    u_xlat40 = u_xlatb40 ? 1.0 : float(0.0);
					    u_xlat2.xyz = u_xlat3.xyz + vec3(-0.0, -0.0, -1.0);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz + vec3(0.0, 0.0, 1.0);
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat3 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat29 = vs_TEXCOORD0.y * 2.0 + -1.0;
					    u_xlat29 = min(abs(u_xlat29), 1.0);
					    u_xlat29 = _BuildUp * 2.0 + (-u_xlat29);
					    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
					    u_xlat29 = u_xlat29 * 3.1415;
					    u_xlat29 = cos(u_xlat29);
					    u_xlat29 = (-u_xlat29) * 0.5 + 0.5;
					    u_xlat3.xy = u_xlat3.xy * vec2(u_xlat29) + (-vec2(_AlphaThreshold));
					    u_xlat29 = (-_AlphaThreshold) + 1.0;
					    u_xlat3.xy = u_xlat3.xy / vec2(u_xlat29);
					    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
					    u_xlat3.z = 0.0;
					    u_xlat4 = texture(_AlbedoRampTex, u_xlat3.xz);
					    u_xlat3.x = log2(u_xlat3.x);
					    u_xlat3.x = u_xlat3.x * 1.5;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat29 = (-u_xlat3.x) + 1.0;
					    u_xlat5.x = u_xlat41 + (-u_xlat29);
					    u_xlat5.y = float(0.0);
					    u_xlat31.y = float(0.0);
					    u_xlat6 = texture(_ColorRampTex, u_xlat5.xy);
					    u_xlat6 = u_xlat6 * _Color;
					    u_xlat31.x = _AlphaThreshold * 0.200000003 + u_xlat3.y;
					    u_xlat7 = texture(_AlbedoRampTex, u_xlat31.xy);
					    u_xlat16.xyz = u_xlat6.xyz * u_xlat7.xyz;
					    u_xlat41 = u_xlat4.w * u_xlat6.w;
					    u_xlat4.xy = _FloorDim.zw * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb4.xy = lessThan(u_xlat4.xyxx, vs_TEXCOORD4.xzxx).xy;
					    u_xlat30.xy = (-_FloorDim.zw) * vec2(0.5, 0.5) + _FloorDim.xy;
					    u_xlatb30.xy = lessThan(vs_TEXCOORD4.xzxz, u_xlat30.xyxy).xy;
					    u_xlatb4.x = u_xlatb30.x || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb4.y || u_xlatb4.x;
					    u_xlatb4.x = u_xlatb30.y || u_xlatb4.x;
					    u_xlat41 = (u_xlatb4.x) ? 0.0 : u_xlat41;
					    u_xlat4.x = log2(_AlphaThreshold);
					    u_xlat4.x = u_xlat4.x * 0.300000012;
					    u_xlat4.x = exp2(u_xlat4.x);
					    u_xlat4.x = (-u_xlat4.x) + 1.0;
					    u_xlat16.xyz = u_xlat16.xyz * u_xlat4.xxx;
					    u_xlat4 = texture(_Specular, u_xlat5.xy);
					    u_xlat5.xyz = u_xlat4.xyz * vec3(vec3(_SpecScale, _SpecScale, _SpecScale));
					    u_xlat44 = _AlphaThreshold * _AlphaThreshold;
					    SV_Target0.w = (-_AlphaThreshold) * u_xlat44 + u_xlat41;
					    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);
					    u_xlat6 = texture(_NormalMap, vs_TEXCOORD0.zw);
					    u_xlat6.x = u_xlat6.w * u_xlat6.x;
					    u_xlat6.xy = u_xlat6.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
					    u_xlat41 = dot(u_xlat6.xy, u_xlat6.xy);
					    u_xlat41 = min(u_xlat41, 1.0);
					    u_xlat41 = (-u_xlat41) + 1.0;
					    u_xlat6.z = sqrt(u_xlat41);
					    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat40) + (-u_xlat6.xyz);
					    u_xlat2.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat6.xyz;
					    u_xlat40 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat40 = inversesqrt(u_xlat40);
					    u_xlat2.xyz = vec3(u_xlat40) * u_xlat2.xyz;
					    u_xlat6.xy = vs_TEXCOORD4.yy * unity_WorldToLight[1].xy;
					    u_xlat6.xy = unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat6.xy;
					    u_xlat6.xy = unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat6.xy;
					    u_xlat6.xy = u_xlat6.xy + unity_WorldToLight[3].xy;
					    u_xlatb40 = unity_ProbeVolumeParams.x==1.0;
					    if(u_xlatb40){
					        u_xlatb40 = unity_ProbeVolumeParams.y==1.0;
					        u_xlat7.xyz = vs_TEXCOORD4.yyy * unity_ProbeVolumeWorldToObject[1].xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[0].xyz * vs_TEXCOORD4.xxx + u_xlat7.xyz;
					        u_xlat7.xyz = unity_ProbeVolumeWorldToObject[2].xyz * vs_TEXCOORD4.zzz + u_xlat7.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + unity_ProbeVolumeWorldToObject[3].xyz;
					        u_xlat7.xyz = (bool(u_xlatb40)) ? u_xlat7.xyz : vs_TEXCOORD4.xyz;
					        u_xlat7.xyz = u_xlat7.xyz + (-unity_ProbeVolumeMin.xyz);
					        u_xlat7.yzw = u_xlat7.xyz * unity_ProbeVolumeSizeInv.xyz;
					        u_xlat40 = u_xlat7.y * 0.25 + 0.75;
					        u_xlat41 = unity_ProbeVolumeParams.z * 0.5 + 0.75;
					        u_xlat7.x = max(u_xlat40, u_xlat41);
					        u_xlat7 = texture(unity_ProbeVolumeSH, u_xlat7.xzw);
					    } else {
					        u_xlat7.x = float(1.0);
					        u_xlat7.y = float(1.0);
					        u_xlat7.z = float(1.0);
					        u_xlat7.w = float(1.0);
					    }
					    u_xlat40 = dot(u_xlat7, unity_OcclusionMaskSelector);
					    u_xlat40 = clamp(u_xlat40, 0.0, 1.0);
					    u_xlat6 = texture(_LightTexture0, u_xlat6.xy);
					    u_xlat40 = u_xlat40 * u_xlat6.w;
					    u_xlat6.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);
					    u_xlat6.y = dot(vs_TEXCOORD2.xyz, u_xlat2.xyz);
					    u_xlat6.z = dot(vs_TEXCOORD3.xyz, u_xlat2.xyz);
					    u_xlat2.x = dot(u_xlat6.xyz, u_xlat6.xyz);
					    u_xlat2.x = inversesqrt(u_xlat2.x);
					    u_xlat2.xyz = u_xlat2.xxx * u_xlat6.xyz;
					    u_xlat6.xyz = vec3(u_xlat40) * _LightColor0.xyz;
					    u_xlat40 = max(u_xlat5.y, u_xlat5.x);
					    u_xlat40 = max(u_xlat5.z, u_xlat40);
					    u_xlat40 = (-u_xlat40) + 1.0;
					    u_xlat3.xyz = vec3(u_xlat40) * u_xlat16.xyz;
					    u_xlat4 = (-u_xlat4.wxyz) * vec4(_Glossiness, _SpecScale, _SpecScale, _SpecScale) + vec4(1.0, 1.0, 1.0, 1.0);
					    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;
					    u_xlat39 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat39 = max(u_xlat39, 0.00100000005);
					    u_xlat39 = inversesqrt(u_xlat39);
					    u_xlat0.xyz = vec3(u_xlat39) * u_xlat0.xyz;
					    u_xlat39 = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat1.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat14 = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat13.x = u_xlat0.x * u_xlat0.x;
					    u_xlat13.x = dot(u_xlat13.xx, u_xlat4.xx);
					    u_xlat13.x = u_xlat13.x + -0.5;
					    u_xlat26 = (-u_xlat1.x) + 1.0;
					    u_xlat27 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat27 * u_xlat27;
					    u_xlat26 = u_xlat26 * u_xlat27;
					    u_xlat26 = u_xlat13.x * u_xlat26 + 1.0;
					    u_xlat27 = -abs(u_xlat39) + 1.0;
					    u_xlat40 = u_xlat27 * u_xlat27;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat27 = u_xlat27 * u_xlat40;
					    u_xlat13.x = u_xlat13.x * u_xlat27 + 1.0;
					    u_xlat13.x = u_xlat13.x * u_xlat26;
					    u_xlat26 = u_xlat4.x * u_xlat4.x;
					    u_xlat26 = max(u_xlat26, 0.00200000009);
					    u_xlat27 = (-u_xlat26) + 1.0;
					    u_xlat40 = abs(u_xlat39) * u_xlat27 + u_xlat26;
					    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat26;
					    u_xlat39 = abs(u_xlat39) * u_xlat27;
					    u_xlat39 = u_xlat1.x * u_xlat40 + u_xlat39;
					    u_xlat39 = u_xlat39 + 9.99999975e-06;
					    u_xlat39 = 0.5 / u_xlat39;
					    u_xlat26 = u_xlat26 * u_xlat26;
					    u_xlat27 = u_xlat14 * u_xlat26 + (-u_xlat14);
					    u_xlat14 = u_xlat27 * u_xlat14 + 1.0;
					    u_xlat26 = u_xlat26 * 0.318309873;
					    u_xlat14 = u_xlat14 * u_xlat14 + 1.00000001e-07;
					    u_xlat26 = u_xlat26 / u_xlat14;
					    u_xlat26 = u_xlat26 * u_xlat39;
					    u_xlat13.y = u_xlat26 * 3.14159274;
					    u_xlat13.xy = u_xlat1.xx * u_xlat13.xy;
					    u_xlat26 = max(u_xlat13.y, 0.0);
					    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);
					    u_xlatb39 = u_xlat39!=0.0;
					    u_xlat39 = u_xlatb39 ? 1.0 : float(0.0);
					    u_xlat26 = u_xlat39 * u_xlat26;
					    u_xlat1.xyz = u_xlat13.xxx * u_xlat6.xyz;
					    u_xlat13.xyz = u_xlat6.xyz * vec3(u_xlat26);
					    u_xlat0.x = (-u_xlat0.x) + 1.0;
					    u_xlat40 = u_xlat0.x * u_xlat0.x;
					    u_xlat40 = u_xlat40 * u_xlat40;
					    u_xlat0.x = u_xlat0.x * u_xlat40;
					    u_xlat2.xyz = u_xlat4.yzw * u_xlat0.xxx + u_xlat5.xyz;
					    u_xlat0.xyz = u_xlat13.xyz * u_xlat2.xyz;
					    u_xlat0.xyz = u_xlat3.xyz * u_xlat1.xyz + u_xlat0.xyz;
					    u_xlat39 = vs_TEXCOORD6 / _ProjectionParams.y;
					    u_xlat39 = (-u_xlat39) + 1.0;
					    u_xlat39 = u_xlat39 * _ProjectionParams.z;
					    u_xlat39 = max(u_xlat39, 0.0);
					    u_xlat39 = u_xlat39 * unity_FogParams.z + unity_FogParams.w;
					    u_xlat39 = clamp(u_xlat39, 0.0, 1.0);
					    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat39);
					    return;
					}"
				}
			}
		}
	}
}